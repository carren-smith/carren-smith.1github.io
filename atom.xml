<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerry那些事儿</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-10T12:23:47.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jerry_Cai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《断舍离》_读书笔记</title>
    <link href="http://yoursite.com/2017/10/09/%E3%80%8A%E6%96%AD%E8%88%8D%E7%A6%BB%E3%80%8B_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/10/09/《断舍离》_读书笔记/</id>
    <published>2017-10-08T16:00:00.000Z</published>
    <updated>2017-10-10T12:23:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>《断舍离》 - [日] 山下英子</strong></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_断舍离_02.jpg" alt=""></p>
<ul>
<li><strong>断舍离，表达了通过 [ 断 ] 与 [ 舍 ] 两种行为，去达到 [ 离 ] 这一状态的目的。</strong></li>
<li>通过《断舍离》，认识了自己与物品对话的两个非常重要的角度<ol>
<li><strong>我与物品的关系：从 [ 以物品为中心 ]  向  [ 以我为中心 ] 的视角转变</strong></li>
<li><strong>时间维度 以 [ 当下 ] 为核心；</strong></li>
</ol>
</li>
</ul>
<blockquote>
<p>断，停止负面的思考模式；断绝想要进入自己家的不需要的东西。</p>
<p>舍，顺从自己的心，割舍既有；舍去非当下的、不适合自己的物品，舍去家里到处泛滥的破烂儿</p>
<p>离，达到一种释怀的状态，摒弃 “多就是好” 的观念；脱离对物品的执念，处于自在的空间</p>
</blockquote>
<ul>
<li>断舍离的主角不是物品，而是自己。这是一种以 “物品和自己的关系” 的核心来进行取舍物品的技术。你要做到的思考方式并不是 [ 这东西还能用，所以要留下来 ]，而是 [ 我要用，所以它很必要 ]。<strong>主语永远都是自己，而时间轴永远都是现在。</strong></li>
<li>物品要用才有价值；</li>
<li>物品在此时、当下，应出现在需要它的地方</li>
<li>物品处于恰当的位置，才能展现美感。</li>
</ul>
<a id="more"></a>
<blockquote>
<ol>
<li>why - 为什么要读这本书<ul>
<li>对当下生活以及精神状态的梳理</li>
</ul>
</li>
<li>what - 这本书在讲什么<ul>
<li>围绕两个核心观点：(1) 我与物品的关系 - 以我为中心； (2) 时间维度：时间轴</li>
</ul>
</li>
<li>How - 如何依次发展这个观点的<ul>
<li>what - 什么是断舍离，以及行为(do)进行简单描述</li>
<li>why failed - 为什么失败的集中原因</li>
<li>should do - 应该怎么做</li>
<li>just do - 实际的行动方法</li>
</ul>
</li>
<li>what - 对生活的指导意义<ul>
<li>重新认识了对物品以及家居整理的思维方式</li>
</ul>
</li>
<li>How - 具体怎么做<ul>
<li>通过整理自己的房间来落实到行为</li>
</ul>
</li>
</ol>
</blockquote>
<p><br></p>
<h2 id="第一章-断舍离的机制"><a href="#第一章-断舍离的机制" class="headerlink" title="第一章 断舍离的机制"></a>第一章 断舍离的机制</h2><blockquote>
<p>what</p>
</blockquote>
<ol>
<li>在考虑如何处理物品时，我们把轴错位在了<strong><u>物品与他人</u>、<u>不确定的未来和已经成为过去的过去</u></strong>上面。</li>
<li><strong>断舍离的主角不是物品，而是自己</strong>，考虑的是 “我自己” 还需不需要它。<strong>“扔了很可惜，还是留下来吧” 这种想法，就是拿物品当主角。</strong></li>
<li>要得出 “ 这种东西与当下的我很相称，对当下的我来首是必需品 “ 这样的判断，我们就必须清楚地了解自己。通过不断地筛选物品，当下的自我就会越来越鲜明地呈现在自己眼前，人也就能以此判断出准确的自我形象。</li>
<li>一个人所使用的物品，能够反映出自我形象。认识到了自我形象，反过来就会开始想要把现在用的东西替换掉。</li>
<li><strong>断舍之后，才是整理。</strong><ul>
<li>在达到 “ 舍 “ 之前就是整理物品是没有意义的。毕竟跟没用的东西说话是根本没有用的。</li>
</ul>
</li>
<li><strong>东西要用才有价值；或者说，物品全部的价值在于使用。</strong> 仅特殊的物品有收藏、回忆的价值。<ul>
<li>物品应该以必要的量出现在必要的地方，这才真正有意义。</li>
<li>通过有意识地选择让物品回归到<strong>它应该在的地方</strong>，回归到<strong>需要它的地方</strong>。这就是断舍离要做的。</li>
</ul>
</li>
</ol>
<ul>
<li>断舍离 Vs. 收纳术</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>断舍离</th>
<th>收纳术</th>
</tr>
</thead>
<tbody>
<tr>
<td>前提</td>
<td>代谢与替换</td>
<td>保管与维持</td>
</tr>
<tr>
<td><strong>主角</strong></td>
<td><strong>自己</strong></td>
<td><strong>物品</strong></td>
</tr>
<tr>
<td><strong>焦点</strong></td>
<td><strong>关系性</strong></td>
<td>物品或自己或赠送物品的对象</td>
</tr>
<tr>
<td><strong>核心轴</strong></td>
<td><strong>感性、适宜、需要、合适、舒服</strong></td>
<td><strong>物质、可惜、能用或不能用</strong></td>
</tr>
<tr>
<td><strong>时间轴</strong></td>
<td><strong>现在、当下</strong></td>
<td><strong>过去、未来</strong></td>
</tr>
<tr>
<td>意识</td>
<td>选择、决定</td>
<td>回避</td>
</tr>
<tr>
<td>手续</td>
<td>少</td>
<td>多</td>
</tr>
<tr>
<td></td>
<td>不需要</td>
<td>需要</td>
</tr>
<tr>
<td>收纳物</td>
<td>不需要</td>
<td>需要</td>
</tr>
</tbody>
</table>
<p><br></p>
<h2 id="第二章-无法丢弃的理由"><a href="#第二章-无法丢弃的理由" class="headerlink" title="第二章 无法丢弃的理由"></a>第二章 无法丢弃的理由</h2><blockquote>
<p>why failed</p>
<p>物品本来就是为了让人使用才被生产出来的。</p>
</blockquote>
<ol>
<li>入口是 “ 断 “ 的闸门，出口是 “ 舍 “ 的闸门。我们会在不知不觉中掉进折扣的陷阱，完全忘记了 “ 东西是不是适合自己的品味 “。 <strong>【对于这一点，自己做得还是比较好的；购物的时候比较理性】</strong></li>
<li><em>**</em>扔不掉东西的三种人：<ul>
<li>逃避现实型：太过忙碌，几乎没有时间待在家里</li>
<li>执着过去型：活在过去的生活当中，不愿丢弃以往的物品</li>
<li>担忧未来型：缺乏安全感；致力于投资不知何时回发生的未来的不安要素</li>
</ul>
</li>
<li>扔不掉 = 不想扔</li>
<li>可以丢弃的三类物品<ul>
<li>不用的东西：漫不经心地保存或放着不管的东西，甚至已经忘记了它的存在；只因为一想到扔掉就有所不安所以一直拖延没有扔</li>
<li><strong><u>还在用的东西</u></strong>：<strong>东西可以用，但并不喜欢，所以就随便用着。因此我们会随意地乱放，也不会珍惜</strong>。<strong>【警惕这类物品；这类是与自己不相配的东西】</strong></li>
<li>充满回忆的东西：充满了回忆与怀念，所以扔不掉</li>
</ul>
</li>
<li>物品本来就是为了让人使用才被生产出来的。<strong>如果站在物品的立场上去看的话</strong>，它们会说 “我好寂寞呀；用用我吧；你如果不用的话就把我送到一个能派上用处的地方吧。” <strong>【物品就像你的朋友，如果TA被忽略和遗忘，那会是什么感受】</strong></li>
<li><strong>当杂物占据了空间，其实是把时间轴错位到了过去与未来。</strong> 家里放着的东西，有80%都是时间错误的。在断舍离中，比起凌乱，堆积了聚焦于过去和未来的物品才是问题的关键。<ul>
<li>“ 买的时候花了10万日元，这个事实总是涌上心头，把自己完全逼回到过去。”</li>
<li>聚焦于现在的物品分类两类：日常 &amp; 非日常</li>
<li>要把重点放在日常上</li>
</ul>
</li>
<li>​</li>
</ol>
<p><br></p>
<h2 id="第三章-断舍离的思考法则"><a href="#第三章-断舍离的思考法则" class="headerlink" title="第三章 断舍离的思考法则"></a>第三章 断舍离的思考法则</h2><blockquote>
<p>should do</p>
<p>以自我为轴心，把时间轴放在当下。</p>
</blockquote>
<ol>
<li>能用的东西 Vs. 我用的东西  是不同的；在考虑物品是否被留下时，思考的主语是 “ 我 “，而不是物品。</li>
<li>整理 $\ne$ 收拾；<ul>
<li>收拾：筛选出必需的物品；数量上有所变化</li>
<li>整理：调整物品的位置；数量上保持不变</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="第四章-断舍离的实践方法"><a href="#第四章-断舍离的实践方法" class="headerlink" title="第四章 断舍离的实践方法"></a>第四章 断舍离的实践方法</h2><blockquote>
<p>Just Do</p>
<p>充分理解并利用 [ 七五一 ] 的<strong>总量限制</strong>原则，并且伴随着<strong>替换原则</strong>（由于总量的限制，当你购入新的物品时，就必须放弃旧的物品；）</p>
</blockquote>
<ol>
<li><p><strong>聚焦于某一个场所，然后开始收拾。</strong>即便只是一个抽屉，甚至夸张一点，即使是一个塞满了购物小票的钱包也可以。</p>
</li>
<li><p>储备物品是人类的本能。为了未来可能会到来的危机而提早做足准备的想法总是不断浮现在我们的意识里。不过，如今这个时代我们搜储备的东西早就远远超过了必须量。</p>
</li>
<li><p>把东西送给别人时，不要给对方负担；要询问对方是否真的需要，并要表明若不需要就扔掉的态度；<strong>把自己用不着的东西送给有需要的人时，要说 “ 请收下 “，而不是说 “ 给你 “。</strong></p>
</li>
<li><p>分类按照 <strong>分成三类</strong> 的原则<strong>逐步进行</strong>，而不是一次就进行到底；</p>
<ul>
<li>大分类：餐具、烹饪器材、食材</li>
<li>中分类：（盘子、容器、杯子）、（电器、水槽周边、炉子周边）、（冷冻室、蔬菜保鲜、冷藏室）</li>
<li>小分类：（大盘子、小盘子、其他）、（加热用、烹饪准备用、其他）、（已烹饪过、未烹饪、冰淇淋）</li>
</ul>
</li>
<li><p><strong>七五一的总量限制原则</strong></p>
<ul>
<li><p>看不见的收纳空间：放满70% </p>
<blockquote>
<p>柜子里的东西、抽屉里的东西；留出30%的空间，是因为这会让人有把它手机整齐的欲望和心情，并且空出来的空间能成为物品出入的通道</p>
</blockquote>
</li>
<li><p>看得见的收纳空间：放满50% （书架、CD架之类兴趣的东西除外）</p>
</li>
<li><p>给别人看的收纳空间：只能放10%（最低限度地放东西）</p>
<blockquote>
<p>比如美术展览馆中，名画多半是单独挂在一面很宽的墙上</p>
</blockquote>
</li>
</ul>
</li>
<li><p><strong>伴随总量限制原则的替换原则</strong>； 由于总量的限制，<strong>当你购入新的物品时，就必须放弃旧的物品；</strong></p>
</li>
<li><p>尽量减少把东西拿出来的压力；摆放物品的时候，<strong>遵从一个动作原则；即一个动作就能够取出所要的物品。</strong> 核心在于 <strong>物品摆放的方式是不是便于选择。</strong></p>
</li>
</ol>
<p><br></p>
<h2 id="第五章-看不见的世界在变化"><a href="#第五章-看不见的世界在变化" class="headerlink" title="第五章 看不见的世界在变化"></a>第五章 看不见的世界在变化</h2><ol>
<li>试着使用高于自我形象的物品。因为人是很容易根据外界变化做出自我调节适应的；你会尽量努力去让自己配得上你所拥有的物品。</li>
<li><strong>好不容易能拥有一件物品，与其觉得 “ 算了，就它吧 “ ，不如觉得 “ 必须要这个不可 “</strong>；因为后者更能让人在维护管理这件东西的时候保持愉悦的心情。【购买单肩包，自己也是换了又换；十一购买外套，为了能够买到它，特意去了多个地方，最后终于顺利买到仅剩一件的合适尺码】</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;《断舍离》 - [日] 山下英子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_断舍离_02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;断舍离，表达了通过 [ 断 ] 与 [ 舍 ] 两种行为，去达到 [ 离 ] 这一状态的目的。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;通过《断舍离》，认识了自己与物品对话的两个非常重要的角度&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;我与物品的关系：从 [ 以物品为中心 ]  向  [ 以我为中心 ] 的视角转变&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间维度 以 [ 当下 ] 为核心；&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;断，停止负面的思考模式；断绝想要进入自己家的不需要的东西。&lt;/p&gt;
&lt;p&gt;舍，顺从自己的心，割舍既有；舍去非当下的、不适合自己的物品，舍去家里到处泛滥的破烂儿&lt;/p&gt;
&lt;p&gt;离，达到一种释怀的状态，摒弃 “多就是好” 的观念；脱离对物品的执念，处于自在的空间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;断舍离的主角不是物品，而是自己。这是一种以 “物品和自己的关系” 的核心来进行取舍物品的技术。你要做到的思考方式并不是 [ 这东西还能用，所以要留下来 ]，而是 [ 我要用，所以它很必要 ]。&lt;strong&gt;主语永远都是自己，而时间轴永远都是现在。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;物品要用才有价值；&lt;/li&gt;
&lt;li&gt;物品在此时、当下，应出现在需要它的地方&lt;/li&gt;
&lt;li&gt;物品处于恰当的位置，才能展现美感。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>个人日志_2017年8月总结</title>
    <link href="http://yoursite.com/2017/09/10/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97_2017%E5%B9%B48%E6%9C%88%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/09/10/个人日志_2017年8月总结/</id>
    <published>2017-09-09T16:00:00.000Z</published>
    <updated>2017-09-11T00:38:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="8月总结"><a href="#8月总结" class="headerlink" title="8月总结"></a>8月总结</h2><p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年8月总结_01.jpg" alt=""></p>
<p><strong>孤独袭来。甚是惶恐。</strong></p>
<a id="more"></a>
<h3 id="【运动-amp-健康】-8分"><a href="#【运动-amp-健康】-8分" class="headerlink" title="【运动&amp;健康】 8分"></a>【运动&amp;健康】 8分</h3><ol>
<li><p>为期一个多月的游泳课终于结束了，虽然中间碰到了更换教练，教练出差等原因中断过，但最终还是顺利结业了。顺利学会了蛙泳，有待提高的是腿部动作，还有踩水依然是个问题；对于仰泳，目前依然是个问题。对自己说，自己先尝试学习，如果明年试了几次之后还是不会，可以考虑再报班学习。（建立日历备忘）</p>
</li>
<li><p>开始加入了 “羽毛球” 的行列；对于运动，更注重如何正确、健康地进行运动</p>
</li>
<li><p>对于规律作息，晚睡的习惯真的难改。下意识的就不想入睡；想起之前有专门研究过晚睡的原因，有一条就是 “不愿结束今天”。自律性越来越差，明明已经意识到把手机带到了床铺了，可还是妥协了。</p>
</li>
<li><p>花了更多的时间在运动上，游泳也好，打羽毛球也罢；是因为无处可去；也花了更多时间在工作上，因为需要成就。</p>
</li>
<li><p>运动这件事情上，自己很容易过度。就是明明自己很累了，但还坚持上去打。其实这样不好，真的不好，要克制。</p>
<p>​</p>
</li>
</ol>
<p><br></p>
<h3 id="【生活-amp-娱乐】-6分"><a href="#【生活-amp-娱乐】-6分" class="headerlink" title="【生活&amp;娱乐】 6分"></a>【生活&amp;娱乐】 6分</h3><ol>
<li>由于之前投稿参加主题为《变化》的征文比赛，收到了参与奖《野蛮生长》这本书，内容涉及作者在创业过程中的心路总结。由于自己并没有什么兴趣，所以根本没有去翻过。</li>
<li>看完了《权利的游戏》第七季；</li>
<li>看了《艺术书展》。原本以为在世博源旁，后来才发现其实在更远的地方，地点在 上海民生现代美术馆；想一想，上一次来这里应该是2年前的事情了；</li>
<li>头发越剪越短，因为烦恼不断。</li>
<li>穿灰色的短袖让自己更加暗淡，决定在穿那件灰色的V领的衣服。穿让自己感觉心情舒畅的衣服。</li>
<li>手机开始出现了比较严重的问题：经常无法联接网络 + 用过共享单车之后电池会一直烧直到耗尽电量；真的需要赶紧更换新手机。之前自己的计划是可以把预算提到6K 来买最新的iphone7s 。之后的想法就不一样了。因为更加清楚地认识到自己要的是什么，不追求最新的技术，需要的是更高的性价比；手机对我的意义更重要的是程序运行的流畅性 + 足够的待机时间。因为自己不玩游戏，所以也并没有特别高的要求。所以，你也不需要在意他人的眼光，<strong>你要明白自己到底要的是什么才是最关键的。</strong></li>
</ol>
<p><br></p>
<h3 id="【阅读-amp-学习】-6分"><a href="#【阅读-amp-学习】-6分" class="headerlink" title="【阅读&amp;学习】 6分"></a>【阅读&amp;学习】 6分</h3><ol>
<li>翻阅《货币金融学》；了解债券、利率的关系；</li>
<li>《学会提问》，基于同事在看这本书，所以再一次拿起来看。还特意让老妈帮我从家里寄过来。只是到现在，也没真正开始看，只是翻阅了”理解数据” 这一章节。<strong>对于如何去理解数据，加深了认识；</strong><ul>
<li>第一反应：<strong>数据如何采集的</strong></li>
<li><strong>关注整体分布与全距</strong>，不要受均值的诱导</li>
</ul>
</li>
<li>对于代码的编写，无论编写还是检查，都必须要一个字母一个字母地去拼写与检查，否则你是无法检查出错误的。</li>
<li>把之前7月份就看完的《代价论》《信任论》整理成了读书笔记<ol>
<li>完成《练习的心态》摘抄；<strong>你不可能改变你不知道的事情。</strong>就正如如果你无法识别当下那个正在说话或行动的自己，那你就无法改变你自己。</li>
</ol>
</li>
</ol>
<p><br></p>
<h3 id="【工作】-8分"><a href="#【工作】-8分" class="headerlink" title="【工作】 8分"></a>【工作】 8分</h3><ol>
<li>这个月有一个给高层做《半年度回报PPT》的任务；发现自己对画PPT还是很热爱的，就是那种一谈到PPT眼睛就会发亮的那种。<ul>
<li>PPT制作：用AI打开的矢量图可以直接复制到PPT中，并且可通过 <strong>“取消组合”</strong> 进行使用。以后若要使用 icon 一定要用这种方式。</li>
</ul>
</li>
<li>文档整理；多个内容的整理与汇总；发现自己对于出自自己的作品（文档），还是有比较高的要求，会尽量去完善它。</li>
<li>在看数据的过程中，发现一个交易倍数最高，且盈利率最高的组别；与其他组别形成鲜明对比；准备去分析 “不同组别的交易倍数与盈利率”。但最后没有去落实。<ul>
<li>刚开始并没有时间去进行</li>
<li>之后便开始思考这个事情的重要程度；假设我找出了交易的区别，那对减少可以盈亏有多少帮助？然，并不会改变什么。</li>
</ul>
</li>
<li>开始真正把R应用到工作中；<ul>
<li>把R与MSSQL数据框联接，进行调试</li>
<li>尝试用R来完成数据的导入与筛选</li>
<li>尝试用R的Knitr包来完成自动输出日报（进行中）</li>
</ul>
</li>
<li>开始接受了项目：用户标签；借由这个项目，多次跟前端的业务人员有了充分的沟通。受益良多。但对于如何沟通与问问题，需要多去思考。去之前不仅要准备好问题提纲，更关键的是要明白自己设计这个问题的意义；要深层次的考虑。<ul>
<li>通过访谈，是了解业务最直接的模式；很多信息，必须要去获得第一手的资料</li>
</ul>
</li>
<li>作为数据分析师，应该要花多少时间在业务端上。其实，我们部门做的事情，并不是严格意义上的数据分析师做的事情；相比进行分析，更关键的在于：<ul>
<li>打通数据（这个似乎更关键）</li>
<li>提供信息给业务端</li>
</ul>
</li>
</ol>
<p><br></p>
<h3 id="【友情-amp-感情】-7分"><a href="#【友情-amp-感情】-7分" class="headerlink" title="【友情&amp;感情】 7分"></a>【友情&amp;感情】 7分</h3><ul>
<li>老朋友邀约：<ol>
<li>8月初约了之前的同事某蕊同学见面，因为对方比较忙都没有时间见上。虽然最后约了一次，见了面吃了饭，但是却有了不一样的感觉。 <em>得知某蕊童鞋月薪还是可以的，但想一想如果当初自己并没有离开，这样的薪水并没有什么难的。所以，现在的自己必须要用更短的时间去达到。</em></li>
<li>想吃蟹肉煲，就约某菁一起去吃。未果。伤心中。两周之后某菁童鞋竟然说要请我吃饭，受宠若惊。因为她竟然还记得。在外滩吹风，然后去了南滨江听曲子。她说，一个人在一座呆久了，会变得神经质；她说，她迷茫，不知道下一步往哪里走，所以一直保持现状。她说，你是不是想要回去。我说并不是，只是单纯的发呆而已。</li>
<li>加入了新的羽毛球团队：1. 活动行上的伙伴；2. 公司羽毛球社；<ul>
<li>活动行上的伙伴，一起运动后的第一周有约我一起打球，后面就完全没声音了。不过自己也并没有太主动去靠拢，因为有了其他的选择。</li>
</ul>
</li>
</ol>
</li>
<li>新伙伴邀约：<ol>
<li>之前在一个活动中认识的小伙伴约我一起去看《上海书展》。本是愉快的开始，但过程与结果都很不好。想来，以后应该不会在有联系了。</li>
</ol>
</li>
<li>感觉一直都是自己生活着，除了工作就是同事，运动也是一个人；感觉自己需要减压，迫切地需要在休息日见到其他人。一种孤单感越来越深，我开始明白为何有些人来到上海一年左右就想回家的那份感情。因为孤独。但是我不可以。逐步开始明白，为什么很多人想回家乡的城市工作，因为在上海这样的城市，大部分人注定是孤单的，一个人生活太久，往往就磨损了原本的意志。那是一种日积月累的孤独感，只会愈来愈深；</li>
</ul>
<p><br></p>
<h3 id="【亲情】-3分"><a href="#【亲情】-3分" class="headerlink" title="【亲情】 3分"></a>【亲情】 3分</h3><ol>
<li>偶尔想起来给家里人打电话。</li>
</ol>
<p><br></p>
<h3 id="【投资】-0分"><a href="#【投资】-0分" class="headerlink" title="【投资】 0分"></a>【投资】 0分</h3><p><br></p>
<h3 id="【感恩回报】-6分"><a href="#【感恩回报】-6分" class="headerlink" title="【感恩回报】 6分"></a>【感恩回报】 6分</h3><ol>
<li>工作中感谢计童鞋的悉心安排，是一个很有责任心的伙伴。表示感谢，但有点慌乱；应该表现得更稳重一些；</li>
</ol>
<p><br></p>
<h3 id="【成功小事】-7分"><a href="#【成功小事】-7分" class="headerlink" title="【成功小事】 7分"></a>【成功小事】 7分</h3><ol>
<li>游泳课结业，顺利学会了蛙泳，多了一项生存技能。</li>
<li>如果长期做某一项运动，一定要去了解他正确的运动方式。没有错误的运动，有的只是错误的运动方式。</li>
</ol>
<p><br></p>
<h3 id="【新的尝试】-7分"><a href="#【新的尝试】-7分" class="headerlink" title="【新的尝试】 7分"></a>【新的尝试】 7分</h3><ol>
<li>第一次去《上海书展》；原来规模这样大，原来里面都是各个出版社在卖书。</li>
<li>从基础开始学习 “羽毛球”，包括握拍、击球方式等等；</li>
<li>第一次绑羽毛球吸汗带，跟着网上的教程一步一步来，成功完成。（忘记拍照了）</li>
<li>第一次去了解跑步的正确姿势；（自己更注重正确、健康的运动方式）</li>
</ol>
<p><br></p>
<h3 id="【自我思索】-7分"><a href="#【自我思索】-7分" class="headerlink" title="【自我思索】 7分"></a>【自我思索】 7分</h3><ol>
<li>关于征文比赛，看了排名第一的文章，瞬间就明白了评分标准；毕竟这个是内部期刊，<strong>所有的事情应该是考虑它的动因（即Why的部分）</strong>，出题人为什么要办这个活动，她心中想要的文章应该是什么样的。很显然，一定是要结合公司的，排名第一文章的内容就是涉及公司的。所以，在面对一件事情的时候，先去<strong>思考对方行为背后的原因，一件事它存在的原因/目的</strong>；</li>
<li><strong>对于恐惧，是本能的反应。</strong>在游泳过程中，以为自己还在浅水区，就去踩地面，殊不知自己已经在深水区；然后慌张的抱紧浮球；感觉自己要被吞噬了。其实，这都是因为太紧张。<strong>明明知道自己要冷静</strong>，才能安全地生存，知道但并不代表做到。所以，对于这样的事情，<strong>对于紧急状态下的反应，如果有经历过，练习过，是完全可以克服的。</strong> 所以，要多去尝试，多去体验不一样的事物。</li>
<li>如何才能在工作中体现自己的价值；一直在思考，一直在苦恼；<strong>希望工作上有所成就的感觉越来越强烈；</strong></li>
<li><strong>环境真的很重要</strong>；这一点自己应不止一次的认识到与体验到；在世博轴的大众书局里面写7月总结的自己，回想白天一整天颓废在宿舍的自己。天差地别；</li>
<li>数据分析，或者其他任何职位，你都必须足够了解业务；当前的工位离经理太远，下一次换位置一定要靠近经理，这样能获得更多的信息。</li>
<li><strong>多花时间在工作上</strong>，在数字上；多去摆弄数据，也要了解前端业务；工作的时候就要把时间花在与工作相关的内容上；<strong>学习的话，自己去安排时间；</strong> 你一定要明白主次，学习很重要，但不是一味的没有针对性地学习。记得这样一段话，<strong>现阶段你要把时间花在与工作相关的学习上。通过文档归类与整理，你就能看出来当前自己的精力分配是怎么样的。</strong></li>
<li>当下的生活，自己认为应该是围绕 <strong>[ 工作 + 学习 + 运动 ]</strong>，并且今后也应该要围绕这三者；<strong>唯有阅读与运动不可辜负。</strong></li>
<li>对于与陌生人的交流，自己完全不会感到变扭。比如想打羽毛球，就会主动去加入一个陌生的团队。比如想学习游泳，学习羽毛球，会主动找陌生的伙伴一起学习，完全不会觉得奇怪与犹豫。</li>
<li>通过8月的总结，会发现自己最近并没有好的作息，也没有好好记录日志；<strong>定期回顾，是一个很好的习惯，会帮助你去思考过去，调整当前的自己，这样即使偏离了轨道，也能够尽早发现并把自己拉回来。</strong></li>
<li>不时会遐想与咨询公司中那些高职业素养的同事办公的感觉；感觉自己也有点工作狂的倾向；</li>
<li>想要学羽毛球，先要学唱歌；发现回到了一个人，有更多的事情想做。想让自己变得更好。羽毛球是有助于颈椎，另一方面是易于运动；唱歌，是因为其实自己是一个很有感情的人，喜欢用歌声来表达，但却唱的不好。所以，要学习。</li>
</ol>
<p><br></p>
<blockquote>
<ul>
<li><strong>做了什么努力/改变，效果如何？</strong></li>
</ul>
<ul>
<li><strong>学到的东西，如何付诸实践？</strong></li>
</ul>
<ul>
<li>后续任务：<ul>
<li>做一份PPT使用手册，在每次制作之前都阅读一遍。</li>
<li>报班学习羽毛球</li>
<li>思维中强化Why的部分，用特定的时间来进行强化</li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;8月总结&quot;&gt;&lt;a href=&quot;#8月总结&quot; class=&quot;headerlink&quot; title=&quot;8月总结&quot;&gt;&lt;/a&gt;8月总结&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年8月总结_01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;孤独袭来。甚是惶恐。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人塑造" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
      <category term="个人日志" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="个人日志" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
      <category term="个人塑造" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>《练习的心态》_读书笔记</title>
    <link href="http://yoursite.com/2017/08/23/%E3%80%8A%E7%BB%83%E4%B9%A0%E7%9A%84%E5%BF%83%E6%80%81%E3%80%8B_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/08/23/《练习的心态》_读书笔记/</id>
    <published>2017-08-22T16:00:00.000Z</published>
    <updated>2017-08-23T14:22:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>《练习的心态》 - Thomas M. Sterner (托马斯 M. 斯特纳)</strong></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_练习的心态_01.jpg" alt=""></p>
<ol>
<li><p><strong>你不可能改变你不知道的东西；</strong></p>
</li>
<li><p><strong>给每个场景设定 “触发警示信号” 的场景；即当做XX的时候，出现XX情况的时候，触发警示信号，让自己去思考应该有的行为；</strong></p>
</li>
<li><p>如果你知道自己正在做的任何事情，意味着涉及两个存在：</p>
<ul>
<li><strong>一个是正在<u>做某件事情</u>的那个你</strong> ； ——这个是你的自我或个性</li>
<li><strong>一个是正在<u>了解或观察</u>你做那件事的那个你</strong> —— 观察者</li>
</ul>
<blockquote>
<p>你越是与静静的观察者更加密切地保持一致，你的主观判断便会越少；你开始真正地用一种客观的视角来观察你的内心独白</p>
</blockquote>
</li>
</ol>
<a id="more"></a>
<p><br></p>
<ol>
<li><p><strong>你不可能控制你甚至不知道的东西。意识一定是第一位的；</strong> </p>
<ul>
<li><strong>缺乏自我控制</strong>，不论你想实现什么样的目标，你都不会有真正的力量；<strong>如果你不知道自己每时每刻都在想些什么</strong>，那你便没有拉紧思维的缰绳，对自己前进的目标便没有了掌控的能力。</li>
<li>如果我们不将日常的思考过程分隔开来，便不能能优化那些过程中的任何一部分</li>
</ul>
</li>
<li><p>当我们说某一件事是一个习惯时，就是说这是我们做某件事情的一种自然方式。我们从直觉上来做事，根本不必去想它。</p>
</li>
<li><p>在较短的时间内，<strong>有意识地反复</strong>做某件事，将使你培养新习惯；</p>
</li>
<li><p>通过 “扣动扳机” 的方法 来阻止旧习惯的势头；</p>
<blockquote>
<p><strong>给自己的每个场景设定触发警示信号的行为；当做XX的时候，跳出XX的想法；</strong></p>
</blockquote>
<ul>
<li>所谓扳机，指的是一种帮助我们启动新习惯养成过程的设备；它类似于一声哨响或者一声钟鸣，当你恰好处在想用原来的方式行动时，<strong>向你发出警示信号</strong>；</li>
<li>扳机的功能时阻止你在某种局面下产生的情绪响应，并且将你带入当前这一刻，带入一种客观的姿态，以便你能控制自己的行为；</li>
</ul>
</li>
<li><p>想象练习是很有效的一种方法；</p>
<ul>
<li>在训练过程中，飞行教练把油门关死（通常情况下你是没有料到是因为你他将油门关死了）并且说：”动力没有了，你打算怎么做？“ 你打算做的事情，就是教练教你的程序，成为你自然而然的习惯的那些程序。</li>
<li>一位飞行教练曾告诉我，希望我每次登上飞机，首先思考一下 ”失去动力“ 的紧急情况的应对程序；她还教我，每次下飞机之前，也要再思考一遍；</li>
</ul>
</li>
<li><p>我们对理想和完美的概念总是不断变化的。我们自己认为好的或坏的东西，不会一成不变；</p>
</li>
<li><p>如果你知道自己正在做的任何事情，意味着涉及两个存在：</p>
<ul>
<li><strong>一个是正在<u>做某件事情</u>的那个你</strong> ； ——这个是你的自我或个性</li>
<li><strong>一个是正在<u>了解或观察</u>你做那件事的那个你</strong> —— 观察者</li>
</ul>
<blockquote>
<p>你越是与静静的观察者更加密切地保持一致，你的主观判断便会越少；你开始真正地用一种客观的视角来观察你的内心独白</p>
</blockquote>
<p>​</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;《练习的心态》 - Thomas M. Sterner (托马斯 M. 斯特纳)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_练习的心态_01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;你不可能改变你不知道的东西；&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;给每个场景设定 “触发警示信号” 的场景；即当做XX的时候，出现XX情况的时候，触发警示信号，让自己去思考应该有的行为；&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果你知道自己正在做的任何事情，意味着涉及两个存在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;一个是正在&lt;u&gt;做某件事情&lt;/u&gt;的那个你&lt;/strong&gt; ； ——这个是你的自我或个性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一个是正在&lt;u&gt;了解或观察&lt;/u&gt;你做那件事的那个你&lt;/strong&gt; —— 观察者&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;你越是与静静的观察者更加密切地保持一致，你的主观判断便会越少；你开始真正地用一种客观的视角来观察你的内心独白&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>《信任论》_读书笔记</title>
    <link href="http://yoursite.com/2017/08/20/%E3%80%8A%E4%BF%A1%E4%BB%BB%E8%AE%BA%E3%80%8B_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/08/20/《信任论》_读书笔记/</id>
    <published>2017-08-19T16:00:00.000Z</published>
    <updated>2017-08-21T12:53:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>《信任论》_郑也夫 ；写于1999年</strong></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_信任论_01.jpg" alt=""></p>
<blockquote>
<ol>
<li>作者首先从定义上去解释 “信任”；接着描述信任的表现形式： “利他” ，然后进一步解释 “利他” (信任)产生与形成的原因、发展历程；<ul>
<li>(1) 人性 - 利己； 规范 - 利他；(2) 文化力量的加入 + 漫长的幼儿成长期 + 模仿；使得利他得以持续</li>
<li>信任始于亲族中，产生于领地上；</li>
</ul>
</li>
</ol>
<ol>
<li>之后作者解释信任的重要功能：<strong>简化思想</strong>；并接着讨论它的社会功能、不同环境中的表现差异</li>
<li>最后单独讨论了两种信任系统：<strong>货币系统、专家系统</strong>；<ul>
<li>货币系统的最终逻辑：市场社会；专家系统的最终逻辑：社会学历</li>
<li>两者共同开辟了陌生人的天地</li>
</ul>
</li>
</ol>
<p>信任的两种结构：人格信任、系统信任；</p>
<ul>
<li>人格信任：对某个具体人物的信任，包括亲族、领地、同乡会的信任</li>
<li>系统信任：对匿名人组成的制度系统的信任</li>
</ul>
</blockquote>
<ol>
<li>信任的特性：<strong>(1) 时间差与不对称性；(2) 不确定性； (3) 属于主观的意识</strong><ul>
<li>诺言与兑现之间存在无法跨越的时间差；承诺人与选择相信的人在信息上有着无法跨越的不对称性</li>
<li>未来本身有着不确定性</li>
</ul>
</li>
<li>“三军可以夺帅，匹夫不可夺志。”对一些事，<strong>自己心中必须要有自己的态度，在事物的两极之间，否能坚定自己的意志。但这也取决于首先你对这件事情要有先验知觉。</strong></li>
<li><strong>均衡从来不是源于自我约束，而是靠着其他力量对某一势力的无限扩张的抵抗。</strong>  <u>若要取得平衡，或者推动事物的发展，都可以从其他力量会采取的行动来进行思考，以此来促进均和或者推动行为的落地；</u><ul>
<li>每个人、群体、民族、语言、想法都会在一定程度上的<strong>自我膨胀</strong>，这是生命体及其承载的一切事物的<strong>本性</strong>。</li>
<li>权利不可能自我约束的，对它的有效约束只能来自其他力量。</li>
</ul>
</li>
<li><strong>“合作的基础不是真正的信任，而是关系的持续性”</strong> 。在持续关系与合作之间还有一个环节——信任。即<strong>持续关系产生信任，信任导致了合作。</strong><ul>
<li>持续关系（即多次博弈）是合作，乃至一切复杂关系的基础</li>
</ul>
</li>
<li>人类行为的动因：个人物质利益（个人取向） + 追求承认（他人与群体取向）</li>
<li>领地是产生和发展复杂而稳定社会关系的重要因素；</li>
<li><strong>认识到基本上所有的制度都是简化复杂的机制</strong>； <u>语言、金钱、权利、权威、标签、声誉、考核、分数</u> <ul>
<li>信任（简化机制），是<strong><u>凭借过去</u></strong>进行简化的；</li>
<li>信任<strong>增加了不确定性的宽容</strong>，从而<strong>增加了人们行动的勇气和可能性</strong></li>
</ul>
</li>
<li>货币是一种媒介，而<strong>信任是这一媒介中的关键</strong>。 <strong>货币通过数量差别取代质量差异，抹去了任何事物的特殊性，以自己的度量为一切事物完成了换算</strong>；凭借着这种 <strong>“变质为量”</strong> 的本领，货币获得了一种其他事物都不具备的渗透力；</li>
<li><strong>学历社会带来的不是 “机会的平等”，而是 “游戏规则的平等”</strong> ；这才是科举与现代教育制度的贡献；人类更热爱的是差异的刺激。平等并不是人们真正的目标，平等不过是反对成员间地位差距过大的策略和说辞；文明的进步其实只是努力保障失败者或位卑者的尊严</li>
</ol>
<a id="more"></a>
<h2 id="第一章-信任：溯源与定义"><a href="#第一章-信任：溯源与定义" class="headerlink" title="第一章 信任：溯源与定义"></a>第一章 信任：溯源与定义</h2><ol>
<li>信任，名词；表达静态的属性，即可信任的；信任，动词，出发点是主体，即判断对方有信用与否</li>
<li>信任关系具有的性质：<ul>
<li>时间差与不对称性。行动和兑现较之诺言和约定必然是滞后的。承诺与兑现之间存在着时间差，信任者与被信任者之间存在某种不对称性</li>
<li>不确定性。具备了确定性，就不存在风险与应对风险的这一特定方式了。</li>
<li>因为没有足够的客观依据，信任属于主观的倾向和愿望。</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="第二章-人的本性"><a href="#第二章-人的本性" class="headerlink" title="第二章 人的本性"></a>第二章 人的本性</h2><blockquote>
<p>描述了三种 “利他” 的类型</p>
</blockquote>
<ol>
<li><p>自然选择是这样进行的：某一种群内的成员们身上带有可遗传的不同变异特征，当选择压力出现的时候，种群内那些拥有有利于存活和繁殖的特征的个体的百分比将增长。</p>
<ul>
<li>基因像程序一样决定了它的携带者的行为方式，并靠着急眼的传递和遗传的稳定性，将这一行为特征传递给下一代。</li>
<li>假设一个群体中有一些带有无条件利他基因的个体，利他行为会使得这些个体牺牲或减少自身生存和繁殖的机会，最后将直至消亡</li>
<li>但实际是仍然存在利他的行为</li>
</ul>
</li>
<li><p>围绕利他行为存在的原因，有着三种解释：亲族选择、互惠、群体选择</p>
<ol>
<li><p><strong>亲族选择</strong>：即发生在亲族间的利他行为的自然选择作用</p>
<blockquote>
<p>不求回报</p>
</blockquote>
<ul>
<li>如果他的利他行为减少了自己生存和繁衍的机会，但增加了他的同胞得到繁衍，那这种利他行为可以使得它们共同基因的增加，并因为这种基因的传递而使得亲族内的利他行为得以持续</li>
</ul>
</li>
<li><p><strong>互惠的利他行为</strong>：互惠性利他可能在<strong>长期交往</strong>过程中建立；</p>
<blockquote>
<p>要求回报</p>
</blockquote>
<ul>
<li>实例：某只吸血蝙蝠没有吸到血又非常饥饿时，吸到血的蝙蝠会吐给它一点血，靠着互助，蝙蝠们克服了个体不时遇到的捕食失败</li>
<li>很多哺乳动物间互相舔毛，以清洁皮肤</li>
</ul>
</li>
<li><p><strong>群体选择利他</strong>：具有利他性的群体，因为内部的合作而比利己的种群获得更大的生物学上的利益，并因此更有肯能在竞争中生存和繁衍</p>
</li>
</ol>
</li>
<li><p>要保持非血缘群体内部的利他性能够占据上风，需要引入另外一支力量：文化；</p>
<ul>
<li>规范，是人们制定和共同遵守的行为准则。规范的主要内容：习俗 和 道德；</li>
</ul>
</li>
<li><p>文化 与 本能的对峙；</p>
<ul>
<li><p>道德的使命在于造就一种广泛的利他；</p>
</li>
<li><p>对于本性，人是利己的；归根到底是自私的行为倾向在我们的行为心态的遗传组成中占绝对优势。在人类以前的时代，自私行为是被自然选择极力选中的；</p>
<blockquote>
<p>从自然选择（适者生存）的角度阐明了利己存在且不可否认的原因；</p>
</blockquote>
</li>
</ul>
</li>
<li><p><strong>文化能在一定程度上重塑基因</strong>，并为人类设定行为模式，主要在于：</p>
<ul>
<li><strong>“幼态持续”</strong> 为人类提供了独一无二的条件：漫长的幼年成长期</li>
<li><strong>模仿</strong>，是这一过程中最重要的手段和力量</li>
</ul>
<blockquote>
<p>生物的复制功能是垂直进行的：以繁衍的形式传递给下一代</p>
<p>文化的复制功能不仅是垂直而且水平：可以在同代人之间复制</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h2 id="第三章-合作的进化"><a href="#第三章-合作的进化" class="headerlink" title="第三章 合作的进化"></a>第三章 合作的进化</h2><blockquote>
<p>通过 “建立信用” 的方式来克服互惠行为的前提（多次合作）</p>
</blockquote>
<ol>
<li>互惠理论的前提：<strong>多次博弈</strong>；即 <strong>“关系的持续性”</strong> （囚徒困境：一次性博弈）</li>
<li>“一报还一报” 的策略可以在一个由多种策略构成的多样性环境中获得成功；<ul>
<li><strong>首先保持善意</strong>对待每一个人</li>
<li>然后根据对方的行为，采取<strong>相同的</strong>措施</li>
</ul>
</li>
<li>互惠的特点是以重复相遇为前提（即关系的持续性），相反在一次性遭遇时每每背叛；改善的一个办法是<strong>重视和建立信用。</strong>；<ul>
<li>当”好合作、高质量”  的声誉建立和传播时，与你没有联系过的人也增加了对你的信任，与你合作的可能</li>
</ul>
</li>
<li><strong>“合作的基础不是真正的信任，而是关系的持续性”</strong> ，这是艾克斯罗德 强调的前提因素。但在持续关系与合作之间还有一个环节——信任。即<strong>持续关系产生信任，信任导致了合作。</strong></li>
</ol>
<p><br></p>
<h2 id="第四章-理性与习俗"><a href="#第四章-理性与习俗" class="headerlink" title="第四章 理性与习俗"></a>第四章 理性与习俗</h2><ol>
<li>每个人、群体、民族、语言、想法都会在一定程度上的<strong>自我膨胀</strong>，这是生命体及其承载的一切事物的<strong>本性</strong>。<strong><u>均衡从来不是源于自我约束，而是靠着其他力量对某一势力的无限扩张的抵抗。</u></strong></li>
<li>理性：是逻辑指引下的思考，它可以更广义地定义为问题的解决和批判的思考，但只有在强调了逻辑成分时，它才成其为有价值单独讨论的特定的思想方法。无理论知觉、想象、试错法这类活动有着怎样出色的成果，是被排除在理性之外的。——《国际社会科学百科全书》（1968）</li>
<li>人类行为的动因：个人物质利益 + 追求承认<ul>
<li>个人物质利益：追求个人的物质享乐；个人取向的；</li>
<li>追求承认：个人的心力满足；他人和群体取向的；</li>
</ul>
</li>
<li>信任不是理性；信任处在全知与无知之间。信任处在理性与非理性之间；</li>
</ol>
<p><br></p>
<h2 id="第五章-领地、亲族和共同体"><a href="#第五章-领地、亲族和共同体" class="headerlink" title="第五章 领地、亲族和共同体"></a>第五章 领地、亲族和共同体</h2><ol>
<li><strong>领地</strong>：指<strong>同物种</strong>之间划分出的排外性的势力范围；</li>
<li>领地的重要性：(1)生存需要一定的空间；(2) 这个空间需要稳定的环境；对空间与稳定性的共同需求，导致了对领地的需求<ul>
<li>领地提供了稳定的食物资源</li>
<li>领地提供了与配偶交配的场所</li>
<li>领地也是养育幼儿的场所</li>
</ul>
</li>
<li>以<strong>领地</strong>为基础的社会结构在进化中有很大的优势：可望产生和发展<strong>复杂而稳定的社会关系</strong>；<ul>
<li>领地为成员带来了识别性（外部 + 内部）；识别性是持续关系的基础，而持续关系（即多次博弈）是合作，乃至一切复杂关系的基础</li>
<li>人类很多的本领和规范是靠模仿，而不是单独个体的 “试错” 得到的；领地是模仿的必要条件</li>
<li>当一个领地中物种数量膨胀时，领地中的部分成员会<strong>一同移动</strong>到其他地域，建立新的领地；这促进了更大范围上的模仿，进而促使了文化的传播和交流</li>
</ul>
</li>
<li><strong>保卫不是领地行为的必要内容，排他才是关键</strong>；并且在漫长的进化过程中，灵长目动物基本上选择了回避，放弃了侵略。在面对领地冲突时，更多的是表现为<strong>仪式化的战斗，而不是生死的决斗；</strong></li>
<li>边界帮助群体获得其有限性，领地提供了持续的关系，使成员们在其中相互识别，频发交往，进而获得信任，开始合作；</li>
<li>封建、帝国与资本是人类最伟大的三项制度创作。<ul>
<li>封建制，帮助人类从血缘走向地缘</li>
<li>帝国，在相当程度上继承了封建制的遗产</li>
<li>资本，帮助人类超越天然的标志，<strong>从熟悉的人格关系走向陌生的非人格关系</strong></li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="第六章-信任对复杂的简化"><a href="#第六章-信任对复杂的简化" class="headerlink" title="第六章 信任对复杂的简化"></a>第六章 信任对复杂的简化</h2><ol>
<li><p>“最优理论” vs. “满意理论” ；生物有足够的本领进行”寻求满意” 的适应，但他们并不 “寻求最优”</p>
</li>
<li><p><u>语言、金钱、权利、权威、标签、声誉、考核、分数，都是简化复杂的机制；</u></p>
</li>
<li><p><strong>信任靠着超越可以得到的信息，概括出一中欧冠行为期待，以内心保证的安全感代替信息匮乏；</strong></p>
<ul>
<li>信任强化现有的认知，简化复杂的能力；强化与复杂的未来相对应的现在的状态</li>
<li><u><strong>信任增加了不确定性的宽容，从而增加了人们行动的勇气和可能性</strong></u></li>
</ul>
<blockquote>
<p>靠着简化复杂，信任打开了行动的可能性，没有信任这个行动是不可能和无吸引力的；因为只有在行动之后，可能的成果才会显现。信任为时间问题架了桥，它为成果做了预付；</p>
</blockquote>
</li>
<li><p>信任（简化机制），凭借<strong>过去</strong>进行简化；</p>
<ul>
<li>过去是确定和不变的；现在是有限和迟疑的；未来是复杂和未知的；</li>
<li>现在靠着与过去的联手，超越未来的不确定性在他们心理上造成的疑惑</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="第七章-信任与社会秩序"><a href="#第七章-信任与社会秩序" class="headerlink" title="第七章 信任与社会秩序"></a>第七章 信任与社会秩序</h2><blockquote>
<p>社会秩序的三个来源：强制、互惠、习俗</p>
</blockquote>
<ol>
<li>强制不需要互惠与习俗的帮助，独立就可以造就一种秩序；而互惠与习俗必须依靠国家机器的帮助，才能建议一种社会秩序；</li>
<li>国家机器对外承担着保卫国家领土主权的责任，对内要为经济与社会生活提供一般性的条件（法律、货币、社会福利等）；这些与社会秩序直接或间接相关的功能，都是国家之外的力量难于承担的；</li>
<li><strong>群体间贸易</strong>的发明代表了进化中非常稀少的时刻，人类获得了超越动物的<strong>比较生态的优势</strong>；动物有群体内的分工，但没有一种动物利用了群体间的比较利益；</li>
<li>权利不可能自我约束的，对它的有效约束只能来自其他力量。在民主国家，并非国家机器不想扩张其权力，而是受到了全面的制约——司法、经济、新闻和公民一起抵制国家权力对它们领地的侵犯和干预；</li>
</ol>
<p><br></p>
<h2 id="第八章-早期城市化与民间社团"><a href="#第八章-早期城市化与民间社团" class="headerlink" title="第八章 早期城市化与民间社团"></a>第八章 早期城市化与民间社团</h2><blockquote>
<p>农村是熟人的社会；城市是陌生人的社会；</p>
</blockquote>
<ol>
<li>不同地域表现出来的不同形式：西方的行会；中国的同乡会；</li>
</ol>
<p><br></p>
<h2 id="第九章-秘密社会"><a href="#第九章-秘密社会" class="headerlink" title="第九章 秘密社会"></a>第九章 秘密社会</h2><blockquote>
<p>例如：黑手党、青帮</p>
</blockquote>
<ol>
<li><p>秘密社会：与主流价值观对立，但不反政府；只寻求一个与主流文化不同的子系统，且这系统是隐蔽的；</p>
<ul>
<li>秘密社会生存在征服管辖的大系统中，不逃脱在其之外，而是在其内建立自己的与主流价值观对立的小系统，在对立的同时谋求尊严并努力披上合法的外衣</li>
</ul>
</li>
<li><p>在国家为社会提供充分的服务时，不存在黑社会，因为没有必要；在国家极度衰弱时，自救团体无非法可言，即使使用暴力。只有在两者共存时，才有了秘密社会，或曰 “黑社会” 的称谓；秘密社会<strong>产生于权力控制与满足社会需求的双重真空</strong>；</p>
<blockquote>
<p>这也是辩证的看问题；从一个事物的对立面来看问题；</p>
</blockquote>
<ul>
<li>现象：黑手党对社会富有一定责任，维护一定的社会秩序；<ul>
<li>据说在西西里，发生偷到时，如向警方报告，75%是无所作为，15%能找到最烦，只有10%能追回赃物；</li>
<li>若向黑手党调节，只有5%未获成功；</li>
<li>当然被盗人要拿出财产的 1/4 ~ 1/3供调解人</li>
</ul>
</li>
</ul>
</li>
<li><p>秘密社会中的<strong>信任程度高于主流社会</strong>，因此才能比社会大系统更强悍；子系统中的信任靠着4个因素来建立与强化</p>
<ul>
<li>(1) 互利；内部的互利性必然要高于社会大系统；(2) 运行的效率要高于大社会人的保护效率；(3) 对背叛的惩罚极其严厉； (4)靠着仪式、传统、认同和惩罚，将一种特殊的价值系统内化在成员的心中</li>
</ul>
</li>
<li><p>社会大系统的健全：正当需求可以得到满足，正义可以得到伸张；从这个意义上来说，亚文化是主流文化的某种指标，是主流社会的晴雨表；</p>
</li>
</ol>
<p><br></p>
<h2 id="第十章-货币与信任"><a href="#第十章-货币与信任" class="headerlink" title="第十章 货币与信任"></a>第十章 货币与信任</h2><ol>
<li><strong>货币是一种媒介，而信任是这一媒介中的关键。</strong>一旦失去信任，货币将失效；<em>eg：当爆发战争的时候，若无法判断这一国家是否战败，此时对本国货币失去了信任，会大量购买他国货币/物品；因为一旦国家战败，它的货币是没有任何意义的；</em>因为失去了信任，没有人会愿意为它支付物品；</li>
<li>货币的简化功能几乎是所有媒介中最出色的。<strong>货币通过数量差别取代质量差异，抹去了任何事物的特殊性，以自己的度量为一切事物完成了换算</strong>；凭借着这种 <strong>“变质为量”</strong> 的本领，货币获得了一种其他事物都不具备的渗透力；</li>
<li>货币为人们带来了自由；这种自由首先是货币占有者消费机会与可能性上的自由；<ul>
<li>庄园领主过去可以向农奴征收一定数量的啤酒、家禽，从而将后者的行为限定在一定的范围内；但是，当他征收货币的那一刻起，农民的自由了。他们可以自己决定是养蜂、养牛，还是做其他的事情；</li>
</ul>
</li>
<li>信任与借贷；借贷必须建立在信任的基础之上；这种信任的判断可以是任何事物：主观信任，其他简化机制的表现</li>
<li>抵押贷款，与信任无关；抵押消除了风险与不确定性，完全不需要借助信任。</li>
<li>一种<strong>反文明</strong>的观念：<strong>利息与有息借贷都是可恶的</strong>；</li>
<li>货币中的风险：货币自身、折射在货币上的社会病症、资本流动的 “马太效应”<ul>
<li>货币自身：现代货币是人造物，在其数量上不受控制；</li>
<li>折射在货币上的社会病症：伪造货币者与政府；后者可能不正当地印制货币；</li>
<li>马太效应：当私人资本得以自由地越境流动以寻求最佳投资机会时，它们可能被导向依据国际标准最具生产率的领域；</li>
</ul>
</li>
</ol>
<blockquote>
<p><em>马太福音中的寓言故事：　《新约·马太福音》中有这样一个故事。一个国王远行前，交给三个仆人每人一锭银子，吩咐他们：“你们去做生意，等我回来时，再来见我。”国王回来时，第一个仆人说：“主人，你交给我的一锭银子，我已赚了10锭。”于是国王奖励了他10座城邑。第二个仆人报告说：“主人，你给我的一锭银子，我已赚了5锭。”于是国王便奖励了他5座城邑。第三个仆人报告说：“主人，你给我的一锭银子，我一直包在手巾里存着，我怕丢失，一直没有拿出来。”于是,国王命令将第三个仆人的那锭银子赏给第一个仆人，并且说：“<strong>凡是少的，就连他所有的，也要夺过来。凡是多的，还要给他，叫他多多益善。</strong>”</em></p>
</blockquote>
<p><br></p>
<h2 id="第十一章-科举与学历（专家系统一）"><a href="#第十一章-科举与学历（专家系统一）" class="headerlink" title="第十一章 科举与学历（专家系统一）"></a>第十一章 科举与学历（专家系统一）</h2><ol>
<li><p>科学决定了专家系统的性质。因为科学获得了大众的信任，所以在科学上学有专长的人是值得信任的；学历是此种信任的社会来源，是学有所长、高于常人的证据。同行评议是对每个专家的更准确和权威的评价，并往往以此决定他在这一系统中的地位。<strong>科学、学历、同行评议</strong>，三位一体，<strong>构成了专家系统的信任基础；</strong></p>
</li>
<li><p>人类历史上有两种方式取代封建，建立<strong>开放的等级制</strong>：(1) 靠市场和货币；(2) 靠科举和文凭；</p>
<ul>
<li><p>市场经济的社会中，货币占有的多寡很大程度上决定了人们的社会地位</p>
</li>
<li><p>以科举功名为人们的社会等级定位的机制</p>
<ul>
<li>考试内容与效度；因为科举的目的是为了评判不同的水平，因此在考试内容上必然是有所倾向的；</li>
<li>八股文的题目出自四书（《大学》、《中庸》、《论语》、《孟子》），八股文在内容上要求 “代圣贤立言”，不允许表达个人的见解；然而从实质上看，考生们角逐的仍然是写作美文的技巧；</li>
</ul>
<blockquote>
<p>我们必须认识到，不是八股文败坏了科举，而是科举创造了八股文。这一悲剧的本质在于考试学的两难：有用的东西未必适合考试，适合考试的东西未必有用。在找不到适宜考试有用的知识时，考试会选择无用但能够评判的技巧；</p>
</blockquote>
</li>
</ul>
</li>
<li><p>科举制的建立视为了制约上下层人口比例的失调，但它的功能也仅仅是减缓社会生态失调的速度；当一个制度越来越多成为统计阶级成员晋升的障碍时，它必然会遭到统治阶级的破坏；</p>
<ul>
<li>人口的增长必然导致考生数量的增加。在落第的比例本来已经越来越大的考生总数中，官宦子弟所占的比例也越来越高。他们最不愿忍受失败，又最有能力和社会关系去破坏规则；（舞弊、买卖官位）</li>
</ul>
<blockquote>
<p>社会生态学，即社会上层人口与下层人口的比例。</p>
</blockquote>
</li>
<li><p>关于定额制（配额制），即在录取或录用时为不同的社会群体规定不同的额度；</p>
<ul>
<li><p>宋朝司马光 “分路取人”（每十人取一人） Vs.  欧阳修”凭才取人”（唯才是举）</p>
</li>
<li><p>有一年某个考官主持下的北方考生全部落榜，惹起轩然大波，最后被处死</p>
</li>
<li><p>最后设立 “分地而取” 的方针；会式分南、北、中卷；每百名进士中，南取55人，北取35人，中取10人</p>
<blockquote>
<p>在现代美国社会，也存在定额制</p>
</blockquote>
</li>
</ul>
</li>
<li><p>定额制照顾了弱势群体。在近现代的世界中，它总是与社会公正结合在一起；只有中国当代高考中的定额制是反其道而行，它公然照顾强势群体——大城市中的考生；</p>
</li>
<li><p><strong>学历社会带来的不是 “机会的平等”，而是 “游戏规则的平等”</strong> ；这才是科举与现代教育制度的贡献；人类更热爱的是差异的刺激。平等并不是人们真正的目标，平等不过是反对成员间地位差距过大的策略和说辞；文明的进步其实只是努力保障失败者或位卑者的尊严</p>
</li>
<li><p>学历只是某些领域的入场券，”它只说明了最低限度的成就”，高限的成就要通过专家系统中同行的认可才能获得；</p>
</li>
</ol>
<p><br></p>
<h2 id="第十二章-同行评议与科学（专家系统二）"><a href="#第十二章-同行评议与科学（专家系统二）" class="headerlink" title="第十二章 同行评议与科学（专家系统二）"></a>第十二章 同行评议与科学（专家系统二）</h2><ol>
<li>学历只是进入专家系统或科学共同体的必要条件之一；进入该系统后的学术地位取决于同行的评议；</li>
<li>政治的要害问题是产生领袖。在选民的眼中，<strong>竞争者的主要差异不是解决同一问题的理性能力高下，而是优先解决哪些问题的价值观上的区别；</strong></li>
<li>“提出一个问题比解决一个问题更重要，因为解决问题也许仅是数学上或实验上的技巧而已；而提出新的问题、新的理论，从新的角度去看旧的问题，却需要有创造性的想象力，而且标志着科学的进步。”——爱因斯坦</li>
</ol>
<p><br></p>
<h2 id="第十三章-走向杀熟之路"><a href="#第十三章-走向杀熟之路" class="headerlink" title="第十三章 走向杀熟之路"></a>第十三章 走向杀熟之路</h2><blockquote>
<p>杀熟，指的是欺诈熟人</p>
</blockquote>
<ol>
<li>生物的世界中存在着两种竞争：种群之间的竞争、种群之内的竞争</li>
<li>种群之内的竞争更加残酷，因为同类间争夺的是<strong>同种资源</strong>（物质资源、异性资源）；<ul>
<li>所有的社会动物都是 “社会地位的追求者”。两个动物在阶级次序中越接近，紧张度就越高；</li>
<li>异类间的竞争有时会转化为同类间的竞争，而同类间的竞争却很难转化为异类竞争</li>
</ul>
</li>
<li>同类件的攻击是对环境的拥挤做出的反映，它会导致物种生存上的合理分布。但攻击需要适度，而非致命性的；<ul>
<li>动物的攻击大多是仪式性的；强者的目的适宜威胁吓跑对手，弱者能认识到自己的处境，及时撤退；</li>
<li>当数量超过了自然的限度，空间变得极度紧张，彼此没有了退路，仪式性的攻击就会变成实质性的杀戮；<em>水槽中的鱼类会以极快的速度杀死同类；</em></li>
</ul>
</li>
<li>杀熟 - 传销；马克思你曾自白，他最可原谅的弱点是轻信。受骗不是大过，更非大恶；受骗只是传销骗局中一个<strong>次要的因素</strong>；更重要的因素是，<strong>受骗者迅速地转变为行骗人。</strong>难于退货的高额商品滞留在手中，会使传销信任们立即明白即受骗了。一个善良的人即使自己受骗了，却决不会转嫁他人，甚至会以自己的教训广告四周，骗局因此无法复制和繁衍；传销在中国泛滥的最重要原因是，大批受骗者为了挽回个人利益，如此轻易地越过道德的界限，踏上了杀熟的道路；</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;《信任论》_郑也夫 ；写于1999年&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_信任论_01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;作者首先从定义上去解释 “信任”；接着描述信任的表现形式： “利他” ，然后进一步解释 “利他” (信任)产生与形成的原因、发展历程；&lt;ul&gt;
&lt;li&gt;(1) 人性 - 利己； 规范 - 利他；(2) 文化力量的加入 + 漫长的幼儿成长期 + 模仿；使得利他得以持续&lt;/li&gt;
&lt;li&gt;信任始于亲族中，产生于领地上；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;之后作者解释信任的重要功能：&lt;strong&gt;简化思想&lt;/strong&gt;；并接着讨论它的社会功能、不同环境中的表现差异&lt;/li&gt;
&lt;li&gt;最后单独讨论了两种信任系统：&lt;strong&gt;货币系统、专家系统&lt;/strong&gt;；&lt;ul&gt;
&lt;li&gt;货币系统的最终逻辑：市场社会；专家系统的最终逻辑：社会学历&lt;/li&gt;
&lt;li&gt;两者共同开辟了陌生人的天地&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;信任的两种结构：人格信任、系统信任；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人格信任：对某个具体人物的信任，包括亲族、领地、同乡会的信任&lt;/li&gt;
&lt;li&gt;系统信任：对匿名人组成的制度系统的信任&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;信任的特性：&lt;strong&gt;(1) 时间差与不对称性；(2) 不确定性； (3) 属于主观的意识&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;诺言与兑现之间存在无法跨越的时间差；承诺人与选择相信的人在信息上有着无法跨越的不对称性&lt;/li&gt;
&lt;li&gt;未来本身有着不确定性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;“三军可以夺帅，匹夫不可夺志。”对一些事，&lt;strong&gt;自己心中必须要有自己的态度，在事物的两极之间，否能坚定自己的意志。但这也取决于首先你对这件事情要有先验知觉。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;均衡从来不是源于自我约束，而是靠着其他力量对某一势力的无限扩张的抵抗。&lt;/strong&gt;  &lt;u&gt;若要取得平衡，或者推动事物的发展，都可以从其他力量会采取的行动来进行思考，以此来促进均和或者推动行为的落地；&lt;/u&gt;&lt;ul&gt;
&lt;li&gt;每个人、群体、民族、语言、想法都会在一定程度上的&lt;strong&gt;自我膨胀&lt;/strong&gt;，这是生命体及其承载的一切事物的&lt;strong&gt;本性&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;权利不可能自我约束的，对它的有效约束只能来自其他力量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;“合作的基础不是真正的信任，而是关系的持续性”&lt;/strong&gt; 。在持续关系与合作之间还有一个环节——信任。即&lt;strong&gt;持续关系产生信任，信任导致了合作。&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;持续关系（即多次博弈）是合作，乃至一切复杂关系的基础&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;人类行为的动因：个人物质利益（个人取向） + 追求承认（他人与群体取向）&lt;/li&gt;
&lt;li&gt;领地是产生和发展复杂而稳定社会关系的重要因素；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;认识到基本上所有的制度都是简化复杂的机制&lt;/strong&gt;； &lt;u&gt;语言、金钱、权利、权威、标签、声誉、考核、分数&lt;/u&gt; &lt;ul&gt;
&lt;li&gt;信任（简化机制），是&lt;strong&gt;&lt;u&gt;凭借过去&lt;/u&gt;&lt;/strong&gt;进行简化的；&lt;/li&gt;
&lt;li&gt;信任&lt;strong&gt;增加了不确定性的宽容&lt;/strong&gt;，从而&lt;strong&gt;增加了人们行动的勇气和可能性&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;货币是一种媒介，而&lt;strong&gt;信任是这一媒介中的关键&lt;/strong&gt;。 &lt;strong&gt;货币通过数量差别取代质量差异，抹去了任何事物的特殊性，以自己的度量为一切事物完成了换算&lt;/strong&gt;；凭借着这种 &lt;strong&gt;“变质为量”&lt;/strong&gt; 的本领，货币获得了一种其他事物都不具备的渗透力；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;学历社会带来的不是 “机会的平等”，而是 “游戏规则的平等”&lt;/strong&gt; ；这才是科举与现代教育制度的贡献；人类更热爱的是差异的刺激。平等并不是人们真正的目标，平等不过是反对成员间地位差距过大的策略和说辞；文明的进步其实只是努力保障失败者或位卑者的尊严&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="社会学" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E7%A4%BE%E4%BC%9A%E5%AD%A6/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="社会学" scheme="http://yoursite.com/tags/%E7%A4%BE%E4%BC%9A%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>《代价论》_读书笔记</title>
    <link href="http://yoursite.com/2017/08/13/%E3%80%8A%E4%BB%A3%E4%BB%B7%E8%AE%BA%E3%80%8B_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/08/13/《代价论》_读书笔记/</id>
    <published>2017-08-12T16:00:00.000Z</published>
    <updated>2017-08-20T04:01:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>《代价论》_郑也夫；社会行为学；写于1995年</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_代价论_02.jpg" alt=""></p>
<blockquote>
<p>作者通过从事物的两个对立面进行分析与对比，帮助读者相对全面地进行认识；</p>
</blockquote>
<ol>
<li><p><strong>警惕目的论；不要把事物的目的/结果去解释它的原因；</strong></p>
</li>
<li><p>城市最伟大的价值在于它是人类对话的中心；<u>对此，又该如何指导你的行为？在当前社会的网络中，你获得了对话的平台，那你有什么能拿来对话呢？</u></p>
</li>
<li><p>冲突的存在是不可避免的；<strong>最有效的方式是将其公开化、明朗化、制度化；</strong>威胁到一个结构平衡的不是冲突本身，而是僵化。僵化使得敌对情绪积累，以致于一旦爆发只能走上一条分裂的道路。 <em>如果是一位管理者，一定要认识到这一点；</em></p>
</li>
<li><p>认识到<strong>特殊主义</strong>存在的必然性；并且当一种信任关系失败时，另一种信任关系必然会出现。</p>
</li>
<li><p>真正的平等是不存在的，人们只能在几种不平等中选择。代价更小的是：<strong>在具备完全规则的竞争市场中带来的不平等。</strong>“ 真正 “ 的平等可以理解为 <strong>“ 机会的平等，公平的竞争。”</strong></p>
<blockquote>
<p>竞争的起点从来都是不平等的，大家从未站在同一起跑线上。</p>
<p>在踏上起跑线之前的一切它管不了，但在进入市场竞争后，规则是一视同仁的；</p>
</blockquote>
</li>
<li><p>冲突是无法避免的，因为那是源自人的本性（大自然的物竞天择），伦理道德是抑制贪欲的最佳手段；</p>
</li>
<li><p><strong>判定一种文化的上限（其发达程度）是看其多样性的丰富程度，判断其下线（满足社会生活的基本要求）是看其是否提供了起码的同一性和相似性</strong>；</p>
</li>
<li><p><strong><u>从事物的两个对立面去看待与理解</u></strong>；eg：歧异 vs. 一致； 确定 vs. 概率</p>
</li>
</ol>
<a id="more"></a>
<h2 id="1-社会行为中的代价"><a href="#1-社会行为中的代价" class="headerlink" title="1. 社会行为中的代价"></a>1. 社会行为中的代价</h2><ol>
<li><p>“ 代价 “ 是经济学中的一个核心概念；因为经济学的经典性原理是：人们在经济生活中以最小的 [代价] 谋求最大的利润。</p>
</li>
<li><p>作者从一般意义上讨论代价的理论：是否人类要为它的一切收获付出代价，是否人们的一切分工、合作、竞争中都包含着代价，该如何评社会行为中难于避免的代价？</p>
</li>
<li><p>本书中的 “ 代价 “ 指的是<strong>以人的行动选择为前提的</strong>。</p>
<p>​</p>
</li>
</ol>
<p><br></p>
<h2 id="2-理性、非理性与代价"><a href="#2-理性、非理性与代价" class="headerlink" title="2. 理性、非理性与代价"></a>2. 理性、非理性与代价</h2><ol>
<li><p>“ 代价 “ ，必然与一种估算相关联，因而是理性的尺度。</p>
</li>
<li><p><strong>马克思 • 韦伯</strong> 最早开始探讨人的行为中的理论与非理性。他把人的行为划分为四种基本类型：</p>
<ul>
<li>目的取向的理性行为；如工程师造桥</li>
<li>价值取向的理性行为；如教徒为得救而祈祷</li>
<li>情感的行为；如父母责怪孩子</li>
<li>传统的行为；</li>
</ul>
<blockquote>
<p>只有承认目标可以是理性选择的，才能接受韦伯的第一种行为型；只有承认价值观也是理性，才能接受第二种行为型；</p>
</blockquote>
</li>
<li><p>作者认为，不是理性，而是感情；<strong>是人们的价值观决定着行为的目标</strong>。</p>
</li>
<li><p>理性只是一种手段；<strong>目标是价值观决定的，而价值观并不是一种理性。判断一种行动是否是理性的，要看行动者是否以一种理性的手段追求他的目标。</strong></p>
<ul>
<li>情感的行为（如果父母责怪孩子）不是理性，在于它听任感情而不是依靠理性去选择手段。</li>
<li>传统的行为不是理性，因为手段是非自觉的、未经思考的</li>
<li>宗教的行为不是理性，因为从理性出发不可能选择教徒们所认定的赎罪手段</li>
</ul>
</li>
</ol>
<blockquote>
<p>理性是逻辑指引下的思考，它可以更广义地定义为问题的解决和批判的思考，但只有在强调了逻辑成分时，它才成其为有价值单独讨论的特定的思想方法。</p>
</blockquote>
<p><br></p>
<h2 id="3-决定论批判"><a href="#3-决定论批判" class="headerlink" title="3. 决定论批判"></a>3. 决定论批判</h2><blockquote>
<p>决定论即宿命论</p>
</blockquote>
<ol>
<li>宿命论认为一切都是已定的；</li>
<li>虽然宗教多于宿命论有关，但并并不是多数宗教都持极端主义的宿命论。因为，宗教很多时刻并非要人们沉睡、隐秘，而是要他们行动，只不过它要以一种强悍的思想魅力u诱导他们，左右其动作，规定其行止。</li>
</ol>
<blockquote>
<p>哲学家用不同的方式解释世界，但问题在于改变世界。</p>
</blockquote>
<p><br></p>
<h2 id="4-目的论批判"><a href="#4-目的论批判" class="headerlink" title="4. 目的论批判"></a>4. 目的论批判</h2><ol>
<li>所谓<strong>目的论，就是以结果或目标来解释原因。</strong>“ 凡是存在的都是合理的 “ —— 黑格尔；这是最典型的目的论；</li>
<li>传统的观点认为分工的出现是为了创造更多的财富。（目的论；从目的推导原因）但分工的真实原因在于原始社会中人口密度的增大。竞争使一些人迁徙，但当无处可退的时候，就迫使人们改行，于是导致了分工。</li>
<li>我们<strong>要把事物的原因和功能区分开</strong>。要完全解释社会现象，功能是必定要解释的。但<strong><u>功能绝非事物存在的原因</u></strong>。<ul>
<li>不赞同的是为无生命的事物提出一个它所追求的目标<strong>，把一事物形成后发挥的某种功能——很可能是其副产品——说成产生的原因，其存在的目的；</strong></li>
</ul>
</li>
<li>人的选择从来不是安全自由的；他达到目标的手段，甚至他为自己设定的目标，都要受到限制：<ul>
<li>物质条件，包括生理条件、外部的生态条件和技术条件对他的限制</li>
<li>社会规范、社会价值观和其他观念对他的影响1. </li>
<li>对于人们今日的选择另一个限制就是他们过去的选择；定着它们的全部行为。动物的行为从不越轨，永无失误，这种机制以牺牲发展和变异换来了万事不变的稳定。而人类的命运就是不断选择，也一再失误，它以风险代价换得了发展与创新的机会。</li>
</ul>
</li>
<li>根本上说，<strong><u>选择的自由</u>是人与动物的分水岭</strong>；动物的生理机制规定着它们的全部行为。动物的行为从不越轨，永无失误，这种机制以牺牲发展和变异换来了万事不变的稳定。而<strong>人类的命运就是不断选择，也一再失误，它以风险代价换得了发展与创新的机会</strong>。</li>
</ol>
<p><br></p>
<h2 id="5-合作与团体生活"><a href="#5-合作与团体生活" class="headerlink" title="5. 合作与团体生活"></a>5. 合作与团体生活</h2><ol>
<li><strong>几乎没有无代价的合作，几乎没有无内耗的团体生活。</strong> 关键在于<strong>收益是否大于成本</strong>；<ul>
<li><em>初等物理学告诉我们，当两匹马拉车的时候，每匹马只能发挥自己力量的90%左右。这是因为套绳在于车的连接点上形成一个夹角，一部分力内耗了；若把两幅套绳平行地连接在车的两边，又因两匹马难以时时等速，不仅增加了车的摇晃，且增加了摩擦力；</em>即两马拉车必然会做出一些无用的功。但人们很少用一匹马拉车。因为多匹马能完成一匹马无法单独完成的工作。因而这些是有意义的代价，是必须付出的代价。</li>
<li>内耗和代价是不可避免，但又值得计算的。</li>
</ul>
</li>
<li>社会关系中，两人组合只是相互依赖，不服从一种超个人的团体意志。在这种关系中，每个人的投入最大，且两人的距离最近。<strong>三人组合带来了新的特征：一个人可能被多数否决。这是最简单的群体结构，它带来了群体对个人的压力。</strong>从两人到三人组合，意味着增加了伙伴，增加了协调的余地，但也削弱了个人的自由意志；</li>
<li>会议中，最佳的人数是不超过8人；人数较少，每个与会者都可能和可以扮演完整的角色：既是倾听者又是发言者。人数过多，有些人就会沦为单纯地倾听者；</li>
<li>当合作具有一定规模，变得常规化时，也就形成了团体生活。当团体生活复杂到包容了成员的全部生活，且有了严格的结构时，就构成了社会生活。</li>
<li>城市化是当代人类的发展趋势。关键在于城市是一个更大的交际场。它的膨胀为城市人带来了交通的负担和环境的污染，但它的浓缩又跨越了空间，把一个民族的杰出人物聚集在一起，从而减少了从一个村镇到另一个村镇的交通阻塞和信息隔绝。<strong>城市是人类对话的中心。</strong></li>
</ol>
<p><br></p>
<h2 id="6-竞争与否认冲突"><a href="#6-竞争与否认冲突" class="headerlink" title="6. 竞争与否认冲突"></a>6. 竞争与否认冲突</h2><blockquote>
<p>冲突时一切团体生活、社会生活中内耗的根源之一。但冲突又是源自人的本性，是大自然的法则（物竞天择）在一切生物上的体现。</p>
</blockquote>
<ol>
<li>团体生活中的内耗不仅在于任何一种合作方式都必然会有其结构上的支出（例如两匹马拉车在力学上的损耗，城市的生活产生的交通问题），更在于团体生活中的竞争与冲突；</li>
<li>虽然竞争和冲突必然使人们付出代价，尽管社会可以通过手段去调节，但铲除它们是不可能的。冲突根植在人的本性中：<ul>
<li>一方面只有通过合作，通过加入到另一个群体中才能存活，彻底地独自生活一步可能，因为文化手段早已取代个人独立生存的能力；</li>
<li>另一方面他又不可能对合作或团体中分配份额（权利、机会、物质利益等）的大小无动于衷</li>
</ul>
</li>
<li>如果<strong>冲突</strong>是客观存在的，<strong>使它公开化、明朗化、制度化将是代价最小、收益最大的调节方式</strong>；<u>在一个没有货不充分具备对冲突给予宽容及使之制度化的社会里，冲突总是趋向于负功能。<strong>威胁到一个结构平衡的不是冲突本身，而是僵化。僵化使得敌对情绪积累，以致于一旦爆发只能走上一条分裂的道路。</strong></u></li>
<li>现代工业社会的进步在于，它使潜在的冲突明朗化、制度化，给予这种冲突一套调节机制，努力使社会组织中的冲突转化为积极意义上的社会变迁。</li>
</ol>
<p><br></p>
<h2 id="7-特殊主义与普遍主义"><a href="#7-特殊主义与普遍主义" class="headerlink" title="7. 特殊主义与普遍主义"></a>7. 特殊主义与普遍主义</h2><blockquote>
<p>共存。对立又非对立。</p>
</blockquote>
<ol>
<li>特殊主义：凭借与行为者之间的特殊关系而认定对象身上价值的至上性。<ul>
<li><em>特殊主义标准，是只能应用于与自己有特殊关系的人们身上，不能普遍贯彻到一切人身上的原则。</em></li>
</ul>
</li>
<li><strong>普遍主义：独立于行为者与对象在身份上的特殊关系。</strong></li>
</ol>
<blockquote>
<p>两者的区别：<strong><u>支配着人们彼此取向的标准是依赖还是不依赖存在于他们之间的特殊关系</u></strong>。</p>
</blockquote>
<ol>
<li>扩大化了的社会交换和社会生活在互换一种普遍主义的尺度和价值观。<strong>货币的出现，标志着人们迈出了严格封闭的特殊主义的小圈子</strong>；货币是普遍主义价值及其尺度的结晶。</li>
<li>特殊主义与普遍主义分别构成了两种 “ 信任结构 “。</li>
<li>信任是任何规模、任何种类的社会生活的前提。没有最基本的信任就没有社会，丧失掉一切信任就是社会的瓦解。特殊主义与普遍主义在信任结构上的基本差别是：<strong>范围的差别</strong>；前者是一个<strong>较小的</strong>信任结构，后者构成了一个<strong>相对更大的</strong>信任结构。</li>
<li>社会中一个信任系统越大，成员间的信任感越弱、越单一；一个信任系统越小，成员间的信任感越强烈、越全面。</li>
<li><strong>两者之间会产生冲突</strong>，一方面特殊主义的信任结构是重交情，是人类群体赖以存在的重要条件之一；另一方面，这种品格的本质注定了它要超越规章的束缚，从而破坏人类社会同样赖以建立的一切制度化的秩序。并且这种冲突的深刻性在于<strong>两者谁也无法取代谁</strong>。</li>
<li>当一种信任关系失败时，另一种信任关系必然会出现。当金钱（一种力量）不能决定一种物品的购买权时，人际关系上的优势（另一种力量）必将出场。</li>
<li>特殊主义是唯一能取代和补充普遍主义的控制系统。两者之间未必总是对立的，它们的关系远非简单的二分法；</li>
<li>信任系统的扩散，依赖于三个条件：<ul>
<li>内部专业化所驱动的向外扩大交换与交流的趋势</li>
<li>一种提供认同感的意识形态</li>
<li>标准与操作手段</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="8-经济平等之妄想"><a href="#8-经济平等之妄想" class="headerlink" title="8. 经济平等之妄想"></a>8. 经济平等之妄想</h2><blockquote>
<p>完全的平等是不可能的；平等并不能促进发展；</p>
</blockquote>
<ol>
<li><p><strong>完全的平等是不可能的。</strong></p>
<ul>
<li><p><strong>按需分配不可能实现</strong>；因为按需分配首先并不是平等，它超越了平等的范畴。</p>
</li>
<li><p><strong>按劳分配也是存在问题的</strong>。客观的按劳分配是不存在的，企图按照这一原则去追求平等是不可能的。</p>
<ul>
<li><p>“ 劳 “ 是难以度量的；分配所依据的劳动之多少是需要与其社会效益相联系的，但是效率的标准却难以建立。</p>
<p>一个经典的例子是 “ 如果一个钉子工厂的水平评定是根据数量，厂家就会去生产小钉子；如果以质量为准绳，生产就会转向大钉子 “</p>
</li>
<li><p>体力劳动 vs. 脑力劳动。二者之间比值如何，没有一个客观的依据。在实践中只能凭借市场上的供求关系去决定，不然就是人为主观裁定。</p>
</li>
</ul>
</li>
<li><p>贯彻收入上的平等也是不可行的；即使收入上平等了，但在购买产品/服务的时候却会出现不平等的现象。比如早起的人抢购到产品，稀缺的东西价格更高；平等分配的原则只不过把竞争从生产领域赶到消费领域；</p>
</li>
</ul>
</li>
<li><p>完全的平等是不可取的，它不能促进发展</p>
<ul>
<li>收入上的平等刺激不了劳动者的积极性，因为它违背了人的本性。</li>
<li>等价交换刺激不了劳动积极性，因而也不是可取的。<strong>我们常常认为是等价交换，但实际发生的是不等价交换。</strong> <em>这里的不等价交换，并不是说巧取豪夺多。因为交换本身就带有自愿的内涵。</em> <strong>商人们总是努力在 “ 不平等交换 “ 中占据有利的位置。</strong> <em>一个商人辛苦地把茶叶从农夫运到牧区，是为了卖出好价钱；如果他的所得遵从按劳分配的原则，那他能获取的应该只有本地茶叶的价格 + 运费。</em></li>
</ul>
</li>
<li><p>平等分配的批判者认为平等的分配压制和剥夺了强者与能人，并非公正；<strong>公正的真正基础是<u>机会的平等，公平的竞争</u>。</strong> 但是<strong>竞争的起点从来都是不平等的</strong>，大家从未站在同一起跑线；</p>
</li>
<li><p>在社会实践的选择中我们只能以代价大小为标准。显然以强调机会平等、公平竞争的思想比强调分配平等的思想付出的代价更小，获得的收益更大。</p>
</li>
<li><p>最终意义上：<strong>平等是不存在的。人们只能在几种不平等中选择</strong>：</p>
<ul>
<li>特权身份带来的不平等</li>
<li><strong>具备完备规则的市场竞争带来的不平等；</strong></li>
</ul>
<blockquote>
<p>后者甚至难于避免地带着前者的 “ 胎记 “，比如家庭教育、遗产继承都限定了竞争的公平性。</p>
<p>但两者毕竟有本质的差别：后者把特权从个人权利的意义上铲除了。在踏上起跑线之前的一切它管不了，但在进入市场竞争后，规则是一视同仁的；</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h2 id="9-男女平等之困惑"><a href="#9-男女平等之困惑" class="headerlink" title="9. 男女平等之困惑"></a>9. 男女平等之困惑</h2><blockquote>
<p>平等是权利，而非结果。</p>
</blockquote>
<ol>
<li><p>男女不平等有两种类型：母系社会 和 父系社会；</p>
<ul>
<li>虽然有人对是否存在过母系社会表示怀疑，但可以确定的是有过一个不知道父亲的时代；</li>
<li>妇女的统治是建立在这样的基础之上，因此当群婚结束后父亲出现，母系社会遍终结了。</li>
<li>父系社会是因为人类社会固有的竞争性与掠夺性选择了男性占据统治地位；</li>
<li>在人类史中，基本的权利资源不外乎三种：暴力、金钱、知识；在早期历史中，暴力占据支配地位，而男子更有力量。</li>
</ul>
</li>
<li><p>随着历史的发展，在权利争夺的与社会生产中，<strong>力量的作用渐渐让位于智力与知识</strong>；结果是男子在两性中的优势渐渐失去，<strong>女子的劣势渐渐好转</strong>。 这种逆转发生在机器取代了体力的伟大工业革命之后。<em>妇女解放的宣言奏响于18世纪末的法国大革命，妇女解放的大潮在19、20世纪，这都是 “权利的转移” 与 “生产力的转移” 所酿成的。</em> 在权利基础与生产力基础变更之前，父权制度是无可谴责的，它是群体内外残酷竞争的必然结果，是减少内耗增加效率的合作结构。</p>
</li>
<li><p>古代的中国社会建立了最完备的父权制，现代的中国<strong>在智力与知识对权利与生产的决定作用上，在社会物质物质上远落后于发达国家时</strong>，然而我们的<strong>妇女解放、男女平等却走在了世界的最前列</strong>：城市中男女拥有一致的就业机会，获取同样的工资；农村中的男女获取同样的分工，等等；这种超前的、动用行政力量造就的妇女解放的<strong>直接后果是使得家庭关系紊乱。</strong> 我们的妇女解放运动仅仅将妇女推上了社会，却没有未她们提供家庭中的角色模式；家务该谁来做？中国人失去了社会文化的引导，只好听凭当事者去摸索、选择、碰撞与磕打。于是家庭矛盾丛生，角色冲突千奇百怪；</p>
<p>​        即使打破了旧的性别模式，在新型的社会生产与生活的关系中，通过40余年的实践，却仍然没有找到新的性别分工；究其原因，<strong>在于一种强大的政治力量，通过扶助弱者压制强者，干扰破坏着家庭中强者与弱者的正常分工。</strong> 甚至使得弱者误以为自己不弱，强者丧失了应有的信心。</p>
<ul>
<li>在一个正常的社会分配系统中，在体力依然成为生产力基础之组成部分的国情中，一个男子应该能比女子在生产中做出更大的贡献，但我们的分配系统贯彻着 “ 同工同酬 “ 的平均主义原则。当一个男子拿着同样多的工资回到家中时，他失去了往日的尊严。又因为他的体力毕竟由于他的妻子，便只好比工资不少于他的妻子干更多的家务。在一个不受行政力量干扰的分配体系中，强悍的男子外出挣更多的钱，弱小的女子守家做更多的家务。是社会主义对妇女的恩赐，使得中国男子看不到自己的力量，扎进家务中，日益女性化；</li>
<li>美国学者吉尔德对国家福利所做的批判是富有启示意义的：<strong>婚姻的解体并不是因为规章决定，而是因为福利水平破坏了父亲在家庭中所起的主要作用和所处的权威地位</strong>。</li>
<li>这种政治推动的妇女解放，也使得中国失去了自己的女性。在近40年的妇女解放运动中<strong>，女子从来没有认识到自己的独立价值是什么</strong>，相反她只是一味地跟从政治的引导，<strong>以男性的指标作为自己解放的标志</strong>：做女拖拉机手、女飞行员、女勘探队员。似乎完成了这些便是妇女解放的获得，实际上恰恰是这一过程中，男子的价值与特征被前所未有地席卷。”解放” 变成男人，这真实绝大的讽刺。</li>
<li>正是因为这一解放运动是扶持弱者、抑制强者为手段的，它把男子赶进了家务，把女子推向了社会，它使强者不敢相信自己的力量，弱者误以为自己不弱，从而破坏了社会的基本分工，瓦解了社会的效率；</li>
</ul>
</li>
<li><p>真正的妇女解放不应于干扰市场中自由公平的交换，而恰恰应建立在这种公平交换的基础之上；</p>
</li>
<li><p>因此经历过社会主义的妇女解放，又收到市场挫折的中国妇女将是痛苦看到一代；</p>
<ul>
<li>因为妇女要生儿育女的生理特征将在一定时间内影响她们从事社会性工作，也因为社会上劳动力的过剩，任何一个国家中都有相当数量的女子或终生或一段时间内做家庭主妇；这本是正常的；</li>
<li>但中国妇女回到家中尤为困难，原因是她们见过了广阔的天地，要她们回到室内格外困难。</li>
</ul>
</li>
<li><p>父权社会的最大收益在于为性别角色提供了一种模式，使他们免于陷入个体选择的困惑与冲突中，为社会提供了一种分工合作的秩序，使之免于混乱，得到一定的效率；而它最大的代价是压抑个性，不允许一个出类拔萃的女子超越社会对性别角色的规定，从而极大地浪费着女性的才能。</p>
</li>
<li><p>“男女平等” 时期的最大收益是它普及了一种观念：<u>女子拥有与男子同样的权利，从而为女子发展潜能提供了机会。</u> 但它迅速地<strong><u>走向极端</u></strong>，<strong>变追求机会平等为完全的平等</strong>，以致于造成一种新型的、更为荒诞的不平等：弱者对于强者的剥夺；</p>
</li>
<li><p>真正意义上的妇女解放，应该是<strong>认识到平等是权利，而不是结果。</strong><u>女子有权利就学、择业、从商、参政，但能否得到某一职位却是公平竞争的结果，而非社会的恩赐</u>；社会竞争的原则应该是一视同仁，不安地有任何意识形态上的偏见。它对女子的态度应该是：上不封顶，下不保底；即一个成功的女子可能成为学者、教授、主席，社会绝不进行人为的压制，同时也绝不进行人为的扶持，保证她获得某种社会职业；</p>
</li>
</ol>
<p><br></p>
<h2 id="10-伦理的诸种得失"><a href="#10-伦理的诸种得失" class="headerlink" title="10. 伦理的诸种得失"></a>10. 伦理的诸种得失</h2><ol>
<li>冲突时一切团体生活、社会生活中内耗的根源之一。但冲突又是源自人的本性，是大自然的法则（物竞天择）在一切生物上的体现。要使团体生活成为可能，必须借助种种手段抑制贪欲以缓和冲突，<strong>伦理道德正是克服贪欲的最佳手段</strong>。</li>
<li>“ 道德是个人利益冲突的产物…… 如果人们在生活中毫无冲突，也就不需要任何道德规范了。 “ —— 梯利</li>
<li>欲望是一切生物的本能。并且一切动物的贪欲都是有限的，其生理条件为其贪欲设下了天然的限定：它在饱暖之后自然心满意足；但<strong>人类则不然，它所创造出的不会腐烂可以贮藏的身外财富，使它突破了生理机制对欲望的限定，从而在贪欲上超越了一切生物。</strong></li>
<li>在伦理的重压之下，人类不仅可能失去生气，而且可能会扭曲个人；弗洛伊德认为<strong>超我（即社会道德）与本我（即人的本性）</strong>的剧烈冲突和失调是精神病发作的最主要原因。</li>
<li>道德不应该成为 [一切] 社会行为的尺度。在职务任用时，道德不应该成为唯一标准；</li>
</ol>
<p><br></p>
<h2 id="11-标准之缺憾"><a href="#11-标准之缺憾" class="headerlink" title="11. 标准之缺憾"></a>11. 标准之缺憾</h2><ol>
<li><p>一个健全的<strong>标准</strong>保证的是<strong>更大概率上的合理</strong>；</p>
</li>
<li><p>过往的一些标准：</p>
<ul>
<li><p>王位继承：它限制了选择的范围，不问强弱如何，长子上位；但如果选择王位择优制，那王子们从年幼开始就将明争暗斗；它说明了在古代，社会的安定常常牺牲择优和效率去换得</p>
</li>
<li><p>普选权：普选权的标准是人数，它赋予了每个成年人这种权利。它有很大的进步，<u>优势在于它们明确，它们客观，因而不易被滥用；</u>但也有不足之处</p>
<ul>
<li>普选权是无偿获得的，又是人人具有的，因此很多选民并不珍惜它；这点上就比较容易受到控制；</li>
<li>选民的教育程度、信息掌握都参差不同；一位深思熟虑的思想家的赞成票会被一位轻率的文盲的否定票抵消掉</li>
</ul>
<blockquote>
<p>普选权以智力意义上的公平（即智者应该有更大一些的权利）为代价，换得了人格意义上的平等</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>两者都在标准的选择上陷入了困境，都找不到一个合适的人为标准；</p>
<p>普选权找到的是人头加一定的年龄，收获是：它有效阻挡了少数权利者对他人权利的剥夺；代价是：少数杰出人物的意见也能被选民中的多数庸人所击败</p>
</blockquote>
<ul>
<li>体力劳动 vs. 脑力劳动：市场为脑力劳动报酬提供了一个更广泛的操作标准；<strong>市场的本质就是大众口味，市场上大众口味支配着一切；</strong></li>
<li>考试：考试只能保证较大概率上的成功；</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="12-分工与专业化"><a href="#12-分工与专业化" class="headerlink" title="12. 分工与专业化"></a>12. 分工与专业化</h2><ol>
<li><p>分工的缘由是相互交换；</p>
</li>
<li><p>专业化带来的困难：在各自的范围内形成了一种天然的屏障。这种专业屏障造成了不幸的后果。我们的知识是在相对孤立的情况下向纵深发展，而不是一面纵向发展，一面又横向沟通。我们正在得到的不是一幅紧密相连的完整画面，而是许多碎片——细部异常清晰，整体却支离破碎；</p>
<blockquote>
<p>T 字型学习 仍然是一个重要的发展方向；跨界的作用越来越大；</p>
</blockquote>
</li>
<li><p>一个既拥有广博知识又有专长的社会才是健全的社会；要做到这一点，只有<strong>在中高等教育中更重视通才</strong>的培养。<strong>一个人迟早必然会进入专业化的过程</strong>，在此之前应给予他更丰富的文化营养；</p>
</li>
</ol>
<p><br></p>
<h2 id="13-完善与停滞"><a href="#13-完善与停滞" class="headerlink" title="13. 完善与停滞"></a>13. 完善与停滞</h2><ol>
<li>完善仅指适应程度；</li>
<li><strong>互训</strong>：人类爱征服某样地区/物种的时候，同时<strong>也在被它所征服</strong>；游牧民族为了在各种不同季节里为他的家畜在草原植被中寻找生活资料，他自己的生活和行为必须准确地按时间表行动；</li>
<li>任何一种过度的适应都要付出沉重的代价；一个物种在既定的进化等级中越是专化和适应，它走向更高等级的趋势就越小；</li>
</ol>
<p><br></p>
<h2 id="14-传统与反传统"><a href="#14-传统与反传统" class="headerlink" title="14. 传统与反传统"></a>14. 传统与反传统</h2><blockquote>
<p>传统 $\ne$ 传统主义</p>
</blockquote>
<ol>
<li>“不立不破” 远比 “不破不立” 更有道理；新旧事物应在共存和比较中接受选择，不可以死凭借打击对方来抬高自己；</li>
</ol>
<p><br></p>
<h2 id="15-歧异与一致"><a href="#15-歧异与一致" class="headerlink" title="15. 歧异与一致"></a>15. 歧异与一致</h2><ol>
<li>人类容纳了自它诞生以来的体制与文化上生长出和积累下的巨大歧异，但仍牢固地保持为同一物种；</li>
<li>语言如此重要，是因为它解释超越了动物生理机制的人的机制的密码；</li>
<li>语言造成歧异的三种原因：<ul>
<li>信息传递中的”噪音”；在信息传递过程中，必然会有遗漏、衰减、歪曲某些信息</li>
<li>语言的编码过程；语言（代码）是静态的，现实是动态的；代码是有限的，现实是无限的；代码是抽象的，现实是具体的；</li>
<li>语言的解码过程，即信息接受者对语言的理解；</li>
</ul>
</li>
<li><strong>每个人都占据着一个他人都无法取代或完全重合的理解视野。</strong> 我是以第一人称来经历各种事件这件事，是没有任何人能够替代的；</li>
<li>文明的问答不在于它拒绝反而容纳着多样的异质，并能沟通它们，养育它们；</li>
<li><strong>判定一种文化的上限（其发达程度）是看其多样性的丰富程度，判断其下线（满足社会生活的基本要求）是看其是否提供了起码的同一性和相似性</strong>； 没有一种文明不致力于谋求基本的一致性，那是便利地生活在一个社会中的基本保障；</li>
<li>市场范围内的一切活动都以金钱尺度来衡量，商品和服务通过标价变得可比了；市场价值的这种扩张性不仅说明了市场的功劳，同时也暴露了它对其他社会领域的威胁，它可能毁掉市场价值之外的所有其他价值——知识、艺术、友情、尊严。正是为了抵御市场价值的泛滥，人们强行或人为规定了一些不可买卖或不受顾客左右的标准。比如个人的权利，运动奖牌，学术荣誉；</li>
</ol>
<p><br></p>
<h2 id="16-顺境与逆境"><a href="#16-顺境与逆境" class="headerlink" title="16. 顺境与逆境"></a>16. 顺境与逆境</h2><ol>
<li>凡仕宦之家，由俭入奢易，由奢入俭难；</li>
<li>处在顺境和优越条件下的人们往往要为此付出代价，客观的看他们缺少的是适当的压力；</li>
</ol>
<p><br></p>
<h2 id="17-风险与保障"><a href="#17-风险与保障" class="headerlink" title="17.风险与保障"></a>17.风险与保障</h2><blockquote>
<p>风险（个体） Vs.  保障（群体）</p>
</blockquote>
<ol>
<li>风险，是与选择对应的，它意指选择的<strong>某种结果的不确定性</strong>；如果当事人丧失了选择权，它的行为或被自身的生理本能，或为外部强制力量所决定，其结局如何多称不上风险，而应视为”注定”。 正是因为这个原因，我们很少说动物的行为包含风险；</li>
<li>信息的不完备为决策带来了风险；</li>
<li>棋、牌、人生代表了三种决策方式：<ul>
<li>棋，是 <strong>“全备信息”</strong> 的决策，其 “风险” 只在于一步步对弈构成的 “选择之树” 过于复杂，因智力和时间的限制，存在着失误的决策；</li>
<li>牌，是 <strong>“概率信息”</strong> 的决策，它呈现出若干信息，但并不完备，只能对不完备的部分作出概率判断，这种判定构成了牌戏决策的基础；</li>
<li>生活中的事物除了包括类似的棋牌行为，还有一些更模糊的事情，以致于连概率都找不到</li>
</ul>
</li>
<li>保险不同于回避风险，它的本质是<strong>风险转移</strong>；保险业把众人联系在一起，共同承担偶然事件造成的损失。从最广义的保险意义上说，转移风险的可能性允许个人从事冒险活动。 </li>
</ol>
<p><br></p>
<h2 id="18-乌托邦——否定代价之代价"><a href="#18-乌托邦——否定代价之代价" class="headerlink" title="18. 乌托邦——否定代价之代价"></a>18. 乌托邦——否定代价之代价</h2><blockquote>
<p>乌托邦：可以指任何被渴望不切实际的、不可能实现的想法或方案，它被认为是虚妄的、不合理性的期待，对现存状况的激烈背离；它可以意指很多不同的事物，但当我们说到乌托邦时，是指关于一个完美社会的图景。</p>
<p>乌托邦是不存在的，但同时它给予了人类新的思维角度</p>
</blockquote>
<ol>
<li>蒂里希(Paul Tilich)揭示出乌托邦思想<strong>忽视</strong>了人类有限性的弱点：乌托邦的根本弱点在于它预先假设了一个虚假的人的形象；</li>
<li>乌托邦思想丰富了人类对自己可能性和潜在力的认识；</li>
<li>人是具有可能性的存在物；</li>
<li>逻辑矛盾 Vs. 辩证矛盾<ul>
<li>逻辑矛盾：同一思维（主体）过程中对两个互相矛盾的命题或判断，同时肯定它们都是真的；即自相矛盾；<em>eg ：我认为万事万物都是有矛盾的；但我认为我们班上没有矛盾；</em></li>
<li>辩证矛盾：客观事物中，事物自身所包含的既对立又统一的关系；它是现实的矛盾，存在于自然界和社会的一切事物和现象以及人的思维中；</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="19-代价的界定与比较"><a href="#19-代价的界定与比较" class="headerlink" title="19. 代价的界定与比较"></a>19. 代价的界定与比较</h2><ol>
<li>人类的一切行为在为他带来收益的同时，也使他付出代价（代价是对收获而言）</li>
<li>代价的大小不仅要比较支出、浪费或牺牲掉的东西的多少，还要甚至更要比较付出了这些代价后收获的大小；令人惋惜的倒不在于浪费的数量的很大，而在于这些浪费的进步意义太少了；</li>
</ol>
<p><br></p>
<h2 id="20-中庸与极"><a href="#20-中庸与极" class="headerlink" title="20. 中庸与极"></a>20. 中庸与极</h2><ol>
<li>人们在面临的诸多选择之中（合作与竞争、平等与效益、特殊主义与普遍主义、风险与保障），没有一种选择能够最大限度地帮助我们减少代价；最理想的是中庸之途；</li>
<li>中道，是过度和不及的居间者；</li>
<li>如果中庸的理想最终蜕变为宣扬一种单是一的思想和主张，其结果必然是使社会趋向单一，这不仅是中庸的悲剧，也将是中庸的覆灭；</li>
<li>必须理解中庸所依赖的两极间必要的张力。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《代价论》_郑也夫；社会行为学；写于1995年&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_代价论_02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者通过从事物的两个对立面进行分析与对比，帮助读者相对全面地进行认识；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;警惕目的论；不要把事物的目的/结果去解释它的原因；&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;城市最伟大的价值在于它是人类对话的中心；&lt;u&gt;对此，又该如何指导你的行为？在当前社会的网络中，你获得了对话的平台，那你有什么能拿来对话呢？&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;冲突的存在是不可避免的；&lt;strong&gt;最有效的方式是将其公开化、明朗化、制度化；&lt;/strong&gt;威胁到一个结构平衡的不是冲突本身，而是僵化。僵化使得敌对情绪积累，以致于一旦爆发只能走上一条分裂的道路。 &lt;em&gt;如果是一位管理者，一定要认识到这一点；&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;认识到&lt;strong&gt;特殊主义&lt;/strong&gt;存在的必然性；并且当一种信任关系失败时，另一种信任关系必然会出现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;真正的平等是不存在的，人们只能在几种不平等中选择。代价更小的是：&lt;strong&gt;在具备完全规则的竞争市场中带来的不平等。&lt;/strong&gt;“ 真正 “ 的平等可以理解为 &lt;strong&gt;“ 机会的平等，公平的竞争。”&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;竞争的起点从来都是不平等的，大家从未站在同一起跑线上。&lt;/p&gt;
&lt;p&gt;在踏上起跑线之前的一切它管不了，但在进入市场竞争后，规则是一视同仁的；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;冲突是无法避免的，因为那是源自人的本性（大自然的物竞天择），伦理道德是抑制贪欲的最佳手段；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;判定一种文化的上限（其发达程度）是看其多样性的丰富程度，判断其下线（满足社会生活的基本要求）是看其是否提供了起码的同一性和相似性&lt;/strong&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;u&gt;从事物的两个对立面去看待与理解&lt;/u&gt;&lt;/strong&gt;；eg：歧异 vs. 一致； 确定 vs. 概率&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="社会学" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E7%A4%BE%E4%BC%9A%E5%AD%A6/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="社会学" scheme="http://yoursite.com/tags/%E7%A4%BE%E4%BC%9A%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>个人日志_2017年7月总结</title>
    <link href="http://yoursite.com/2017/08/05/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97_2017%E5%B9%B47%E6%9C%88%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/08/05/个人日志_2017年7月总结/</id>
    <published>2017-08-04T16:00:00.000Z</published>
    <updated>2017-08-13T03:48:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="7月总结"><a href="#7月总结" class="headerlink" title="7月总结"></a>7月总结</h2><p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年7月总结_01.jpg" alt=""></p>
<p><strong>你若不努力，拿什么谈未来。</strong></p>
<a id="more"></a>
<h3 id="【运动-amp-健康】-6分"><a href="#【运动-amp-健康】-6分" class="headerlink" title="【运动&amp;健康】 6分"></a>【运动&amp;健康】 6分</h3><ol>
<li>对于新年目标的达成情况：有约3周的时间早睡早起，还是不错的战绩。</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">做晨间日志</th>
<th style="text-align:center">早睡早起</th>
<th style="text-align:center">晚睡早起</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">23天</td>
<td style="text-align:center">9天</td>
<td style="text-align:center">14天</td>
</tr>
</tbody>
</table>
<p>​    7月的上半个月基本都是晚睡早起，很明显的两极分化；</p>
<ol>
<li>游泳这件事，终于能够成功离岸。迈出了新的一步；</li>
<li>壮丽的完成一个月2次中暑的壮举；之前好几天嘴巴就一直很苦涩，能感觉到自己的身体有异样，但并没有将其联想到疾病；<ul>
<li>第一次是因为身体原因</li>
<li>第二次是因为自己在大热天晚上跑步，一周跑了三次，然后就很难受；</li>
</ul>
</li>
<li>看着自己的肚子感觉变大了，体重稳稳地上120。</li>
<li>对自己的身体更好一点。7月，每周末去一次超市，买下周的早餐 + 水果；吃水果的频率比以前高了很多。</li>
</ol>
<p><br></p>
<h3 id="【生活-amp-娱乐】-7分"><a href="#【生活-amp-娱乐】-7分" class="headerlink" title="【生活&amp;娱乐】 7分"></a>【生活&amp;娱乐】 7分</h3><ol>
<li>一个月在迪卡侬买了8双鞋子，花费100大洋；罪过呀。更让我失望的是还没有买到自己想要的款式。</li>
<li>傍晚的时候去外滩吹吹风。自己心烦的时候，就会去东外滩吹风，发着呆，也不知道干什么。</li>
<li>看一看自己的鞋子已经变得很旧了，但依然在穿。新买的袜子也因此被弄脏了。对于自己的服饰有新的思考：<strong>不要求高档次，但一定要保证品质。</strong>并且尝试去遵循 <strong>“ 一进一出 “</strong> 的原则来管理自己的物品；</li>
<li>尝试在公司学习；就学习环境而言，的确是一个既安静又能够促使自己学习的好地方；但不免会有一些 “压抑”；</li>
<li>花了点时间写了一篇关于 “ 变化 “ 的文章。<a href="https://chf2012.github.io/2017/07/15/张开双臂，拥抱她/" target="_blank" rel="external">《张开双臂，拥抱她》</a></li>
<li>认识到 “ 找到适合自己的减压方式 “ 这一重要性。去搜寻减压的方式，并形成适合自己的方式。</li>
<li>偶然接触到众筹电影《摇摇晃晃的人间》，讲的是一位身体残疾的女诗人 - 余佘华，努力掌握自己人生的故事。从影片中感受到余秀华的坦荡；对于自己的情况，毫不避讳地诉说，我不是一个幸福的女人。<strong>因为坦诚，所以强大</strong>；坦诚的态度触动到了我，这将影响自己的生活方式与交友方式；<strong>做一个坦诚的人。</strong><ul>
<li><strong>对于自己不喜欢的事情，大胆说出来，让他们知道。不要害怕</strong>，不要以为这样你就不对。这才是你真正坦诚生活的样子。</li>
</ul>
</li>
<li>生活上的好习惯，重新梳理与记录，写入Anki回想；</li>
<li>其实，生活很无聊。运动的时候想找个小伙伴，都没有人。</li>
<li>《战狼2》，一人观影；并没有太多的感触，就是静静地看着；</li>
</ol>
<p><br></p>
<h3 id="【阅读-amp-学习】-10分"><a href="#【阅读-amp-学习】-10分" class="headerlink" title="【阅读&amp;学习】 10分"></a>【阅读&amp;学习】 10分</h3><ol>
<li>对于咨询，依然有着一份特殊的感情；爱它的工作方式，爱它的工作环境，爱它的一切；只是，自己并没有幸运到能够进入到这样的一个行业之中；但每次阅读到关于咨询的文章，都会有一种热血澎湃的感情在心中涌现；从大学第一次接触到咨询，接触到麦肯锡，到现在6年多过去了，依然会抑制不住的激动；也因为在偶然间阅读到咨询的文章，让自己在这一个月去学习与回顾咨询精英的优秀的工作习惯，让自己也能够变成那样子。<ul>
<li>《麦肯锡方法》- Ethan M. Rasiel (艾森.拉塞尔)，内容是不错，但很多观点具体怎么知道操作却没有讲。</li>
<li>对于 “ 工作习惯 “类的书籍《麦肯锡精英的48个工作习惯》 - 卢塚隆将、《麦肯锡精英的39个工作习惯》 - 大岛祥誉，读完之后把好的内容摘抄下来；<a href="https://chf2012.github.io/2017/07/22/《麦肯锡精英的48个工作习惯》_摘抄/" target="_blank" rel="external">《麦肯锡精英的48个工作习惯》_摘抄</a> 、<a href="https://chf2012.github.io/2017/07/23/《麦肯锡精英的39个工作习惯》_摘抄/" target="_blank" rel="external">《麦肯锡精英的39个工作习惯》_摘抄</a> </li>
</ul>
</li>
<li>对于构建自我的思维方式这件事，一直没有停歇；无论是之前在咨询公司，还是之后在互联网公司，自己都努力去构筑属于自己的思维方式；虽然有形成书面的指导文件，但问题还是之后的练习与固化。<ul>
<li>对于 “ 表达呈现 “， 通过重新阅读《金字塔原理》并将其进行梳理后，形成《思维的组织与表达》，并利用Anki这一非常好用的工具进行回想；</li>
<li>重新回顾《地头力》；很多内容都忘记了，也没有去实践。<strong>阅读的目的在于改变行为</strong>；只有输入，没有输出，最后输入的知识也只是在你脑中走一遍而已，最后也会离开。</li>
<li>认识到 “假设” 的重要性，但对于如何进行假设仍然没有思路。</li>
</ul>
</li>
<li>《刻意练习》 - Anders Ericsson (安德斯.艾利克森)，对于学习需要进行刻意的练习这一概念的提出，是一个很重要的认识。这本书的全部价值，应该就只在于进行刻意练习所要遵从的几个要求；并不建议仔细阅读；对于如何开展的方法，倒可以仔细思考；<a href="https://chf2012.github.io/2017/07/11/《刻意练习》_读书笔记/" target="_blank" rel="external">《刻意练习》_读书笔记</a></li>
<li>翻阅《练习的心态》，提到 <strong>“ 你不可能改变你不知道的事情 “。即如果你无法掌握当下自己的思维，那你就不可能改变它。</strong>这一点，对于改变自己的思维模式与行为方式很重要；</li>
<li>图像的认识；<ul>
<li>了解Windows元件，是一种矢量图的图片格式；认识到粘贴的时候采取 <strong>“选择性粘贴 - Windows元件”</strong>；</li>
<li>把图片复制到PPT时，尝试选中<strong>带图片的文本框</strong> （新建空白页面时自带的那个文本框），然后在复制</li>
</ul>
</li>
<li>重新更正文件的命名格式。了解 “文件名命名法” 、 “下划线与连接符” 的使用。<a href="https://chf2012.github.io/2017/07/11/文件名命名规范/" target="_blank" rel="external">《文件名命名规范》</a></li>
<li>梳理《工作思索》，把启发与感悟写下来，关键是要<strong>转化为可落实的行为</strong>。</li>
<li>《你好，费曼先生》 - Fenyman，以两部分来讲述费曼的一生。内容并不有趣也不深刻，唯一让我启发的句子也还是从其他书上看到的：<strong>问题的目的在于探究 “ X究竟是什么？ “ 这件事本身，而答案是用什么方式找出来的并不重要。</strong></li>
<li>开始阅读《货币金融学》 - 弗雷德里克.米什金</li>
</ol>
<p><br></p>
<h3 id="【工作】-7分"><a href="#【工作】-7分" class="headerlink" title="【工作】 7分"></a>【工作】 7分</h3><ol>
<li>重新开始写工作日志；6月份由于没有太多工作，并把精力放在考证与学习上，基本没有什么也写的内容也就停下来了。</li>
<li>对于表达呈现有了新的思考；当下的工作环境，最终呈现的最佳工具是PPT，而对PPT来说最好的图表是其自带的Office图表；而与之匹配的是Excel，而不是R的ggplot2或者Python的matplotlib。并且图形的表现原则是：<strong>尽量简单，一个图表只表达一个意思</strong>；图表在于 “ 富有思想 “ ，而不是复杂化；理解到编程语言工具的作图的应用场景：<u>(1)面对大量数据作图；(2)复杂的图形</u>；这两个对于制作图表很有用，但对于<strong>如何最到最佳的表现形式这一点上，关键在于你要表达的内容与你的逻辑思考能力，把复杂的信息简单化，只有你能够真正抓住重点，需要把它表达出来的工具，Excel的作图足够了</strong>。反向思考，如果你不能用Excel的图形表达出来，<strong>必须要借助复杂的图形来表单，80%的情况是你自己并没有抓住重点，也没有明白自己要表达什么。</strong>当然剩下的20%就的的确确是要用复杂的图形来表示；<ul>
<li>原本想用Python调用R的ggplot2包，浪费了很多时间在学习Rpy2</li>
<li>之后因为思想上的转变，放弃了上述想法，转而只学习Python包里面的作图工作ggplot包</li>
<li>最后放弃Python转而继续使用R来进行数据分析（理由：R能让你专注于数据本身，以及对数据分析所需知识的学习；这个对当前的自己来说比编程更加重要）</li>
</ul>
</li>
<li>制作业务数据图表，每天早上进行查看。高管们每天都在了解的内容，你更应该去了解。花了很多时间在编写代码，联接到Excel进行自动更新上；我知道这虽然对于当下自己的工作并不会有太多的意义，但我也知道在长久的过程中会是一个很重要的信息。</li>
<li>数据处理上的反思：<ul>
<li><strong>能在SQL中完成的数据调整</strong>，一定要在SQL中完成，不要带到Excle这种图形化软件中；例如，对格数据格式的调整</li>
<li>学习到Excel透视表可以直接构建环比、差值 （新技能）</li>
<li>对于数据分析，关键是要去分析和理解现象变化背后的原因，而不仅仅是了解变化的结果。</li>
<li><strong>信息并不是越多越好，而是经过筛选后，给到的信息恰巧能够解决对方的问题</strong>。（朱琳面对同一个需求，给出的答案就只是交易盈亏）</li>
<li>数据分析最开始要了解的两个内容：<strong>(1)数据是如何采集的；(2)数据是如何更新的；</strong></li>
</ul>
</li>
</ol>
<p><br></p>
<h3 id="【友情】-6分"><a href="#【友情】-6分" class="headerlink" title="【友情】 6分"></a>【友情】 6分</h3><ul>
<li>与2位老朋友联系；<ol>
<li>李童鞋发微信说这周在上海，约她一起吃饭；只可惜她太忙碌，最后没有见面。</li>
<li>打电话给郭哥，聊聊近况，并无其他；</li>
</ol>
</li>
<li>邀约2位新朋友，均未果<ol>
<li>约朱童鞋出来游泳与打球，都没有成功；后来得知他周末常常回家，在江苏的家；</li>
<li>周末约周童鞋一起出来玩耍，未果；因为她侄子的到来，所以要陪着她一起玩耍；</li>
<li>杨童鞋去北京学习瑜伽，去追寻她想要的样子；加油。</li>
</ol>
</li>
</ul>
<p><br></p>
<ul>
<li>对于自我袒露，已经做得比以前好多了。基本上，自己的行踪同事们都是知道的。那下一步应该是去关心自己同事/朋友的行踪。构建联系。</li>
<li>梳理对待友情的正确方式，写下来，常回想；</li>
</ul>
<p><br></p>
<h3 id="【亲情】-6分"><a href="#【亲情】-6分" class="headerlink" title="【亲情】 6分"></a>【亲情】 6分</h3><ol>
<li>给家里买纸巾，跟老妈聊天；原来老妈已经到享受养老保险的年龄；</li>
<li>老妈跟我提起说下半年回宁波；这个让我很无语，也再一次跟她阐明自己的立场；</li>
</ol>
<p><br></p>
<h3 id="【投资】6分"><a href="#【投资】6分" class="headerlink" title="【投资】6分"></a>【投资】6分</h3><ol>
<li>完成公积金租房提取；在浦东的住房公积金中心办理，非常方便；这要感谢知乎中的小伙伴；</li>
</ol>
<p><br></p>
<h3 id="【感恩回报】-amp-【成功小事】"><a href="#【感恩回报】-amp-【成功小事】" class="headerlink" title="【感恩回报】&amp;【成功小事】"></a>【感恩回报】&amp;【成功小事】</h3><blockquote>
<p>在这两方面，自己都没有记录；或者说没有感悟。</p>
</blockquote>
<p><br></p>
<h3 id="【自我思索】9分"><a href="#【自我思索】9分" class="headerlink" title="【自我思索】9分"></a>【自我思索】9分</h3><blockquote>
<p>把要做的事，要养成的习惯记录下来，时常回顾；</p>
</blockquote>
<ol>
<li>7月初的时候，有种很孤单的感觉。所以，你一定不能辜负来上海的自己。</li>
<li>过去的7月，一直很焦虑；应该说一直以来都很焦虑，因为不知道自己的价值在哪里；在当前这份工作中，自己偏离业务太远，自己的工作似乎并没有提现太多的价值；这样的自己，不过是芸芸众生中的一颗小螺丝钉，而且是替代性很高的小螺丝钉；这个庞大的机器并不会因为你这个小螺丝钉的缺失而运转不良；</li>
<li>所谓大数据，所谓大数据分析，那是建立在编程的基础之上，专注于工程的岗位。而现在的工作与此并没有太多关联；更关键的是，我对自己的定位不是一个程序员，不是做一个编程的人，而是注重逻辑思维的人；如此想来，自己的核心价值在哪里，有什么是我擅长的；试着思考，但并没有明确的一点。</li>
<li>当下，最关键的是要把<strong>思维方式固化</strong>下来；使之成为自然地思考方式与行为习惯，这个是当务之急；</li>
<li>对于表达呈现，一定要刻意练习。不仅在书面表达中，而且在口头表达中；<ul>
<li><em>在口头表达的时候，没有运用 “金字塔结构”。今天跟华哥表述期货数据使用时，并没有。</em></li>
</ul>
</li>
<li>加强对于个性塑造的回想，把期望的自己写入到Anki中时长回想；需要加强的方面：<ul>
<li>稳重：问别人问题之前自己要先思考；不要总是说你觉得怎么样；说话慢一点，再慢一点；</li>
<li>自信：说话的时候要直视对方，要看着对方；</li>
<li><strong>要做一个真诚的人；保持善良、真诚待人、时常挂念；</strong></li>
</ul>
</li>
<li>重新对比各个信息平台（简书、博客、知乎、微信、头条），其实大可不必如果费心，在多平台上都发布文章，这个是众所周知的事情；</li>
<li><strong>写笔记时，要先对文章进行概括性的描述</strong>。</li>
</ol>
<p><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;7月总结&quot;&gt;&lt;a href=&quot;#7月总结&quot; class=&quot;headerlink&quot; title=&quot;7月总结&quot;&gt;&lt;/a&gt;7月总结&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年7月总结_01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你若不努力，拿什么谈未来。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人塑造" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
      <category term="个人日志" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="个人日志" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
      <category term="个人塑造" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>R_日期处理_lubridate</title>
    <link href="http://yoursite.com/2017/07/31/R_%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86_lubridate/"/>
    <id>http://yoursite.com/2017/07/31/R_日期处理_lubridate/</id>
    <published>2017-07-30T16:00:00.000Z</published>
    <updated>2017-08-01T07:38:08.000Z</updated>
    
    <content type="html"><![CDATA[<p> R_日期处理_lubridate</p>
<a id="more"></a>
<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="时间概念"><a href="#时间概念" class="headerlink" title="时间概念"></a>时间概念</h2><p>UTC：（英文“<strong>C</strong>oordinated <strong>U</strong>niversal <strong>T</strong>ime”／法文“<strong>T</strong>emps <strong>U</strong>niversel <strong>C</strong>oordonné”），<strong>协调世界时</strong>，又称<strong>世界标准时间</strong>或<strong>世界协调时间</strong></p>
<ul>
<li>最主要的世界时间标准，其以 <strong>[原子时]</strong> 秒长为基础，在时刻上尽量接近于<strong>格林尼治标准时间</strong>。</li>
</ul>
<ul>
<li>协调世界时把时间分为天、小时、分钟和秒</li>
</ul>
<p> <strong>格林威治标准时间</strong>；英语：<strong>G</strong>reenwich <strong>M</strong>ean <strong>T</strong>ime，<strong>GMT</strong>）是指位于英国伦敦郊区的皇家格林尼治天文台当地的标准时间，因为本初子午线被定义为通过那里的经线。</p>
<ul>
<li>理论上来说，格林尼治标准时间的正午是指当太阳横穿格林尼治子午线时（也就是在格林尼治上空最高点时）的时间。但由于地球在它的椭圆轨道里的运动速度不均匀，这个时刻可能与实际的太阳时有误差，最大误差达16分钟。原因在于地球每天的自转是有些不规则的，而且正在缓慢减速，因此格林尼治时间基于天文观测本身的缺陷，已经不再被作为标准时间使用。</li>
<li><strong>现在的标准时间，是由  [原子钟] 报时的协调世界时（UTC）来决定。</strong></li>
</ul>
<p><br></p>
<h2 id="R语言中的时间"><a href="#R语言中的时间" class="headerlink" title="R语言中的时间"></a>R语言中的时间</h2><p>R语言的基础包中提供了两种类型的时间数据</p>
<ol>
<li><strong>Date类型</strong>，仅包括日期数据，它不包括时间和时区信息</li>
<li><strong>POSIXct / POSIXlt 类型</strong>，其中包括了日期、时间和时区信息。</li>
</ol>
<blockquote>
<p>日期-时间=不可运算</p>
<p>默认情况下，<strong>日期是以<code>/</code>或者<code>-</code>进行分隔，而时间则以<code>:</code>进行分隔；</strong></p>
</blockquote>
<p><br></p>
<h3 id="POSIXct-POSIXlt-strptime-的区别"><a href="#POSIXct-POSIXlt-strptime-的区别" class="headerlink" title="POSIXct / POSIXlt / strptime 的区别"></a>POSIXct / POSIXlt / strptime 的区别</h3><ul>
<li><strong>POSXIct</strong> ：它存储自UNIX纪元(+其他数据)以来的<strong>秒数</strong> ；用<strong>数字</strong>表示，一个较大的整数，可以<strong>存储到数据框中</strong></li>
<li><strong>POSIXlt</strong> ：日期时间类，精确到秒，用<strong>列表</strong>表示，可以更精确地存储日/月/年/小时/分钟/秒等</li>
</ul>
<p><strong>函数运行 - POSIXlt</strong> </p>
<ul>
<li><strong>strptime</strong> ：字符向量(各种格式)直接转换为<strong>POSIXlt</strong>格式的函数</li>
<li><strong>as.POSIXlt</strong>：将各种数据类型转换为<strong>POSIXlt</strong>。</li>
</ul>
<p><strong>函数运行 - POSIXct</strong> </p>
<ul>
<li><strong>as.POSIXct</strong>：将各种数据类型转换为<strong>POSIXct</strong>。<ul>
<li>它首先运行<code>strptime</code>，然后从<code>POSIXlt</code>到<code>POSIXct</code>的转换</li>
</ul>
</li>
<li><strong>parse_date_time</strong>：将各种类型的数据转为为<strong>POSIXct</strong></li>
</ul>
<p><br></p>
<p>lubridate包主要有两类函数：</p>
<ol>
<li>处理<strong>时点数据（time instants）</strong></li>
<li>处理<strong>时段数据（time spans）</strong></li>
</ol>
<p><br></p>
<h1 id="时点类"><a href="#时点类" class="headerlink" title="时点类"></a>时点类</h1><p><br></p>
<h2 id="解析与提取日期-Prasing"><a href="#解析与提取日期-Prasing" class="headerlink" title="解析与提取日期 - Prasing"></a>解析与提取日期 - Prasing</h2><blockquote>
<p> 解析日期， <code>year(x)</code></p>
<p> 设定日期，通过赋值进行设定 <code>year(x) &lt;- value</code></p>
</blockquote>
<p><br></p>
<h3 id="解析日期-排列"><a href="#解析日期-排列" class="headerlink" title="解析日期 + 排列"></a>解析日期 + 排列</h3><ul>
<li><strong>ymd(“…”, tz=NULL) / dmy() / mdy()</strong>  ：<strong>处理不同顺序的日期数据</strong>，使之按年月日的形式<strong>排列</strong><ul>
<li><strong>dym() / ydm()</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>tz = NULL； 或为 指定的时区</p>
<p>locale = Sys.getlocale(“LC_TIME”) ：默认；</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 处理日期，使之按年月日的形式排列</span></div><div class="line">&gt; mdy(<span class="string">"06-04-2011"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2011-06-04"</span></div><div class="line"></div><div class="line">&gt; dmy(<span class="string">"04/06/2011"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2011-06-04"</span></div><div class="line"></div><div class="line">ymd(<span class="string">'20170208'</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2017-02-08"</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>hms(“…”, roll=FALSE) / hm() / ms()</strong> ：处理不同顺序的时间数据</li>
</ul>
<blockquote>
<p>roll=FALSE 默认；若为TRUE，则根据规则进行换算</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 处理时间</span></div><div class="line">&gt; hms(<span class="string">"14:20:01"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"14H 20M 1S"</span></div><div class="line"></div><div class="line">&gt; hms(<span class="string">"01:59:120"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"1H 59M 120S"</span></div><div class="line"></div><div class="line">&gt; hms(<span class="string">"01:59:120"</span>,roll=<span class="literal">T</span>)  <span class="comment"># roll=T,进行换算</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2H 1M 0S"</span></div><div class="line"></div><div class="line">ymd_hms(<span class="string">"20161120220000"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2016-11-20 22:00:00 UTC"</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>ymd_hms(“…”, tz=”UTC”, locale=Sys.getlocale(“LC_TIME”), truncated = 0)</strong> / ymd_hm / ymd_h ：处理不同顺序的<strong>日期时间数据</strong><ul>
<li>dmy_hms /dmy_hm /dmy_h</li>
<li>mdy_hms / mdy_hm / mdy_h</li>
</ul>
</li>
</ul>
<blockquote>
<p>… : 一个字符串向量 in year, month, day, hour, minute, second format</p>
<p>tz =”UTC” ：世界标准时间</p>
</blockquote>
<p><br></p>
<h3 id="提取日期"><a href="#提取日期" class="headerlink" title="提取日期"></a>提取日期</h3><ul>
<li><strong>year(“”) / month() / week() / day() / hour()  / minute() / second()</strong> ：<strong>解析日期中的部分值</strong></li>
<li><strong>month(x, label=FALSE, abbr=TRUE)</strong></li>
</ul>
<blockquote>
<p>label= FALSE，默认；将月份<strong>作为数值</strong>进行显示；若为TRUE，则作为字符串  “January.”</p>
<p>abbr = TRUE，默认，将月份作为字符串的缩写进行显示”Jan”，当label为FALSE时忽略该参数；若为FALSE，则显示全称 “January.”；  (abbreviate ：缩写)</p>
</blockquote>
<ul>
<li><strong>yday(x)</strong>：一年中的第几天</li>
<li><strong>mday(x)</strong>：一个月中的第几天</li>
<li><strong>wday(x)</strong>：一周中的星期几 [1, 7]</li>
<li><strong>qday(x)</strong>：一个<strong>季度中的第几天</strong></li>
<li><strong>days_in_month()</strong> ：返回所属月份的最大天数</li>
<li><strong>am(x) / pm(x)</strong> ：返回逻辑值，<strong>判断是否为上午/下午</strong><ul>
<li>12:00:00 判断为下午；<code>am(hms(&#39;11:59:59&#39;))  [1] TRUE am(hms(&#39;12:00:00&#39;)) [1] FALSE</code></li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&gt; year(<span class="string">'2017-01-02'</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">2017</span></div><div class="line"></div><div class="line">&gt; month(<span class="string">'2017-01-02'</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span></div><div class="line">&gt; month(<span class="string">'2017-01-02'</span>, label=<span class="literal">T</span>)</div><div class="line">[<span class="number">1</span>] Jan</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## 设定日期-----------------------------</span></div><div class="line">&gt; x &lt;- ymd(<span class="string">'2010-04-08'</span>);  x</div><div class="line">[<span class="number">1</span>] <span class="string">"2010-04-08"</span></div><div class="line"></div><div class="line">&gt; month(x) &lt;- <span class="number">5</span>  ; x</div><div class="line">[<span class="number">1</span>] <span class="string">"2010-05-08"</span></div><div class="line"></div><div class="line"></div><div class="line">&gt; days_in_month(as.Date(<span class="string">'2017-05-10'</span>))</div><div class="line">May </div><div class="line"> <span class="number">31</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><blockquote>
<p>parse_date_time 将格式各样的日期时间<strong>字符串转换为日期时间类型的数据</strong>，并通过orders<strong>指定显示的顺序</strong></p>
</blockquote>
<ul>
<li><strong>parse_date_time(x, orders, tz = “UTC”, truncated = 0, quiet = FALSE,  locale = Sys.getlocale(“LC_TIME”), select_formats = .select_formats,  exact = FALSE)</strong>：将向量转换为<strong>POSIXct</strong>的日期时间格式<ul>
<li>与strftime的两点区别：<ol>
<li>指定一个特殊的排列顺序，而无需使用 <code>%</code></li>
<li>在处理复合的日期时间数据时，可同时指定多个排列顺序</li>
</ol>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>x ：一个字符串 或数值 向量</p>
<p>order =c(“”): 指定的<strong>日期显示顺序</strong> ； 若涉及到日期与时间，将时间的小写改为大写； eg <code>ymd_HMS</code></p>
<p>tz =”UTC” ：世界标准市价</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&gt; x &lt;- c(<span class="string">"09-01-01"</span>, <span class="string">"09-01-02"</span>, <span class="string">"09-01-03"</span>)</div><div class="line">&gt; parse_date_time(x, <span class="string">"ymd"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-01-01 UTC"</span> <span class="string">"2009-01-02 UTC"</span> <span class="string">"2009-01-03 UTC"</span></div><div class="line"></div><div class="line"><span class="comment">## 复合时间 </span></div><div class="line"><span class="comment"># 处理复合的日期时间数据时，可同时指定多个排列顺序</span></div><div class="line">x &lt;- c(<span class="string">"09-01-01"</span>, <span class="string">"090102"</span>, <span class="string">"09-01 03"</span>, <span class="string">"09-01-03 12:02"</span>)</div><div class="line">parse_date_time(x, c(<span class="string">"ymd"</span>, <span class="string">"ymd_HM"</span>))</div><div class="line"></div><div class="line"><span class="comment">## 不同的排序规则 - 可以同时处理</span></div><div class="line">&gt; x &lt;- c(<span class="string">"2009-01-01"</span>, <span class="string">"02022010"</span>, <span class="string">"02-02-2010"</span>)</div><div class="line">&gt; parse_date_time(x, c(<span class="string">"dmY"</span>, <span class="string">"ymd"</span>))</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-01-01 UTC"</span> <span class="string">"2010-02-02 UTC"</span> <span class="string">"2010-02-02 UTC"</span></div><div class="line"></div><div class="line"><span class="comment">## 季度与部分日期</span></div><div class="line">&gt; parse_date_time(c(<span class="string">"2016.2"</span>, <span class="string">"2016-04"</span>), orders = <span class="string">"Yq"</span>)  <span class="comment"># q 代表季度;</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2016-04-01 UTC"</span> <span class="string">"2016-10-01 UTC"</span> </div><div class="line"></div><div class="line">&gt; parse_date_time(c(<span class="string">"2016"</span>, <span class="string">"2016-04"</span>), orders = c(<span class="string">"Y"</span>, <span class="string">"Ym"</span>))</div><div class="line">[<span class="number">1</span>] <span class="string">"2016-01-01 UTC"</span> <span class="string">"2016-04-01 UTC"</span></div><div class="line"></div><div class="line"><span class="comment"># Y 与 y 的区别   # Y大写表示全称；y表示缩写；</span></div><div class="line">&gt; parse_date_time(c(<span class="string">"16.2"</span>, <span class="string">"16-04"</span>), orders = <span class="string">"yq"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2016-04-01 UTC"</span> <span class="string">"2016-10-01 UTC"</span></div><div class="line">&gt; parse_date_time(c(<span class="string">"16.2"</span>, <span class="string">"16-04"</span>), orders = <span class="string">"Yq"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span> <span class="literal">NA</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>decimal_date(x)</strong>：将日期格式<strong>转化为小数格式</strong>；</li>
</ul>
<blockquote>
<p>x : a POSIXlt/ct or Date object</p>
</blockquote>
<ul>
<li>date_decimal(x) ：将小数<strong>转化为日期格式</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">date &lt;- ymd(<span class="string">"2009-02-10"</span>)</div><div class="line">decimal_date(date)</div><div class="line">[<span class="number">1</span>] <span class="number">2009.11</span></div><div class="line"></div><div class="line">date_decimal(decimal_date(date))</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-02-10 UTC"</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>as.Date()</strong>：以<strong>数值</strong>形式存储，精确到天<ul>
<li><strong>解析类函数，默认已完成了格式转换</strong>；eg <code>ymd(&quot;2012-04-21&quot;)</code></li>
</ul>
</li>
<li><strong>as.POSIXct()</strong> ：以一个<strong>数值</strong>形式进行存储，精确到秒</li>
<li><strong>as.POSIXlt()</strong> ：以列表的形式进行存储，精确到秒</li>
</ul>
<p><br></p>
<ul>
<li><strong>unclass(x)</strong> ：<ul>
<li>可以将<strong>日期</strong>变成<strong>以天来计数</strong> ；</li>
<li>可以将<strong>时点类</strong>根据<strong>最基本的组成进行拆解</strong></li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"> x&lt;-as.Date(<span class="string">"1970-01-01"</span>) </div><div class="line">&gt; unclass(x) </div><div class="line">[<span class="number">1</span>] <span class="number">0</span></div><div class="line">&gt; </div><div class="line">&gt; unclass(as.Date(<span class="string">"1970-02-01"</span>)) <span class="comment">#19700201代表第31天</span></div><div class="line">[<span class="number">1</span>] <span class="number">31</span></div><div class="line"></div><div class="line"><span class="comment"># --------对时点类时间进行拆解--------------------------------------</span></div><div class="line"><span class="comment">## POSIXct 格式；主要特点：以秒进行存储。</span></div><div class="line">&gt; unclass(now())  <span class="comment"># 等价于 unclass(as.POSIXct(now()))</span></div><div class="line">[<span class="number">1</span>] <span class="number">1501495056</span></div><div class="line">attr(,<span class="string">"tzone"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">""</span></div><div class="line"></div><div class="line"><span class="comment">## POSIXlt 格式；主要特点：以列表进行单独储存格式，可以作为时间筛选的一种</span></div><div class="line">&gt; unclass(as.POSIXlt(now()))</div><div class="line">$sec</div><div class="line">[<span class="number">1</span>] <span class="number">18.43142</span></div><div class="line"></div><div class="line">$min</div><div class="line">[<span class="number">1</span>] <span class="number">58</span></div><div class="line"></div><div class="line">$hour</div><div class="line">[<span class="number">1</span>] <span class="number">17</span></div><div class="line"></div><div class="line">$mday</div><div class="line">[<span class="number">1</span>] <span class="number">31</span></div><div class="line"></div><div class="line">$mon</div><div class="line">[<span class="number">1</span>] <span class="number">6</span></div><div class="line"></div><div class="line">$year</div><div class="line">[<span class="number">1</span>] <span class="number">117</span></div><div class="line"></div><div class="line">$wday</div><div class="line">[<span class="number">1</span>] <span class="number">1</span></div><div class="line"></div><div class="line">$yday</div><div class="line">[<span class="number">1</span>] <span class="number">211</span></div><div class="line"></div><div class="line">$isdst</div><div class="line">[<span class="number">1</span>] <span class="number">0</span></div><div class="line"></div><div class="line">$zone</div><div class="line">[<span class="number">1</span>] <span class="string">"CST"</span></div><div class="line"></div><div class="line">$gmtoff</div><div class="line">[<span class="number">1</span>] <span class="number">28800</span></div><div class="line"></div><div class="line">attr(,<span class="string">"tzone"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">""</span>    <span class="string">"CST"</span> <span class="string">"CDT"</span></div></pre></td></tr></table></figure>
<blockquote>
<p>起始日期为1970-01-01</p>
</blockquote>
<p><br></p>
<h2 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h2><ul>
<li><strong>today( [tz=””])</strong>：返回当前系统的<strong>日期</strong>，不含时间；时区默认为当前计算机的时区</li>
</ul>
<ul>
<li><strong>now( [tz=””])</strong>：作为POSIXct对象返回当前系统的<strong>日期与时间</strong> ；时区默认为当前计算机的时区</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; today()</div><div class="line">[<span class="number">1</span>] <span class="string">"2017-07-31"</span></div><div class="line"></div><div class="line">&gt; now()</div><div class="line">[<span class="number">1</span>] <span class="string">"2017-07-31 15:43:46 CST"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="舍入-Rounding"><a href="#舍入-Rounding" class="headerlink" title="舍入 - Rounding"></a>舍入 - Rounding</h2><ul>
<li><strong>round_date(x, unit = “second”)</strong> ：<strong>根据unit对x进行四舍五入</strong>；</li>
</ul>
<blockquote>
<p>unit =”” ：可选的单位</p>
<ul>
<li>second(s) / mintue(s) / hour(s) / day(s) </li>
<li>week(s) / month(s) / quarter() </li>
<li>haflyear / year</li>
</ul>
</blockquote>
<ul>
<li><strong>floor_date(x, unit = “second”)</strong>：<strong>向下舍入</strong>；<ul>
<li>相当于取整；若unit=”hour” ，则舍去分钟的内容</li>
</ul>
</li>
<li><strong>ceiling_date(x, unit = “second”, change_on_boundary = NULL)</strong>：向上舍入；<ul>
<li><strong>向上取整</strong>； 若后面一位小数大于0，即向前进一位</li>
</ul>
</li>
</ul>
<blockquote>
<p>函数实际运行的三个步骤</p>
<ol>
<li>转换为表示日期下限的时点：2000-01-01 –&gt; 2000-01-01 00:00:00</li>
<li>向上舍入到下一个最接近的单位边界。  <em>if the rounding unit is month then next boundary for 2000-01-01 will be 2000-02-01 00:00:00.</em></li>
<li>如果舍入的最小边界单位小于一天，则返回第二步的时点</li>
</ol>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## round_date--------------------------------------------------</span></div><div class="line">x &lt;- as.POSIXct(<span class="string">"2009-08-03 12:01:59.23"</span>); x</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-08-03 12:01:59 CST"</span></div><div class="line"></div><div class="line">round_date(x, <span class="string">"minute"</span>)  <span class="comment"># 舍入到分钟</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2009-08-03 12:02:00 CST"</span></div><div class="line"></div><div class="line">&gt; round_date(x, <span class="string">"5 minute"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-08-03 12:00:00 CST"</span></div><div class="line"></div><div class="line">&gt; round_date(x, <span class="string">"2 months"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-09-01 CST"</span></div><div class="line"></div><div class="line">round_date(x, <span class="string">"quarter"</span>) == round_date(x, <span class="string">"3 months"</span>)</div><div class="line">round_date(x, <span class="string">"halfyear"</span>)</div><div class="line">round_date(x, <span class="string">"year"</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## floor_date--------------------------------------------------</span></div><div class="line">x &lt;- as.POSIXct(<span class="string">"2009-08-03 12:01:59.23"</span>)</div><div class="line"></div><div class="line">&gt; floor_date(x, <span class="string">"hour"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-08-03 12:00:00 CST"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## ceiling_date------------------------------------------------</span></div><div class="line">x &lt;- as.POSIXct(<span class="string">"2009-08-03 12:01:59.23"</span>)</div><div class="line"></div><div class="line">&gt; ceiling_date(x, <span class="string">"second"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-08-03 12:02:00 CST"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="设定时点"><a href="#设定时点" class="headerlink" title="设定时点"></a>设定时点</h2><blockquote>
<p>设定时点的两种方法：</p>
<ol>
<li>通过解析函数设定</li>
<li>通过时段类函数设定</li>
</ol>
</blockquote>
<ul>
<li><strong>通过解析函数设定</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#解析日期</span></div><div class="line">year(x)</div><div class="line"><span class="comment">#设定日期，通过赋值进行设定</span></div><div class="line">year(x) &lt;- value</div><div class="line"></div><div class="line">&gt; l &lt;- today(); l</div><div class="line">[<span class="number">1</span>] <span class="string">"2017-07-31"</span></div><div class="line">&gt; day(l) &lt;- <span class="number">10</span>; l</div><div class="line">[<span class="number">1</span>] <span class="string">"2017-07-10"</span></div><div class="line"></div><div class="line"><span class="comment"># 不可直接对today()进行赋值</span></div><div class="line">day(today())&lt;- <span class="number">10</span>  <span class="comment"># 显示报错</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>通过时段类函数直接设定</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 通过period来设定时间，一般为unit之后加s； 例如days / months</span></div><div class="line">&gt; today() + days(<span class="number">1</span>)  </div><div class="line">[<span class="number">1</span>] <span class="string">"2017-08-01"</span></div><div class="line"></div><div class="line"><span class="comment">## 通过 duraction来设定时间，一般period之前加d；即对原始先加s，在加d； 例如 ddays / dyears</span></div><div class="line">&gt; today() + ddays(<span class="number">1</span>)  </div><div class="line">[<span class="number">1</span>] <span class="string">"2017-08-01"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h1 id="时段类"><a href="#时段类" class="headerlink" title="时段类"></a>时段类</h1><p><br></p>
<h2 id="间隔-Intervals"><a href="#间隔-Intervals" class="headerlink" title="间隔 - Intervals"></a>间隔 - Intervals</h2><blockquote>
<p>interval：最简单的时段对象，它由<strong>两个时点数据</strong>构成。</p>
</blockquote>
<ul>
<li><strong>间隔类型</strong>： <code>is.intervals</code> &amp; <code>as.intervals</code></li>
<li><strong>interval(start, end, tzone = attr(start, “tzone”))</strong>：创建时间间隔</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 创建时间间隔</span></div><div class="line">&gt; x &lt;- ymd(<span class="string">'2010-04-08'</span>)</div><div class="line">&gt; interval(x,now())</div><div class="line">[<span class="number">1</span>] <span class="number">2010</span>-<span class="number">04</span>-<span class="number">08</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span> CST--<span class="number">2017</span>-<span class="number">07</span>-<span class="number">31</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">43</span> CST</div></pre></td></tr></table></figure>
<ul>
<li><strong>int_length()</strong> ：间隔的长度，以<strong>秒</strong>来计算</li>
<li><p><strong>int_start() / int_end()</strong> ：返回间隔的<strong>起始/结束日期</strong>时间</p>
</li>
<li><p><strong>int_shift(int, by)</strong>：对间隔两端<strong>同时进行转换</strong></p>
</li>
</ul>
<blockquote>
<p>by = duration( ): 一段持续时间或周期</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 转换</span></div><div class="line">int &lt;- interval(ymd(<span class="string">"2001-01-01"</span>), ymd(<span class="string">"2002-01-01"</span>))</div><div class="line">int_shift(int, duration(days = <span class="number">11</span>))</div><div class="line">[<span class="number">1</span>] <span class="number">2001</span>-<span class="number">01</span>-<span class="number">12</span> UTC--<span class="number">2002</span>-<span class="number">01</span>-<span class="number">12</span> UTC</div><div class="line"></div><div class="line">int_shift(int, duration(hours = -<span class="number">1</span>))</div><div class="line">[<span class="number">1</span>] <span class="number">2000</span>-<span class="number">12</span>-<span class="number">31</span> <span class="number">23</span>:<span class="number">00</span>:<span class="number">00</span> UTC--<span class="number">2001</span>-<span class="number">12</span>-<span class="number">31</span> <span class="number">23</span>:<span class="number">00</span>:<span class="number">00</span> UTC</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>int_flip(int)</strong>：翻转；将interval的起始时间与结束时间对调</li>
<li><strong>int_standardize()</strong>：标准化；确保间隔是正值，即结束时间大于开始时间；若非标准化，则自动调整</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">int &lt;- interval(ymd(<span class="string">"2001-01-01"</span>), ymd(<span class="string">"2002-01-01"</span>))</div><div class="line">int_flip(int)</div><div class="line">[<span class="number">1</span>] <span class="number">2002</span>-<span class="number">01</span>-<span class="number">01</span> UTC--<span class="number">2001</span>-<span class="number">01</span>-<span class="number">01</span> UTC</div><div class="line"></div><div class="line">int_standardize(int_flip(int))</div><div class="line">[<span class="number">1</span>] <span class="number">2001</span>-<span class="number">01</span>-<span class="number">01</span> UTC--<span class="number">2002</span>-<span class="number">01</span>-<span class="number">01</span> UTC</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>int_diff(times)</strong>：时间间隔对象, 包含 <strong>n-1段的时间间隔</strong></li>
</ul>
<blockquote>
<p>times为POSIXct, POSIXlt 或日期格式</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; dates &lt;- now() + days(<span class="number">1</span>:<span class="number">4</span>); dates</div><div class="line">[<span class="number">1</span>] <span class="string">"2017-08-01 17:00:07 CST"</span> <span class="string">"2017-08-02 17:00:07 CST"</span> <span class="string">"2017-08-03 17:00:07 CST"</span> <span class="string">"2017-08-04 17:00:07 CST"</span></div><div class="line">&gt; int_diff(dates)</div><div class="line">[<span class="number">1</span>] <span class="number">2017</span>-<span class="number">08</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">07</span> CST--<span class="number">2017</span>-<span class="number">08</span>-<span class="number">02</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">07</span> CST <span class="number">2017</span>-<span class="number">08</span>-<span class="number">02</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">07</span> CST--<span class="number">2017</span>-<span class="number">08</span>-<span class="number">03</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">07</span> CST</div><div class="line">[<span class="number">3</span>] <span class="number">2017</span>-<span class="number">08</span>-<span class="number">03</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">07</span> CST--<span class="number">2017</span>-<span class="number">08</span>-<span class="number">04</span> <span class="number">17</span>:<span class="number">00</span>:<span class="number">07</span> CST</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><p><strong>int_overlaps(int1, int2)</strong>：判断int1与int2之间<strong>是否有重叠</strong>的部分；并返回逻辑值 T/F</p>
</li>
<li><p><strong>int_aligns(int1, int2)</strong>：判断int1与int2<strong>是否对齐</strong>，并返回逻辑值 T / F</p>
</li>
</ul>
<blockquote>
<p><em>aligns : 对齐</em></p>
<p>若int1与int2 有相同的起始时间或结束时间，则返回T； 否则返回FALSE</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">int1 &lt;- interval(ymd(<span class="string">"2001-01-01"</span>), ymd(<span class="string">"2002-01-01"</span>))</div><div class="line">int2 &lt;- interval(ymd(<span class="string">"2001-06-01"</span>), ymd(<span class="string">"2002-01-01"</span>))</div><div class="line">int3 &lt;- interval(ymd(<span class="string">"2003-01-01"</span>), ymd(<span class="string">"2004-01-01"</span>))</div><div class="line"></div><div class="line">int_aligns(int1, int2) <span class="comment"># TRUE  ## 有相同的结束时间</span></div><div class="line">int_aligns(int1, int3) <span class="comment"># FALSE  </span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## 判断是否有重叠 </span></div><div class="line">int_overlaps(int1, int2) <span class="comment"># TRUE</span></div><div class="line">int_overlaps(int1, int3) <span class="comment"># FALSE</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>time_length(x, unit = “second”)</strong> ：计算两个时间之间的<strong>间隔</strong> （自定义间隔单位）</li>
</ul>
<blockquote>
<p>x ：a duration, period, difftime or interval</p>
<p>unit =  c(“second”, “minute”, “hour”,”day”, “week”,”month”, “year”)) </p>
</blockquote>
<p><br></p>
<ul>
<li><strong>difftime(time1, time2, tz,units=c(“”) )</strong> ：计算两个时间之间的<strong>间隔</strong> （自定义间隔单位）<ul>
<li><strong>该函数为Base函数</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p><strong>units = c(“auto”, “secs”, “mins”, “hours”,”days”, “weeks”))</strong> </p>
</blockquote>
<p><br></p>
<p><strong>%within%</strong></p>
<p><br></p>
<h2 id="持续时间-Durations"><a href="#持续时间-Durations" class="headerlink" title="持续时间 - Durations"></a>持续时间 - Durations</h2><blockquote>
<ul>
<li>duration：去除了时间两端的信息，纯粹以秒为单位计算时段的长度，不考虑闰年和闰秒，它同时也兼容基本包中的difftime类型对象。</li>
</ul>
</blockquote>
<ul>
<li><strong>期间类型</strong> ： <code>is.duration(x)</code> &amp; <code>as.duration</code></li>
<li><strong>duration(num = NULL, units = “seconds”, …)</strong>：创建持续时间</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">duration(<span class="number">90</span>, <span class="string">"seconds"</span>)</div><div class="line">duration(<span class="number">1.5</span>, <span class="string">"minutes"</span>)</div><div class="line"></div><div class="line"><span class="comment">## 比较判断</span></div><div class="line">duration(<span class="string">"day 2 sec"</span>) &gt; <span class="string">"day 1sec"</span></div><div class="line"></div><div class="line">is.duration(as.Date(<span class="string">"2009-08-03"</span>)) <span class="comment"># FALSE</span></div><div class="line">is.duration(duration(days = <span class="number">12.4</span>)) <span class="comment"># TRUE</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>dyears(x) / dweeks(x) / ddays(x) /dhours(x) / dminutes(x) / dseconds(x)</strong> ：<strong>快速创建</strong>持续时间的对象以便于<strong>进行日期时间操作</strong><ul>
<li><strong>没有dmonths()</strong>，因为其以秒为单位来创建，而月度常在30天/31天之间变化；而年度的话此时默认为365天；</li>
</ul>
</li>
</ul>
<blockquote>
<p>Durations的函数，以 <strong>[秒] 为单位</strong>进行创建</p>
<ul>
<li><strong>minutes(2)函数表示的2个整分钟的概念，而dminutes(2)则是具体120秒</strong></li>
<li>years(1)则是一个整年的概念<strong>而</strong>dyears(1)表示的365天**而</li>
</ul>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 规则说明：以 [秒] 为单位进行创建</span></div><div class="line"></div><div class="line">&gt; dyears(<span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"31536000s (~52.14 weeks)"</span></div><div class="line">&gt; years(<span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"1y 0m 0d 0H 0M 0S"</span></div><div class="line"></div><div class="line"><span class="comment">## 具体区别</span></div><div class="line">&gt; ymd(<span class="string">'20160228'</span>)+dyears(<span class="number">1</span>)  <span class="comment"># 以秒为单位进行扩展</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2017-02-27"</span></div><div class="line">&gt; ymd(<span class="string">'20160228'</span>)+years(<span class="number">1</span>)  <span class="comment"># 以年为单位进行扩展</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2017-02-28"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="周期-Periods"><a href="#周期-Periods" class="headerlink" title="周期 - Periods"></a>周期 - Periods</h2><blockquote>
<p>period：以较长的时钟周期来计算时段长度，它考虑了闰年和闰秒，适用于长期的时间计算。</p>
</blockquote>
<ul>
<li><strong>周期类型</strong>： <code>is.period</code> &amp; <code>as.period</code></li>
</ul>
<ul>
<li><strong>period(num = NULL, units = “second”, …)</strong>：创建周期</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; period(-<span class="number">1</span>, <span class="string">"days"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"-1d 0H 0M 0S"</span></div><div class="line"></div><div class="line">&gt; period(c(<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">1</span>), c(<span class="string">"second"</span>, <span class="string">"minute"</span>, <span class="string">"hour"</span>, <span class="string">"day"</span>, <span class="string">"week"</span>))</div><div class="line">[<span class="number">1</span>] <span class="string">"20d 2H 1M 3S"</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>years(x) / months(x) / weeks(x) / days(x)  / hours(x) / minutes() / seconds(x)</strong>：<strong>快速</strong>创建阶段对象以便于进行日期时间<strong>操作</strong></li>
</ul>
<blockquote>
<p>Durations的函数，以 <strong>[创建的函数单位] 为单位</strong>进行创建</p>
<ul>
<li><strong>minutes(2)函数表示的2个整分钟的概念，而dminutes(2)则是具体120秒</strong></li>
<li><strong>years(1)则是一个整年的概念</strong>而<strong>dyears(1)表示的365天</strong>而</li>
</ul>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 规则说明：以[创建的函数单位]为单位进行创建</span></div><div class="line">&gt; dyears(<span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"31536000s (~52.14 weeks)"</span></div><div class="line">&gt; years(<span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"1y 0m 0d 0H 0M 0S"</span></div><div class="line"></div><div class="line"><span class="comment"># 具体应用</span></div><div class="line">&gt; x &lt;- as.POSIXct(<span class="string">"2009-08-03"</span>);x</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-08-03 CST"</span></div><div class="line">&gt; x + days(<span class="number">1</span>) + hours(<span class="number">6</span>) + minutes(<span class="number">30</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"2009-08-04 06:30:00 CST"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h1 id="时区-Time-Zones"><a href="#时区-Time-Zones" class="headerlink" title="时区 - Time Zones"></a>时区 - Time Zones</h1><blockquote>
<p><a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="external">时区索引</a></p>
</blockquote>
<ul>
<li><strong>tz(x)</strong>：提取时间数据的时区</li>
<li><strong>with_tz(time, tz=””)</strong>：将时间数据<strong>[显示] 为另一个时区的同一时间</strong></li>
<li><strong>force_tz(timez, tz=””)</strong>：将时间数据的时区<strong>[强制转换] 为另一个时区</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">tz(x) &lt;- value  <span class="comment"># 设置时区</span></div><div class="line"></div><div class="line"></div><div class="line">&gt; meeting &lt;- ymd_hms(<span class="string">"2011-07-01 09:00:00"</span>, tz = <span class="string">"Pacific/Auckland"</span>);meeting</div><div class="line">[<span class="number">1</span>] <span class="string">"2011-07-01 09:00:00 NZST"</span></div><div class="line">&gt; with_tz(meeting, <span class="string">"America/Chicago"</span>)    <span class="comment">#显示不同的时区相同的时刻</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2011-06-30 16:00:00 CDT"</span></div><div class="line"></div><div class="line"></div><div class="line">&gt; mistake &lt;- force_tz(meeting, <span class="string">"America/Chicago"</span>);mistake  <span class="comment"># 强制转化为另一个时区</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2011-07-01 09:00:00 CDT"</span></div><div class="line"></div><div class="line">&gt; with_tz(mistake, <span class="string">"Pacific/Auckland"</span>)  <span class="comment"># 显示转化之后的另一个时间的同一时间，判断是否转换成功</span></div><div class="line">[<span class="number">1</span>] <span class="string">"2011-07-02 02:00:00 NZST"</span></div></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h1 id="混杂的-Miscellaneous"><a href="#混杂的-Miscellaneous" class="headerlink" title="混杂的 - Miscellaneous"></a>混杂的 - Miscellaneous</h1><ul>
<li><strong>leap_years(x)</strong> : 判断是否为<strong>闰年</strong></li>
<li>pretty_dates() : provides a method of making pretty breaks for date-times</li>
<li><strong>make_difftime(num = NULL, units = “auto”)</strong> :</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">make_difftime(<span class="number">3600</span>, units = <span class="string">"minute"</span>)</div><div class="line"><span class="comment"># Time difference of 60 mins</span></div><div class="line"></div><div class="line">make_difftime(second = <span class="number">3</span>, minute = <span class="number">1.5</span>, hour = <span class="number">2</span>, day = <span class="number">6</span>, week = <span class="number">1</span>)</div><div class="line"><span class="comment"># Time difference of 13.08441 days</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>%m+%</strong> ：由于每个月的最后天数不一样，如果直接在某个月份的最后一天加上指定的<strong>月数</strong>就会出现错误，这时就得考虑使用%m+%函数了。</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">x &lt;- as.Date(<span class="string">'2015-01-31'</span>)</div><div class="line">y &lt;- x + months(<span class="number">0</span>:<span class="number">11</span>); y</div><div class="line"> [<span class="number">1</span>] <span class="string">"2015-01-31"</span> <span class="literal">NA</span>           <span class="string">"2015-03-31"</span> <span class="literal">NA</span>           <span class="string">"2015-05-31"</span> <span class="literal">NA</span>           <span class="string">"2015-07-31"</span> <span class="string">"2015-08-31"</span></div><div class="line"> [<span class="number">9</span>] <span class="literal">NA</span>           <span class="string">"2015-10-31"</span> <span class="literal">NA</span>           <span class="string">"2015-12-31"</span></div><div class="line"></div><div class="line">&gt; x %m+% months(<span class="number">0</span>:<span class="number">11</span>)</div><div class="line"> [<span class="number">1</span>] <span class="string">"2015-01-31"</span> <span class="string">"2015-02-28"</span> <span class="string">"2015-03-31"</span> <span class="string">"2015-04-30"</span> <span class="string">"2015-05-31"</span> <span class="string">"2015-06-30"</span> <span class="string">"2015-07-31"</span> <span class="string">"2015-08-31"</span></div><div class="line"> [<span class="number">9</span>] <span class="string">"2015-09-30"</span> <span class="string">"2015-10-31"</span> <span class="string">"2015-11-30"</span> <span class="string">"2015-12-31"</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; R_日期处理_lubridate&lt;/p&gt;
    
    </summary>
    
      <category term="软件应用" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/r/"/>
    
    
      <category term="软件应用" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/tags/r/"/>
    
  </entry>
  
  <entry>
    <title>R_数据处理_basic</title>
    <link href="http://yoursite.com/2017/07/25/R_%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86_basic/"/>
    <id>http://yoursite.com/2017/07/25/R_数据处理_basic/</id>
    <published>2017-07-24T16:00:00.000Z</published>
    <updated>2017-07-30T08:39:08.000Z</updated>
    
    <content type="html"><![CDATA[<p> R_数据处理_basic</p>
 <a id="more"></a>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p><strong>数据结构：向量、矩阵、数组、数据框、因子、列表</strong></p>
<p><br></p>
<h3 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h3><ul>
<li>用于储存数值型、字符型<strong>或</strong>逻辑性数据的<strong>一维数组</strong>。<ul>
<li>同一向量中的数据必须为同一模式；例如同为数值型</li>
</ul>
</li>
<li>通过<strong>方括号</strong><code>[ ]</code> 给定元素<strong>所处位置的数值</strong>来访问向量中的元素</li>
</ul>
<blockquote>
<p>标量：<strong>只含一个元素</strong>的向量</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">a[<span class="number">1</span>]</div><div class="line"></div><div class="line">a[<span class="number">2</span>:<span class="number">6</span>]</div><div class="line"></div><div class="line">a[c(<span class="number">2</span>,<span class="number">4</span>)]</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="矩阵-amp-数组"><a href="#矩阵-amp-数组" class="headerlink" title="矩阵&amp;数组"></a>矩阵&amp;数组</h3><ul>
<li><strong>矩阵：二维数组</strong>，每个元素都拥有相同的模式（数值型、字符型、逻辑型）<ul>
<li>使用<strong>方括号<code>[]</code>和下标</strong> 来选择矩阵中的<strong>行、列或元素</strong>；</li>
<li><strong>matrix(vector, nrow=n1, ncol=n2, byrow=FALSE, dimnames=list(rnames, cnames))</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>nrow/ncol = n，表示行列的数量，即维度</p>
<p>byrow = FALSE(默认)， 按列填充</p>
<p>dimanems=list() ： 可选的，以字符型向量命名的行名与列名</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">x&lt;- matrix(<span class="number">1</span>:<span class="number">10</span>, nrow=<span class="number">2</span>)</div><div class="line"></div><div class="line">x[<span class="number">2</span>,]</div><div class="line">x[<span class="number">1</span>,<span class="number">4</span>]</div><div class="line">x[<span class="number">1</span>,c(<span class="number">4</span>,<span class="number">5</span>)]</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>数组</strong>：任意维度的向量；是矩阵的自然推广<ul>
<li>array(vector, dimensions, dimnames=list())</li>
</ul>
</li>
</ul>
<p><br></p>
<h3 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h3><ul>
<li><strong>不同的列可以包含不同模式</strong>（数值型、字符型等）的数据，通常用<code>data.frame()</code>创建</li>
<li>通过<strong>方括号</strong><code>[ ]</code>与 <code>$</code> 以及 <code>attach()&amp;detach() 或 with()</code>进行<strong>选取</strong>列<ul>
<li><strong>列所处位置的数值</strong></li>
<li>指定<strong>列名</strong></li>
<li>运用<code>with()</code>进行数据框绑定，用花括号<code>{ }</code>来指定对数据框执行的语句；<ul>
<li>对象仅存在于with()结构以内</li>
<li>若要创建with()结构以外也存在的对象，使用特殊赋值符号<code>&lt;&lt;</code>替代标准的赋值符号<code>&lt;</code> ；可以将对象保存在全局环境中</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 指定 列所处位置的数值</span></div><div class="line">patientdata[<span class="number">1</span>:<span class="number">2</span>]  </div><div class="line"></div><div class="line"><span class="comment">## 指定列名</span></div><div class="line">patientdata[c(<span class="string">"disbetes"</span>, <span class="string">"status"</span>)]</div><div class="line"></div><div class="line">patientdata$diabetes</div><div class="line"></div><div class="line"><span class="comment">## --------with()绑定数据框-----------------------#</span></div><div class="line">with(mtcars, &#123;</div><div class="line">  stats &lt;- summary(mpg)</div><div class="line">  stats</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ul>
<li>列表：任意对象的<strong>有序</strong>集合；列表允许若干个对象到单个对象名下。（即列表可能是向量、矩阵、数据框，甚至是其他列表的组合）<ul>
<li>通过<strong>双重括号</strong><code>[[ ]]</code>中指名代表某个成分的<strong>数字或名称</strong>来访问列表中的元素</li>
<li>list(name1 = object1,  name2 = object2)</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mylist[[<span class="number">2</span>]]</div><div class="line">mylist[[<span class="string">'age'</span>]]</div><div class="line">mylist$age</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="结构判断"><a href="#结构判断" class="headerlink" title="结构判断"></a>结构判断</h3><ul>
<li><p><strong>str()</strong>：返回对象<strong>整体</strong>的<strong>数据结构</strong></p>
</li>
<li><p><strong>class()</strong>：返回<strong>单个对象格式/类型</strong></p>
</li>
<li><p><strong>mode()</strong>：返回对象模式</p>
</li>
<li><p><strong>dim()</strong>：返回对象维度</p>
</li>
<li><p><strong>summary()</strong>：统计摘要；<strong>区别对待不同类型的数据变量- (1)数值型：相关极值等信息；(2)名义型/有序型：显示的是各水平的频数值</strong></p>
<p>​</p>
</li>
</ul>
<p><br></p>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="因子"><a href="#因子" class="headerlink" title="因子"></a>因子</h3><blockquote>
<p>变量类别型变量（名义型、有序型）和连续型变量；</p>
<ul>
<li>名义型变量：<strong>没有顺序之分</strong>的 [类别型] 变量</li>
<li>有序型变量：<strong>一定顺序</strong>的 [类别型] 变量</li>
<li>连续型变量：呈现某个范围内的任意值，并<strong>同时表示了顺序和数量</strong>。</li>
</ul>
</blockquote>
<p><br></p>
<ul>
<li><strong><u>[名义型、有序型] 变量在R中称为 [因子] (factor)</u></strong></li>
<li>函数factor() 以一个<strong>整数向量</strong>的形式存储类别值，范围为[1..k]（<strong>k</strong>是名义型变量中<strong>唯一值的个数</strong>），同时<strong>一个字符串（原始值）组成的 内部向量 </strong>将<strong>映射到这些整数</strong>上</li>
<li><strong>facotr(x, ordered=FALSE, levels=c(), labels=c(), exclude=NA)</strong>：</li>
</ul>
<blockquote>
<p>ordered = FALSE(默认)；若为TRUE，则为<strong>有序型变量</strong></p>
<ul>
<li>对字符型向量，默认顺序按 <strong>英文字母顺序创建 [a-z]</strong></li>
</ul>
<p>levels=c()：覆盖默认排序的顺序；保证指定的水平<strong>与数据中的真实值相匹配</strong>，因为任何在数据中出现而未在参数列举中的数据都会被设为缺失值</p>
<p>labels=c()：将有序型变量<strong>转化为名义型变量</strong>；</p>
<ul>
<li><strong>标签的顺序</strong>必须和<strong>因子水平的顺序</strong>相一致；</li>
<li>所有不一致的变量将被设为缺失值NA</li>
</ul>
<p>exclude =NA：转变为因子时<strong>排除在外的变量</strong>，即不参与有序化；</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&gt; diabetes&lt;- c(<span class="string">'type1'</span>,<span class="string">'type2'</span>,<span class="string">'type1'</span>,<span class="string">'type1'</span>)</div><div class="line">&gt; diabetes &lt;- factor(diabetes);diabetes</div><div class="line">[<span class="number">1</span>] type1 type2 type1 type1</div><div class="line">Levels: type1 type2</div><div class="line"></div><div class="line"><span class="comment"># --------有序型因子，order=T------------------------------#</span></div><div class="line">&gt; status &lt;- c(<span class="string">'poor'</span>,<span class="string">'improved'</span>,<span class="string">'excellent'</span>,<span class="string">'poor'</span>)</div><div class="line">&gt; status &lt;-factor(status, ordered=<span class="literal">T</span>);status</div><div class="line">[<span class="number">1</span>] poor      improved  excellent poor     </div><div class="line">Levels: excellent &lt; improved &lt; poor</div><div class="line"></div><div class="line"><span class="comment"># 覆盖原有的因子顺序 -- levels=c()为指定的顺序</span></div><div class="line">status &lt;-factor(status, ordered=<span class="literal">T</span>, levels=c(<span class="string">'poor'</span>,<span class="string">'improved'</span>,<span class="string">'excellent'</span>));status</div><div class="line">[<span class="number">1</span>] poor      improved  excellent poor     </div><div class="line">Levels: poor &lt; improved &lt; excellent</div><div class="line"></div><div class="line"><span class="comment"># levels中的值必须在数据中出现；  参数中为出现的值默认被设置NA</span></div><div class="line">&gt; status &lt;-factor(status, ordered=<span class="literal">T</span>, levels=c(<span class="string">'poor'</span>,<span class="string">'improved'</span>,<span class="string">'x'</span>));status</div><div class="line">[<span class="number">1</span>] poor     improved &lt;<span class="literal">NA</span>&gt;     poor    </div><div class="line">Levels: poor &lt; improved &lt; x</div><div class="line"></div><div class="line"><span class="comment"># 变更为无序因子（名义型变量）</span></div><div class="line">&gt; status; </div><div class="line">[<span class="number">1</span>] poor      improved  excellent poor     </div><div class="line">Levels: excellent &lt; improved &lt; poor</div><div class="line">factor(status, labels=c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))  <span class="comment"># 标签的顺序必须和因子水平的顺序相一致</span></div><div class="line">[<span class="number">1</span>] <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">3</span></div><div class="line">Levels: <span class="number">1</span> &lt; <span class="number">2</span> &lt; <span class="number">3</span></div><div class="line"></div><div class="line"><span class="comment">#  因子化时排除某个变量</span></div><div class="line">&gt; x &lt;- factor(c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), exclude = <span class="number">3</span>); x</div><div class="line">[<span class="number">1</span>] <span class="number">1</span>    <span class="number">2</span>    &lt;<span class="literal">NA</span>&gt;</div><div class="line">Levels: <span class="number">1</span> <span class="number">2</span></div></pre></td></tr></table></figure>
<blockquote>
<p>语句<code>diabetes &lt;- factor(diabetes)</code> 将此向量存储为（1,2,1,1）<em>（以一个<strong>整数向量</strong>的形式存储类别值，范围为[1..k]）</em>，并在内部将其关联为 1 = type1 和 2 =type2<em>（具体赋值根据字母顺序而定）</em></p>
<p>针对向量diabetes进行的任何分析都会将其作为<strong>名义型变量</strong>对待，并<strong>自动选择</strong>适合这一测量尺度的统计方法</p>
<p>语句<code>status &lt;-factor(status, ordered=T)</code> 将向量存储为（3,2,1,3)，并在内部关联为 1=excellent, 2=improved, 3=poor</p>
</blockquote>
<p><br></p>
<h3 id="数据类型-amp-转换"><a href="#数据类型-amp-转换" class="headerlink" title="数据类型 &amp; 转换"></a>数据类型 &amp; 转换</h3><ul>
<li><p><strong>数值型</strong> - <code>is.numeric()</code> &amp; <code>as.numeric()</code></p>
<ul>
<li>整数型 <code>is.integer()</code> &amp; <code>as.integer()</code></li>
<li>双精度型 <code>is.double()</code> &amp; <code>as.double()</code></li>
</ul>
</li>
<li><strong>字符串形式</strong> <code>is.character()</code> &amp; <code>as.character()</code></li>
<li><strong>逻辑型</strong> <code>is.logical()</code> &amp; <code>as.logical()</code></li>
<li><strong>因子型</strong> <code>is.factor()</code> &amp; <code>as.factor()</code></li>
</ul>
<blockquote>
<p>as.factor(x) – 只能对整个数据/列进行转换，其中无法插入其他语法</p>
<p>在作图时因子化需用 <code>factor</code></p>
</blockquote>
<ul>
<li><strong>向量型</strong> <code>is.vector()</code> &amp; <code>as.vectro()</code></li>
<li><strong>矩阵型</strong> <code>is.matrix()</code> &amp; <code>as.matrix()</code></li>
<li><strong>数组型</strong> <code>is.array()</code> &amp; <code>as.array()</code></li>
<li><strong>数据框型</strong> <code>is.data.frame()</code> &amp; <code>as.data.frame()</code></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 多列变更</span></div><div class="line">data[,col:col] &lt;- lappy(gb[,col:col], as.numeric)</div><div class="line"><span class="comment"># gb[,c("net_activation","total_income")] &lt;- lapply(gb[,c("net_activation","total_income")], as.numeric)</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="数据选取"><a href="#数据选取" class="headerlink" title="数据选取"></a>数据选取</h2><h3 id="元素选取"><a href="#元素选取" class="headerlink" title="元素选取"></a>元素选取</h3><blockquote>
<p><strong>负号表示排除</strong></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##  负号：表示排除某一列</span></div><div class="line">mtcars[,-<span class="number">1</span>]  <span class="comment">#  表示排除第一列</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## 向量的选取</span></div><div class="line"><span class="comment"># 位置选取</span></div><div class="line">a[<span class="number">2</span>]; a[<span class="number">1</span>:<span class="number">6</span>]; a[c(<span class="number">1</span>,<span class="number">4</span>)];</div><div class="line"><span class="comment"># 判断选取</span></div><div class="line">a[a&gt;<span class="number">2</span>]; a[a==<span class="number">2</span>]</div><div class="line"></div><div class="line"><span class="comment">## 矩阵&amp;数据框选取</span></div><div class="line"><span class="comment"># 位置选取</span></div><div class="line">a[<span class="number">1</span>,]; a[,<span class="number">1</span>]; a[<span class="number">1</span>,<span class="number">2</span>]; a[<span class="number">1</span>, c(<span class="number">4</span>,<span class="number">5</span>)]</div><div class="line"></div><div class="line"><span class="comment">## 数据框选取</span></div><div class="line"><span class="comment"># 位置选取</span></div><div class="line">mtcars[<span class="number">1</span>,];  mtcars[,<span class="number">1</span>];  mtcars[<span class="number">1</span>:<span class="number">2</span>,];  mtcars[,<span class="number">1</span>:<span class="number">2</span>]</div><div class="line">mtcars[<span class="number">1</span>:<span class="number">2</span>]  <span class="comment"># 默认选取列，选取1与2列</span></div><div class="line">mtcars[<span class="number">1</span>:<span class="number">2</span>, <span class="number">3</span>:<span class="number">4</span>]</div><div class="line">mtcars[c(<span class="string">'wt'</span>)];  mtcars[<span class="number">1</span>:<span class="number">2</span>, c(<span class="string">'wt'</span>,<span class="string">'hp'</span>)]</div><div class="line">mtcars$hp  <span class="comment"># 运用 $ 进行选取</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="逻辑选取"><a href="#逻辑选取" class="headerlink" title="逻辑选取"></a>逻辑选取</h3><ul>
<li>逻辑选取，后端运行分为两步<ol>
<li><strong>根据已有的条件对每个对象进行判断，结果为TRUE或FALSE</strong></li>
<li><strong>指定某个对象中提取为TURE的值</strong><ul>
<li><strong><u>该对象的类型必须与条件判断的对象类型相同</u></strong> 或者说 <strong><u>前的范围必须 $\le$  后者</u></strong>；</li>
</ul>
</li>
</ol>
</li>
</ul>
<blockquote>
<p><code>mtcars$wt[mtcars$carb==2]</code> ：选取carb为2的wt列；注意，wt与carb的对象均为列；</p>
<p><code>mtcars[mtcars$carb==2]</code> ：会报错，提示<code>undefined columns selected</code> ；此时前者范围大于后者；<strong><u>因为mtcars有n列，但逻辑为TRUE的只有一列，无法判断应该选取哪一列，故报错。</u></strong></p>
<p><code>mtcars$carb[mtcars&gt;2]</code>： 可以运行；不满足的部分用NA显示</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 逻辑判断选取</span></div><div class="line">mtcars[mtcasr&gt;<span class="number">10</span>]</div><div class="line">mtcars$hp[mtcars&gt;<span class="number">10</span>]</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="子集选取-subset"><a href="#子集选取-subset" class="headerlink" title="子集选取 - subset"></a>子集选取 - subset</h3><ul>
<li><strong>subset(x, subset, select, drop = FALSE, …)</strong> ：<ul>
<li>S3 method for class ‘data.frame’</li>
</ul>
</li>
</ul>
<blockquote>
<p>subset ：选取的逻辑表达式；选取条件</p>
<p>select ：选择的列</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">subset(airquality, Temp &gt; <span class="number">80</span>, select = c(Ozone, Temp))</div><div class="line">subset(airquality, Day == <span class="number">1</span>, select = -Temp)</div><div class="line">subset(airquality, select = Ozone:Wind)</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h2><h3 id="重复和循环"><a href="#重复和循环" class="headerlink" title="重复和循环"></a>重复和循环</h3><ul>
<li><strong>for结构</strong> ：<code>for (var in seq) statement</code><ul>
<li>循环执行某语句statement，直到某个变量var的值不在包含在序列seq中为止</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">10</span>) print(<span class="string">"hello"</span>)</div></pre></td></tr></table></figure>
<ul>
<li><strong>while结构</strong> ：<code>while (cond) statment</code><ul>
<li>必须确保cond中的条件语句能【被改变】（即它在某个时刻不在为真），否则循环将永不停止</li>
</ul>
</li>
</ul>
<p><br></p>
<h3 id="条件执行"><a href="#条件执行" class="headerlink" title="条件执行"></a>条件执行</h3><blockquote>
<p>表示相等<code>==</code></p>
</blockquote>
<ul>
<li><strong>if-else结构</strong>：<code>if (cond) statement</code> 或者 <code>for (cond) statement1 else statement2</code></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!is.factor(grade)) gerade &lt;- as.factor(grade) <span class="keyword">else</span> print(<span class="string">"Grade already is a factor"</span>)</div></pre></td></tr></table></figure>
<ul>
<li><strong>ifelse结构</strong>：<code>ifelse(cond, statement1, statement2)</code></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ifelse(sorce&gt;<span class="number">0.5</span>, print(<span class="string">"Passed"</span>), print(<span class="string">"Failed"</span>))</div><div class="line">outcome &lt;- ifelse(socre&gt;<span class="number">0.5</span>, <span class="string">"Passed"</span>, <span class="string">"Failed"</span>)</div></pre></td></tr></table></figure>
<ul>
<li><strong>switch结构</strong>：根据一个表达式的值<strong>选择</strong>语句执行<code>switch(expr,...)</code></li>
</ul>
<blockquote>
<p>expr之后的…是expr的可能取值，后接等号（=），表示执行的行为</p>
<p>switch语句中，不同条件末尾要有 [逗号]</p>
<p>若expr为文本形式，输入时需加 [引号]</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">feelings &lt;- c(<span class="string">"sad"</span>, <span class="string">"afraid"</span>)</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> feelings)</div><div class="line">  print(</div><div class="line">  	<span class="keyword">switch</span>(i,</div><div class="line">          happy  = <span class="string">"I am glad you are happpy"</span>,  <span class="comment"># 用逗号分隔</span></div><div class="line">          afraid = <span class="string">"There is nothing to fear"</span>,</div><div class="line">          sad    = <span class="string">"Cheer Up"</span>,</div><div class="line">           angry = <span class="string">"Calm down now"</span></div><div class="line">          )</div><div class="line">  )</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="逻辑判断"><a href="#逻辑判断" class="headerlink" title="逻辑判断"></a>逻辑判断</h3><ul>
<li><strong>which()</strong>： 返回为真的逻辑对象，允许对数组array使用</li>
</ul>
<p><br></p>
<h2 id="自编函数"><a href="#自编函数" class="headerlink" title="自编函数"></a>自编函数</h2><ul>
<li><strong>结构</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">myfunction &lt;- <span class="keyword">function</span>(arg1, arg2, <span class="keyword">...</span>)&#123;</div><div class="line">  statements</div><div class="line">  <span class="keyword">return</span>(object)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="实用函数"><a href="#实用函数" class="headerlink" title="实用函数"></a>实用函数</h2><ul>
<li><strong>length(x)</strong>：对象x的长度</li>
<li><strong>seq(from, to, by)</strong>：生成一个序列</li>
<li><strong>rep(x, n)</strong>：将x重复n次</li>
<li><strong>cut(x, n)</strong>：将连续型变量分为n个水平的因子</li>
<li><strong>ptetty(x, n)</strong>：将连续型变量分为n个区间</li>
<li><strong>cat(…, file=”myfile”, append=FALSE)：</strong>连接…的对象，并将其输出到屏幕上或文件中</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; cat(<span class="string">"hello"</span>, <span class="string">"bob"</span>, <span class="string">"\b.\n"</span>, <span class="string">"Is\'t R"</span>, <span class="string">"\t"</span>, <span class="string">"Great?\n"</span>,<span class="string">"!"</span>)</div><div class="line">hello bob.</div><div class="line"> Is<span class="string">'t R 	 Great?</span></div><div class="line"> !</div></pre></td></tr></table></figure>
<blockquote>
<p>cat( ) 与 paste( ) 相同与区别</p>
<ul>
<li>区别：<ul>
<li>paste( ) 对应的列单独合并</li>
<li>cat( ) 合并为一个单元格</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; paste(c(<span class="string">"X"</span>,<span class="string">"Y"</span>),<span class="number">1</span>:<span class="number">10</span>,sep=<span class="string">""</span>)</div><div class="line">&gt; <span class="comment"># [1] "X1"  "Y2"  "X3"  "Y4"  "X5"  "Y6"  "X7"  "Y8"  "X9"  "Y10"</span></div><div class="line">&gt;</div><div class="line">&gt; cat(c(<span class="string">"X"</span>,<span class="string">"Y"</span>),<span class="number">1</span>:<span class="number">10</span>,sep=<span class="string">""</span>)</div><div class="line">&gt; <span class="comment"># XY12345678910</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p><br></p>
<h3 id="funs的用法"><a href="#funs的用法" class="headerlink" title="funs的用法"></a>funs的用法</h3><ul>
<li>直接在函数中写明需要运行的函数 <code>summarise(., vars(), mean)</code></li>
<li><p>结合funs写出调用的函数 <code>summarise(., vars(), funs(mean))</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">summarise_all(df1[,-<span class="number">1</span>],funs(mean,sum)) <span class="comment"># 若出现两个及以上的函数，列名中自动添加后缀</span></div><div class="line">summarise_all(df1[,-<span class="number">1</span>],funs(sum(.*<span class="number">2</span>))) <span class="comment"># 所有数据用.表示</span></div><div class="line">summarise_all(df1[,-<span class="number">1</span>],funs(medi=median)) <span class="comment"># 指定得到的列后缀名, 函数仍为miedan</span></div><div class="line">summarise_all(df1[,-<span class="number">1</span>],funs(<span class="string">"in"</span>=median)) <span class="comment"># 或者加引号 (因为in在R中表示其他含义)</span></div><div class="line">mutate_all(df1[,-<span class="number">1</span>],funs(.^<span class="number">2</span>))</div></pre></td></tr></table></figure>
</li>
</ul>
<p><br></p>
<h2 id="关于报错"><a href="#关于报错" class="headerlink" title="关于报错"></a>关于报错</h2><ul>
<li><strong>This function should not be called directly</strong> ：该函数在多个包中有同样的名字<ul>
<li>指定某个包的函数 dplyr::summarise()</li>
<li>移除某个包 detach(package:plyr)</li>
</ul>
</li>
</ul>
<p><br></p>
<h2 id="符号的使用"><a href="#符号的使用" class="headerlink" title="符号的使用"></a>符号的使用</h2><h3 id="基本符号"><a href="#基本符号" class="headerlink" title="基本符号"></a>基本符号</h3><ul>
<li><code>( )</code>定义函数的参数</li>
<li><code>( )</code>在运算中作为优先级</li>
<li><code>[ ]</code> 用做对象的元素索引</li>
<li><code>{ }</code> 作为<strong>代码段落的起止</strong></li>
<li><code>%in%</code> 表示<strong>包含</strong></li>
</ul>
<p><br></p>
<ul>
<li>用分号<code>;</code>来分隔两个代码；</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; x &lt;- <span class="string">"AAABBBCCC"</span></div><div class="line">&gt; str_sub(x, <span class="number">1</span>, <span class="number">1</span>) &lt;- <span class="number">1</span>;  x</div><div class="line">[<span class="number">1</span>] <span class="string">"1AABBBCCC"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="常见符号"><a href="#常见符号" class="headerlink" title="常见符号"></a>常见符号</h3><blockquote>
<p>写<strong>正则表达式的pattern时，要用两个转义符来</strong>进行转义<code>\\</code>，因为r中一个<code>\</code>本身就是转义符的意思</p>
<p><strong>Windows下路径要用斜杠<code>/</code>或者双反斜杠<code>\\</code>  </strong>，原因同上 </p>
</blockquote>
<table>
<thead>
<tr>
<th>名称</th>
<th>作用</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt;-</td>
<td>赋值符号</td>
<td></td>
</tr>
<tr>
<td>\</td>
<td>转义符</td>
<td></td>
</tr>
<tr>
<td>[ ]</td>
<td>给定元素所处位置的数值</td>
<td>a[c(2,4)]</td>
</tr>
<tr>
<td>：</td>
<td>用于表示一个数值序列</td>
<td>a[2:6]</td>
</tr>
<tr>
<td>[i,j]</td>
<td>选择指定的行与列</td>
<td>[i,][,j]    [i,j][,]</td>
</tr>
<tr>
<td>“”</td>
<td>用于目录名、文件名、包</td>
<td></td>
</tr>
<tr>
<td>‘ ‘</td>
<td>引用双引号的文字为文本时出现</td>
<td>labs(title=’ positon=”fill” ‘)</td>
</tr>
<tr>
<td>#</td>
<td>用于注释。#之后出现的任何文本都会被R解释器忽视；    并且R只能对单行进行注释，故当出现多条命令符，需在每行前面加上#</td>
<td></td>
</tr>
<tr>
<td>$</td>
<td>选取一个给定数据框中的某个特定变量</td>
<td>patientIDdata$age</td>
</tr>
<tr>
<td>&lt;&lt;-</td>
<td>特殊赋值符</td>
<td></td>
</tr>
<tr>
<td>[[ ]]</td>
<td>用于列表中选取对象</td>
<td>mylist[[“ages”]]    mylist[[2]]</td>
</tr>
<tr>
<td>^或**</td>
<td>求幂</td>
<td></td>
</tr>
<tr>
<td>x% %y</td>
<td>求余数（x mod y) 5%%2=1</td>
<td></td>
</tr>
<tr>
<td>x% / %y</td>
<td>整数除法。5%/2%=2</td>
<td></td>
</tr>
<tr>
<td>==</td>
<td>严格等于（在浮点型数值时慎用==）</td>
<td>2+2==4</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
<td></td>
</tr>
<tr>
<td>!x</td>
<td>非x</td>
<td></td>
</tr>
<tr>
<td>x∣y</td>
<td>x或y</td>
<td></td>
</tr>
<tr>
<td>x&amp;y</td>
<td>x和y</td>
<td></td>
</tr>
<tr>
<td>isTRUE(x)</td>
<td>测试x是否为TRUE</td>
<td></td>
</tr>
<tr>
<td>[,-1][-1,]    [,c(-2,-3)]/[,-c(2,3)]</td>
<td>删除第一列    删除第一行    删除多列，两种表达方式均可</td>
<td>mydata&lt;-mydata[,-1]    mydata&lt;-mydata[,-c(2,3)]</td>
</tr>
<tr>
<td>“[“</td>
<td>提取谋而对象一部分的函数，后跟序列数n；1表示该对象的第一部分；    2表示该对象的第二部分；</td>
</tr>
</tbody>
</table>
<p><br></p>
<h3 id="R中常见表达式"><a href="#R中常见表达式" class="headerlink" title="R中常见表达式"></a>R中常见表达式</h3><table>
<thead>
<tr>
<th>符号</th>
<th>作用</th>
<th>示例</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>～</td>
<td>分隔符号</td>
<td>y～x+z+w</td>
<td>左边-因变量/响应变量    右边-自变量/解释变量</td>
</tr>
<tr>
<td>+</td>
<td>分隔预测变量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>：</td>
<td>预测变量的交互项</td>
<td>y～x+z+x:z</td>
<td></td>
</tr>
<tr>
<td>*</td>
<td>所有可能交互项的表达方式</td>
<td>y～x<em>z</em>w—y～x+z+w+x:z+x:w+z:w</td>
<td></td>
</tr>
<tr>
<td>^</td>
<td>交互项的某个次数</td>
<td>y～(x+z+w)^2—y～x+z+w+x:z+x:w+z:w</td>
<td>交互项最高次为2次</td>
</tr>
<tr>
<td><strong>.</strong></td>
<td>包含<strong>除因变量之外的所有变量</strong></td>
<td>y～.—y～x+z+w</td>
<td>当一个数据框包含y,x,z,w这四个变量时</td>
</tr>
<tr>
<td>-</td>
<td>减号，从等式中移除某个变量</td>
<td>y～(x+z+w)^2-x:w—    y～x+z+w+x:z+z:w</td>
<td></td>
</tr>
<tr>
<td>-1</td>
<td>删除截距项</td>
<td>y～x-1</td>
<td>拟合y在x上的回归，并强制直线通过原点</td>
</tr>
<tr>
<td>I()    【大写的i】</td>
<td>从算术（而非表示式）的角度来解释括号中的元素</td>
<td>y～x+I((z+w)^2)</td>
<td>表示的是x+(z+w)²，而非x+z+w+z:w</td>
</tr>
<tr>
<td>function</td>
<td>可以在表达式中运用的数学函数</td>
<td>log(y)～x+z+w</td>
<td></td>
</tr>
<tr>
<td>mpg ~ wt \</td>
<td>cyl</td>
<td>表示按条件（cyl）绘图；</td>
<td></td>
<td>即按cyl的水平为【分组条件】分别绘制mpg和wt的关系图</td>
</tr>
</tbody>
</table>
<br>

<h3 id="研究设计表达式"><a href="#研究设计表达式" class="headerlink" title="研究设计表达式"></a>研究设计表达式</h3><table>
<thead>
<tr>
<th>表达式</th>
<th>作用</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>y～A</td>
<td>单因素ANOVA</td>
<td>1.小写字母，定量变量    2.大写字母，组别因子（若不转换为factor，则默认为定量协变量）    3.Subject，被试者独有的标志变量    4.Error(Subject/A)，表示组内因子</td>
</tr>
<tr>
<td>y～x+A</td>
<td>含单个协变量的单因素ANCOVA</td>
<td></td>
</tr>
<tr>
<td>y～A * B</td>
<td>双因素ANOVA</td>
<td>展开为 ~A+B+A:B</td>
</tr>
<tr>
<td>y～x1+x2+A*B</td>
<td>含两个协变量的双因素ANCOVA</td>
<td></td>
</tr>
<tr>
<td>y～B+A（B是区组因子）</td>
<td>随机化区组</td>
<td></td>
</tr>
<tr>
<td>y～A +  Error(Subject/A)</td>
<td>单因素组内ANOVA</td>
<td></td>
</tr>
<tr>
<td>y～B*W+Error(Subject/W)</td>
<td>含单个组内因子(W)和单个组间因子(B)的重复测量ANOVA</td>
<td>展开为 ~B+W+B:W</td>
</tr>
</tbody>
</table>
<p><br></p>
<h3 id="字符规则"><a href="#字符规则" class="headerlink" title="字符规则"></a>字符规则</h3><table>
<thead>
<tr>
<th>引用符</th>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>Quotes</td>
<td>\n</td>
<td>newline；换行</td>
</tr>
<tr>
<td>Quotes</td>
<td>\r</td>
<td>carriage return</td>
</tr>
<tr>
<td>Quotes</td>
<td>\t</td>
<td>tab；制表符</td>
</tr>
<tr>
<td>Quotes</td>
<td>\b</td>
<td>backspace；空格</td>
</tr>
<tr>
<td>Quotes</td>
<td>\a</td>
<td>alert (bell)</td>
</tr>
<tr>
<td>Quotes</td>
<td>\f</td>
<td>form feed</td>
</tr>
<tr>
<td>Quotes</td>
<td>\v</td>
<td>vertical tab</td>
</tr>
<tr>
<td>Quotes</td>
<td>\</td>
<td>backslash \</td>
</tr>
<tr>
<td>Quotes</td>
<td>\’</td>
<td>ASCII apostrophe ‘（单引号）</td>
</tr>
<tr>
<td>Quotes</td>
<td>\”</td>
<td>ASCII quotation mark “（双引号）</td>
</tr>
<tr>
<td>Quotes</td>
<td>`</td>
<td>ASCII grave accent (backtick) `</td>
</tr>
<tr>
<td>Quotes</td>
<td>\nnn</td>
<td>character with given octal code (1, 2 or 3 digits)</td>
</tr>
<tr>
<td>Quotes</td>
<td>\xnn</td>
<td>character with given hex code (1 or 2 hex digits)</td>
</tr>
<tr>
<td>Quotes</td>
<td>\unnnn</td>
<td>Unicode character with given code (1–4 hex digits)</td>
</tr>
<tr>
<td>Quotes</td>
<td>\Unnnnnnnn</td>
<td>Unicode character with given code (1–8 hex digits)</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; R_数据处理_basic&lt;/p&gt;
    
    </summary>
    
      <category term="软件应用" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/r/"/>
    
    
      <category term="软件应用" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/tags/r/"/>
    
  </entry>
  
  <entry>
    <title>R_字符串处理_stringr</title>
    <link href="http://yoursite.com/2017/07/25/R_%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86_stringr/"/>
    <id>http://yoursite.com/2017/07/25/R_字符串处理_stringr/</id>
    <published>2017-07-24T16:00:00.000Z</published>
    <updated>2017-07-30T08:39:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>R_字符串处理_stringr</strong></p>
<p><strong>stringr：对一个单元格内的 [元素] 进行操作，而非把一个单元格看做一个整体来对待。</strong></p>
<a id="more"></a>
<h2 id="文本文件的读写"><a href="#文本文件的读写" class="headerlink" title="文本文件的读写"></a>文本文件的读写</h2><blockquote>
<p>这里的文本文件指的是非表格式的文件，如纯文本文件，html文件</p>
</blockquote>
<p><br></p>
<h3 id="获取文件目录信息"><a href="#获取文件目录信息" class="headerlink" title="获取文件目录信息"></a>获取文件目录信息</h3><ul>
<li>file.info()</li>
<li>dir() 列出指定目录中所有的文件，可选参数recursive=T可递归列出所有的子目录文件</li>
<li>file.exists()：判断文件是否存在</li>
<li>getwd() ：获得当前工作目录</li>
<li>setwd() ：设置当前工作目录 <code>setwd(&quot;C:/data&quot;)</code></li>
</ul>
<p><br></p>
<h3 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h3><ul>
<li><p><strong>scan(“file.xxx”, what=double(), seq=””, n=-1, nmax=-1, skip=0, encoding=”utf-8”)</strong></p>
<blockquote>
<p>读取文本文件，<strong>默认</strong>情况下读取文件中以<strong>[空格分割]</strong> 所有<strong>[浮点数值]</strong></p>
</blockquote>
<ul>
<li>如果文件中包<strong>含非数值</strong>，可以字符串形式读入 <code>scan(&quot;a.txt&quot;,what=&quot;&quot;)</code></li>
<li>指定分隔符为换行，<code>scan(“a.txt”,what=””,sep=”\n”)</code> 返回以换行分割的字符串向量</li>
<li>如果数据为<strong>表格形式：因为有表头，用scan不能读入</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>what：读入的数据类型；The supported types are [ logical, integer, numeric, complex, character, raw and list. ]</p>
<ul>
<li>character(0)：每个单词作为字符向量的一个元素</li>
</ul>
<p>sep：分隔符，默认为空格<code>&quot; &quot;</code> </p>
<p>n = -1：显示至最后一行</p>
<p>nmax = -1：读取至最后一行</p>
<p>skip=0：跳过的行数</p>
<p>encoding=”utf-8” / “Latin1”</p>
</blockquote>
<p><br></p>
<ul>
<li><strong>readline()</strong> 可以从键盘<strong>读取单行数据</strong>，如 <code>age&lt;-readline(&quot;input the age: &quot;)</code></li>
</ul>
<p><br></p>
<ul>
<li><strong>readLines(“file.xxx”, encoding=”utf-8”)</strong> ：<strong>每一行当做一个字符串</strong>。等价于scan中指定分隔符为换行<ul>
<li>用于<strong>读取</strong>字符型的格式文件；常用于文本文件</li>
</ul>
</li>
</ul>
<blockquote>
<p>encoding = “utf-8” / “Latin1” ; Lattin1是[ISO-8859-1]的别名，有些环境下写作Latin-1。ISO-8859-1编码是单字节编码，<strong>向下兼容ASCII</strong></p>
</blockquote>
<p><br></p>
<h3 id="写出"><a href="#写出" class="headerlink" title="写出"></a>写出</h3><p><br></p>
<ul>
<li><strong>cat(x, file=””, sep=””, fill=False, labels=NULL, append=False)</strong>：<strong>拼接后输出</strong>对象，也可以<strong>把结果写到指定的文件中</strong></li>
</ul>
<blockquote>
<p>x：R的对象</p>
<p>file：一个连接，或命名的文件打印到一个字符串；默认情况下打印到标准输出连接</p>
<p>sep=” “：每个元素后追加一个字符串的字符向量；默认为<strong>空格</strong></p>
<p>append = False 覆盖file内容；若为True，表示附加到file</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&gt; cat(c(<span class="string">"AB"</span>, <span class="string">"C"</span>), c(<span class="string">"E"</span>, <span class="string">"F"</span>), <span class="string">"\n"</span>, sep=<span class="string">""</span>)</div><div class="line">[<span class="number">1</span>] ABCDEF</div><div class="line"></div><div class="line"><span class="comment">#----可以把结果写到指定的文件中-----------------#</span></div><div class="line">cat(<span class="string">"i = "</span>, <span class="number">1</span>, <span class="string">"\n"</span>, file=<span class="string">"c:/work/result.txt"</span>)</div><div class="line"><span class="comment"># 加上一个append=TRUE参数可以不覆盖原文 件而是在文件末尾附加，这很适用于运行中的结果记录。</span></div><div class="line"></div><div class="line"></div><div class="line">&gt; cat(<span class="string">"hello"</span>, <span class="string">"bob"</span>, <span class="string">"\b.\n"</span>, <span class="string">"Is\'t R"</span>, <span class="string">"\t"</span>, <span class="string">"Great?\n"</span>,<span class="string">"!"</span>)  <span class="comment"># 拼接后进行输出</span></div><div class="line">hello bob.</div><div class="line"> Is<span class="string">'t R 	 Great?</span></div><div class="line"> !</div><div class="line"></div><div class="line">&gt; paste("hello", "bob", "\b.\n", "Is\'t R", "\t", "Great?\n","!")</div><div class="line">[1] "hello bob \b.\n Is't R \t Great?\n !<span class="string">"</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>writeLines</strong></li>
</ul>
<p><br></p>
<h2 id="字符串统计"><a href="#字符串统计" class="headerlink" title="字符串统计"></a>字符串统计</h2><h3 id="str-length"><a href="#str-length" class="headerlink" title="str_length"></a>str_length</h3><blockquote>
<p><strong>符串长度</strong></p>
</blockquote>
<ul>
<li><strong>str_length(string)</strong></li>
</ul>
<p><br></p>
<h3 id="str-count"><a href="#str-count" class="headerlink" title="str_count"></a>str_count</h3><blockquote>
<p><strong>字符串计数</strong></p>
</blockquote>
<ul>
<li><strong>str_count(string, pattern = “”)</strong></li>
</ul>
<blockquote>
<p>string: 字符串，字符串向量。</p>
<p>pattern: 匹配的字符。</p>
<ul>
<li>若不匹配字符，即等价于 <code>str_length</code></li>
</ul>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&gt; str_count(<span class="string">'aaa444sssddd'</span>, <span class="string">"a"</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">3</span></div><div class="line"></div><div class="line"><span class="comment"># 对字符串向量中匹配的字符计数</span></div><div class="line">&gt; fruit &lt;- c(<span class="string">"apple"</span>, <span class="string">"banana"</span>, <span class="string">"pear"</span>, <span class="string">"pineapple"</span>)</div><div class="line">&gt; str_count(fruit, <span class="string">"a"</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">1</span> <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 对字符串中的'.'字符计数，由于.是正则表达式的匹配符，直接判断计数的结果是不对的。</span></div><div class="line">&gt; str_count(c(<span class="string">"a."</span>, <span class="string">"."</span>, <span class="string">".a."</span>,<span class="literal">NA</span>), <span class="string">"."</span>)</div><div class="line">[<span class="number">1</span>]  <span class="number">2</span>  <span class="number">1</span>  <span class="number">3</span> <span class="literal">NA</span></div><div class="line"></div><div class="line">&gt; str_count(c(<span class="string">"a."</span>, <span class="string">"."</span>, <span class="string">".a."</span>,<span class="literal">NA</span>), fixed(<span class="string">"."</span>)) <span class="comment"># 用fixed匹配字符</span></div><div class="line">[<span class="number">1</span>]  <span class="number">1</span>  <span class="number">1</span>  <span class="number">2</span> <span class="literal">NA</span></div><div class="line"></div><div class="line">&gt; str_count(c(<span class="string">"a."</span>, <span class="string">"."</span>, <span class="string">".a."</span>,<span class="literal">NA</span>), <span class="string">"\\."</span>) <span class="comment"># 用\\匹配字符</span></div><div class="line">[<span class="number">1</span>]  <span class="number">1</span>  <span class="number">1</span>  <span class="number">2</span> <span class="literal">NA</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="字符串查询"><a href="#字符串查询" class="headerlink" title="字符串查询"></a>字符串查询</h2><h3 id="str-locate-位置"><a href="#str-locate-位置" class="headerlink" title="str_locate - 位置"></a>str_locate - 位置</h3><blockquote>
<p>找到的模式在字符串中的<strong>位置</strong></p>
</blockquote>
<ul>
<li><strong>str_locate(string, pattern)</strong></li>
<li><strong>str_locate_all(string, pattern)</strong><ul>
<li>以字符串<strong>matrix格式返回</strong></li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"abca"</span>, <span class="number">123</span>, <span class="string">"cba"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 匹配a在字符串中的位置</span></div><div class="line">&gt; str_locate(val, <span class="string">"a"</span>)</div><div class="line">     start end</div><div class="line">[<span class="number">1</span>,]     <span class="number">1</span>   <span class="number">1</span></div><div class="line">[<span class="number">2</span>,]    <span class="literal">NA</span>  <span class="literal">NA</span></div><div class="line">[<span class="number">3</span>,]     <span class="number">3</span>   <span class="number">3</span></div><div class="line"></div><div class="line"><span class="comment"># 用向量匹配</span></div><div class="line">&gt; str_locate(val, c(<span class="string">"a"</span>, <span class="number">12</span>, <span class="string">"b"</span>))</div><div class="line">     start end</div><div class="line">[<span class="number">1</span>,]     <span class="number">1</span>   <span class="number">1</span></div><div class="line">[<span class="number">2</span>,]     <span class="number">1</span>   <span class="number">2</span></div><div class="line">[<span class="number">3</span>,]     <span class="number">2</span>   <span class="number">2</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="str-detect-逻辑值"><a href="#str-detect-逻辑值" class="headerlink" title="str_detect - 逻辑值"></a>str_detect - 逻辑值</h3><blockquote>
<p><strong>匹配字符串的字符，返回逻辑值</strong></p>
</blockquote>
<ul>
<li><strong>str_detect(string, pattern)</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"abca4"</span>, <span class="number">123</span>, <span class="string">"cba2"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 检查字符串向量，是否包括a</span></div><div class="line">&gt; str_detect(val, <span class="string">"a"</span>)</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span></div><div class="line"></div><div class="line"><span class="comment"># 检查字符串向量，是否以a为开头</span></div><div class="line">&gt; str_detect(val, <span class="string">"^a"</span>)</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="字符串提取"><a href="#字符串提取" class="headerlink" title="字符串提取"></a>字符串提取</h2><h3 id="strsub-截取位置"><a href="#strsub-截取位置" class="headerlink" title="strsub - 截取位置"></a>str<em>sub - 截取</em>位置</h3><blockquote>
<p><strong>截取字符串</strong></p>
</blockquote>
<ul>
<li><strong>str_sub(string, start = 1L, end = -1L)</strong></li>
</ul>
<blockquote>
<p>string: 字符串，字符串向量。</p>
<p>start : 开始位置  (若只出现一个数字，默认为开始位置)</p>
<p>end : 结束位置</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&gt; txt &lt;- <span class="string">"I am Conan."</span></div><div class="line"></div><div class="line"><span class="comment"># 截取1-6的索引位置的字符串</span></div><div class="line">&gt; str_sub(txt, end=<span class="number">6</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"I am C"</span></div><div class="line"></div><div class="line"><span class="comment"># 截取6到结束的索引位置的字符串</span></div><div class="line">&gt; str_sub(txt, <span class="number">6</span>)   <span class="comment"># 若只出现一个数字，默认为开始位置</span></div><div class="line">[<span class="number">1</span>] <span class="string">"Conan."</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 通过负坐标截取字符串</span></div><div class="line">&gt; str_sub(txt, -<span class="number">3</span>)  <span class="comment"># [截取] 最后3个字符</span></div><div class="line">[<span class="number">1</span>] <span class="string">"an."</span></div><div class="line">&gt; str_sub(txt, end = -<span class="number">3</span>)  <span class="comment"># [截止] 到最后第三个字符</span></div><div class="line">[<span class="number">1</span>] <span class="string">"I am Cona"</span></div><div class="line"></div><div class="line"><span class="comment">#----对截取的字符串进行赋值-----------------------------------------#</span></div><div class="line">&gt; x &lt;- <span class="string">"AAABBBCCC"</span></div><div class="line"></div><div class="line"><span class="comment"># 在字符串的1的位置赋值为1</span></div><div class="line">&gt; str_sub(x, <span class="number">1</span>, <span class="number">1</span>) &lt;- <span class="number">1</span>; x</div><div class="line">[<span class="number">1</span>] <span class="string">"1AABBBCCC"</span></div><div class="line"></div><div class="line">&gt; str_sub(x, <span class="number">1</span>, <span class="number">1</span>) &lt;- <span class="number">123</span>; x   <span class="comment"># [若数量超过截取的位数，则进行填充]</span></div><div class="line">[<span class="number">1</span>] <span class="string">"123AABBBCCC"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="str-subset-提取"><a href="#str-subset-提取" class="headerlink" title="str_subset - 提取"></a>str_subset - 提取</h3><blockquote>
<p><strong>返回的匹配字符串</strong></p>
</blockquote>
<ul>
<li><strong>str_subset(string, pattern)</strong></li>
</ul>
<blockquote>
<p>pattern: 匹配的字符</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"abc"</span>, <span class="number">123</span>, <span class="string">"cba"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 全文匹配</span></div><div class="line">&gt; str_subset(val, <span class="string">"a"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"abc"</span> <span class="string">"cba"</span></div><div class="line"></div><div class="line"><span class="comment"># 开头匹配</span></div><div class="line">&gt; str_subset(val, <span class="string">"^a"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"abc"</span></div><div class="line"></div><div class="line"><span class="comment"># 结尾匹配</span></div><div class="line">&gt; str_subset(val, <span class="string">"a$"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"cba"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="str-match-匹配"><a href="#str-match-匹配" class="headerlink" title="str_match - 匹配"></a>str_match - 匹配</h3><blockquote>
<p>从字符串中<strong>提取匹配组</strong></p>
</blockquote>
<ul>
<li><strong>str_match(string, pattern)</strong></li>
<li><strong>str_match_all(string, pattern)</strong><ul>
<li>以字符串<strong>matrix格式返回</strong></li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"abc"</span>, <span class="number">123</span>, <span class="string">"cba"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 匹配字符a，并返回对应的字符</span></div><div class="line">&gt; str_match(val, <span class="string">"a"</span>)</div><div class="line">     [,<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>,] <span class="string">"a"</span> </div><div class="line">[<span class="number">2</span>,] <span class="literal">NA</span>  </div><div class="line">[<span class="number">3</span>,] <span class="string">"a"</span> </div><div class="line"></div><div class="line"><span class="comment"># 匹配字符0-9，限1个，并返回对应的字符</span></div><div class="line">&gt; str_match(val, <span class="string">"[0-9]"</span>)</div><div class="line">     [,<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>,] <span class="literal">NA</span>  </div><div class="line">[<span class="number">2</span>,] <span class="string">"1"</span> </div><div class="line">[<span class="number">3</span>,] <span class="literal">NA</span>  </div><div class="line"></div><div class="line"><span class="comment"># 匹配字符0-9，不限数量，并返回对应的字符</span></div><div class="line">&gt; str_match(val, <span class="string">"[0-9]*"</span>)</div><div class="line">     [,<span class="number">1</span>] </div><div class="line">[<span class="number">1</span>,] <span class="string">""</span>   </div><div class="line">[<span class="number">2</span>,] <span class="string">"123"</span></div><div class="line">[<span class="number">3</span>,] <span class="string">""</span>  </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#----以字符串matrix格式返回------------------------------------------#</span></div><div class="line">&gt; str_match_all(val, <span class="string">"a"</span>)</div><div class="line">[[<span class="number">1</span>]]</div><div class="line">     [,<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>,] <span class="string">"a"</span> </div><div class="line"></div><div class="line">[[<span class="number">2</span>]]</div><div class="line">     [,<span class="number">1</span>]</div><div class="line"></div><div class="line">[[<span class="number">3</span>]]</div><div class="line">     [,<span class="number">1</span>]</div><div class="line">[<span class="number">1</span>,] <span class="string">"a"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="str-extract-匹配-Regex"><a href="#str-extract-匹配-Regex" class="headerlink" title="str_extract - 匹配_Regex"></a>str_extract - 匹配_Regex</h3><blockquote>
<p>从字符串中根据 <strong>[正则表达式]</strong> 提取匹配的值</p>
</blockquote>
<ul>
<li><strong>str_extract(string, pattern)</strong></li>
<li><strong>str_extract_all(string, pattern, simplify = FALSE)</strong></li>
</ul>
<blockquote>
<p>simplify: 返回值，TRUE返回matrix，FALSE返回<strong>字符串向量</strong>；(默认为False)</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"abca4"</span>, <span class="number">123</span>, <span class="string">"cba2"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 返回匹配的数字</span></div><div class="line">&gt; str_extract(val, <span class="string">"\\d"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"4"</span> <span class="string">"1"</span> <span class="string">"2"</span></div><div class="line"></div><div class="line"><span class="comment"># 返回匹配的字符</span></div><div class="line">&gt; str_extract(val, <span class="string">"[a-z]+"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"abca"</span> <span class="literal">NA</span>     <span class="string">"cba"</span></div></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h3 id="word-单词"><a href="#word-单词" class="headerlink" title="word - 单词"></a>word - 单词</h3><blockquote>
<p><strong>从文本中提取 [单词] </strong></p>
</blockquote>
<ul>
<li><strong>word(string, start = 1L, end = start, sep = fixed(“ “))</strong></li>
</ul>
<blockquote>
<p>start: 开始位置。</p>
<p>end: 结束位置。</p>
<p>sep: 匹配字符。  <strong>(默认为 空格)</strong></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"I am Conan."</span>, <span class="string">"http://fens.me, ok"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 默认以空格分割，取第一个位置的字符串</span></div><div class="line">&gt; word(val, <span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"I"</span>               <span class="string">"http://fens.me,"</span></div><div class="line">&gt; word(val, -<span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Conan."</span> <span class="string">"ok"</span>    </div><div class="line">&gt; word(val, <span class="number">2</span>, -<span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"am Conan."</span> <span class="string">"ok"</span>       </div><div class="line"></div><div class="line"><span class="comment"># 以,分割，取第一个位置的字符串 </span></div><div class="line">&gt; val&lt;-<span class="string">'111,222,333,444'</span></div><div class="line">&gt; word(val, <span class="number">1</span>, sep = fixed(<span class="string">','</span>))</div><div class="line">[<span class="number">1</span>] <span class="string">"111"</span></div><div class="line">&gt; word(val, <span class="number">3</span>, sep = fixed(<span class="string">','</span>))</div><div class="line">[<span class="number">1</span>] <span class="string">"333"</span></div></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h2 id="字符串替换"><a href="#字符串替换" class="headerlink" title="字符串替换"></a>字符串替换</h2><h3 id="str-replace"><a href="#str-replace" class="headerlink" title="str_replace"></a>str_replace</h3><blockquote>
<p>字符串<strong>替换</strong></p>
</blockquote>
<ul>
<li><strong>str_replace(string, pattern, replacement)</strong><ul>
<li>替换出现的 <strong>[第一个]</strong>字符</li>
</ul>
</li>
<li><strong>str_replcae_all(string, pattern, replacement)</strong><ul>
<li>替换出现的 <strong>[所有]</strong>字符</li>
</ul>
</li>
<li><strong>str_repclea_na(string, repalcement= “NA”)</strong><ul>
<li><strong>把NA替换为其他字符串</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>string: 字符串，字符串向量。</p>
<p>pattern: 匹配字符。</p>
<p>replacement: 用于替换的字符。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"abc"</span>, <span class="number">123</span>, <span class="string">"cba"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 把目标字符串 [第一个] 出现的a或b，替换为- </span></div><div class="line">&gt; str_replace(val, <span class="string">"[ab]"</span>, <span class="string">"-"</span>)  <span class="comment"># 表示或者</span></div><div class="line">[<span class="number">1</span>] <span class="string">"-bc"</span> <span class="string">"123"</span> <span class="string">"c-a"</span></div><div class="line"></div><div class="line"><span class="comment"># 把目标字符串 [所有] 出现的a或b，替换为-</span></div><div class="line">&gt; str_replace_all(val, <span class="string">"[ab]"</span>, <span class="string">"-"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"--c"</span> <span class="string">"123"</span> <span class="string">"c--"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#----把NA替换为字符串------------------------#</span></div><div class="line">&gt; str_replace_na(c(<span class="literal">NA</span>,<span class="string">'NA'</span>,<span class="string">"abc"</span>),<span class="string">'x'</span>)  <span class="comment"># 把NA替换为x</span></div><div class="line">[<span class="number">1</span>] <span class="string">"x"</span>   <span class="string">"NA"</span>  <span class="string">"abc"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="字符串拆分"><a href="#字符串拆分" class="headerlink" title="字符串拆分"></a>字符串拆分</h2><h3 id="str-split-amp-str-split-fixed"><a href="#str-split-amp-str-split-fixed" class="headerlink" title="str_split &amp; str_split_fixed"></a>str_split &amp; str_split_fixed</h3><blockquote>
<p><strong>字符串分割，同str_split_fixed</strong></p>
</blockquote>
<ul>
<li><strong>str_split(string, pattern, n = Inf)</strong><ul>
<li>str_split()函数操作的结果类型为<strong>list</strong>  <code>&gt; class(s1)  [1] &quot;list&quot;</code></li>
</ul>
</li>
<li><strong>str_split_fixed(string, pattern, n)</strong><ul>
<li>str_split_fixed()函数分割，结果类型是<strong>matrix </strong> <code>&gt; class(s3)   [1] &quot;matrix&quot;</code></li>
</ul>
</li>
</ul>
<blockquote>
<p>pattern: 匹配的字符。</p>
<p>n: 分割个数</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- <span class="string">"abc,123,234,iuuu"</span></div><div class="line"></div><div class="line"><span class="comment"># 以,进行分割</span></div><div class="line">&gt; s1&lt;-str_split(val, <span class="string">","</span>);s1</div><div class="line">[[<span class="number">1</span>]]</div><div class="line">[<span class="number">1</span>] <span class="string">"abc"</span>  <span class="string">"123"</span>  <span class="string">"234"</span>  <span class="string">"iuuu"</span></div><div class="line"></div><div class="line"><span class="comment"># 以,进行分割，保留2块</span></div><div class="line">&gt; s2&lt;-str_split(val, <span class="string">","</span>,<span class="number">2</span>);s2</div><div class="line">[[<span class="number">1</span>]]</div><div class="line">[<span class="number">1</span>] <span class="string">"abc"</span>          <span class="string">"123,234,iuuu"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><h3 id="str-c-amp-str-join"><a href="#str-c-amp-str-join" class="headerlink" title="str_c &amp; str_join"></a>str_c &amp; str_join</h3><blockquote>
<p><strong>字符串拼接操作，与str_join完全相同，与paste()行为不完全一致。</strong></p>
</blockquote>
<ul>
<li><strong>str_c(…, sep = “”, collapse = NULL)</strong> </li>
<li><strong>str_join(…, sep = “”, collapse = NULL)</strong><ul>
<li>拼接有NA值的字符串向量时，NA还是NA    <code>&gt; str_c(c(&quot;a&quot;, NA, &quot;b&quot;), &quot;-d&quot;)    &gt; &quot;a-d&quot;   NA  &quot;b-d&quot;</code></li>
</ul>
</li>
</ul>
<blockquote>
<p>…: 多参数的输入</p>
<p> sep: 把多个 [字符串] 拼接为一个大的字符串，用于字符串的分割符。</p>
<p>collapse: 把多个 [向量] 参数拼接为一个大的字符串，用于字符串的分割符。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#----------------示例--------------------------#</span></div><div class="line">多个 [字符串] 拼接为一个大的字符串</div><div class="line">&gt; str_c(<span class="string">'a'</span>,<span class="string">'b'</span>,sep=<span class="string">'-'</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"a-b"</span></div><div class="line">&gt; str_c(c(<span class="string">'a'</span>,<span class="string">'a1'</span>),c(<span class="string">'b'</span>,<span class="string">'b1'</span>),sep=<span class="string">'-'</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"a-b"</span>   <span class="string">"a1-b1"</span></div><div class="line"></div><div class="line">多个 [向量] 参数拼接为一个大的字符串</div><div class="line">&gt; str_c(head(letters), collapse = <span class="string">", "</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"a, b, c, d, e, f"</span></div><div class="line"></div><div class="line"><span class="comment"># collapse参数，对多个字符串无效</span></div><div class="line">&gt; str_c(<span class="string">'a'</span>,<span class="string">'b'</span>,collapse = <span class="string">"-"</span>)   </div><div class="line">[<span class="number">1</span>] <span class="string">"ab"</span></div><div class="line">&gt; str_c(c(<span class="string">'a'</span>,<span class="string">'a1'</span>),c(<span class="string">'b'</span>,<span class="string">'b1'</span>),collapse=<span class="string">'-'</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"ab-a1b1"</span></div></pre></td></tr></table></figure>
<blockquote>
<p>对比str_c()函数和<strong>paste()函数之间的不同点</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment"># [字符串] 拼接，默认的sep参数行为 [不一致]</span></div><div class="line">&gt; &gt; str_c(<span class="string">'a'</span>,<span class="string">'b'</span>)  <span class="comment"># 默认分隔符为""</span></div><div class="line">&gt; [<span class="number">1</span>] <span class="string">"ab"</span></div><div class="line">&gt; &gt; paste(<span class="string">'a'</span>,<span class="string">'b'</span>)  <span class="comment"># 默认分隔符为" "</span></div><div class="line">&gt; [<span class="number">1</span>] <span class="string">"a b"</span></div><div class="line">&gt;</div><div class="line">&gt; <span class="comment"># [向量] 拼接字符串，collapse参数的行为 [一致]</span></div><div class="line">&gt; &gt; str_c(head(letters), collapse = <span class="string">""</span>)</div><div class="line">&gt; [<span class="number">1</span>] <span class="string">"abcdef"</span></div><div class="line">&gt; &gt; paste(head(letters), collapse = <span class="string">""</span>)</div><div class="line">&gt; [<span class="number">1</span>] <span class="string">"abcdef"</span></div><div class="line">&gt;</div><div class="line">&gt;</div><div class="line">&gt; <span class="comment">#拼接有 [NA值] 的字符串向量，对NA的处理行为 [不一致]</span></div><div class="line">&gt; &gt; str_c(c(<span class="string">"a"</span>, <span class="literal">NA</span>, <span class="string">"b"</span>), <span class="string">"-d"</span>)</div><div class="line">&gt; [<span class="number">1</span>] <span class="string">"a-d"</span>   <span class="literal">NA</span>    <span class="string">"b-d"</span> </div><div class="line">&gt; &gt; paste(c(<span class="string">"a"</span>, <span class="literal">NA</span>, <span class="string">"b"</span>), <span class="string">"-d"</span>)  <span class="comment"># 将NA作为一个普通字符串来对待</span></div><div class="line">&gt; [<span class="number">1</span>] <span class="string">"a -d"</span>  <span class="string">"NA -d"</span> <span class="string">"b -d"</span> </div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>对比<strong>str_c() &amp; paste()</strong> 与 <strong>cat()</strong> 的区别：</p>
<ul>
<li>paste()：<strong>转为字符串后进行连接</strong>；</li>
<li>cat() ：<strong>连接后输出为对象</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; &gt; paste(<span class="string">"hello"</span>, <span class="string">"bob"</span>, <span class="string">"\b.\n"</span>, <span class="string">"Is\'t R"</span>, <span class="string">"\t"</span>, <span class="string">"Great?\n"</span>,<span class="string">"!"</span>)</div><div class="line">&gt; [<span class="number">1</span>] <span class="string">"hello bob \b.\n Is't R \t Great?\n !"</span></div><div class="line">&gt;</div><div class="line">&gt; &gt; cat(<span class="string">"hello"</span>, <span class="string">"bob"</span>, <span class="string">"\b.\n"</span>, <span class="string">"Is\'t R"</span>, <span class="string">"\t"</span>, <span class="string">"Great?\n"</span>,<span class="string">"!"</span>)</div><div class="line">&gt; hello bob.</div><div class="line">&gt;  Is<span class="string">'t R 	 Great?</span></div><div class="line">&gt;  !</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p>&gt;</p>
<blockquote>
</blockquote>
<p><br></p>
<h3 id="str-conv-转码"><a href="#str-conv-转码" class="headerlink" title="str_conv - 转码"></a>str_conv - 转码</h3><blockquote>
<p><strong>字符编码转换</strong></p>
</blockquote>
<ul>
<li><strong>str_conv(string, encoding)</strong></li>
</ul>
<blockquote>
<p>encoding: 编码名。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#----对中文进行转码处理---------------------------#</span></div><div class="line">&gt; x &lt;- charToRaw(<span class="string">'你好'</span>);x</div><div class="line">[<span class="number">1</span>] c4 e3 ba c3</div><div class="line"></div><div class="line"><span class="comment"># 默认win系统字符集为GBK，[GB2312为GBK字集]，转码正常</span></div><div class="line">&gt; str_conv(x, <span class="string">"GBK"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"你好"</span></div><div class="line">&gt; str_conv(x, <span class="string">"GB2312"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"你好"</span></div><div class="line"></div><div class="line"><span class="comment"># 转UTF-8失败</span></div><div class="line">&gt; str_conv(x, <span class="string">"UTF-8"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"���"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#----把unicode转UTF-8------------------------------#</span></div><div class="line">&gt; x1 &lt;- <span class="string">"\u5317\u4eac"</span></div><div class="line">&gt; str_conv(x1, <span class="string">"UTF-8"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"北京"</span></div></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h2 id="字符串输出"><a href="#字符串输出" class="headerlink" title="字符串输出"></a>字符串输出</h2><h3 id="str-trim-空格"><a href="#str-trim-空格" class="headerlink" title="str_trim - 空格"></a>str_trim - 空格</h3><blockquote>
<p><strong>去掉字符串的空格和TAB(\t)</strong></p>
</blockquote>
<ul>
<li><strong>str_trim(string, side = c(“both”, “left”, “right”))</strong></li>
</ul>
<blockquote>
<p>string: 字符串，字符串向量。</p>
<p>side: 过滤方式，both两边都过滤，left左边过滤，right右边过滤  “both”（默认）</p>
</blockquote>
<p><br></p>
<h3 id="str-to-upper-title-大小写"><a href="#str-to-upper-title-大小写" class="headerlink" title="str_to_upper/title - 大小写"></a>str_to_upper/title - 大小写</h3><blockquote>
<p><strong>字符串大小写转换</strong></p>
</blockquote>
<ul>
<li><strong>str_to_upper(string, locale = “”)</strong> ：<strong>全大写</strong></li>
<li><strong>str_to_lower(string, locale = “”)</strong> ：<strong>全小写</strong></li>
<li><strong>str_to_title(string, locale = “”)</strong> ：<strong>首字母大写</strong></li>
</ul>
<blockquote>
<p>locale:按哪种语言习惯排序</p>
</blockquote>
<p><br></p>
<h3 id="str-pad-补充长度"><a href="#str-pad-补充长度" class="headerlink" title="str_pad - 补充长度"></a>str_pad - 补充长度</h3><blockquote>
<p><strong>补充字符串的长度</strong></p>
</blockquote>
<ul>
<li><strong>str_pad(string, width, side = c(“left”, “right”, “both”), pad = “ “)</strong></li>
</ul>
<blockquote>
<p>string: 字符串，字符串向量。</p>
<p>width: 字符串填充后的长度</p>
<p>side: 填充方向，both两边都填充，left左边填充，right右边填充</p>
<p>pad: 用于填充的字符 （默认为 空格）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 从左边补充空格，直到字符串长度为20</span></div><div class="line">&gt; str_pad(<span class="string">"conan"</span>, <span class="number">20</span>, <span class="string">"left"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"               conan"</span></div><div class="line"></div><div class="line"><span class="comment"># 从左右两边各补充x字符，直到字符串长度为20</span></div><div class="line">&gt; str_pad(<span class="string">"conan"</span>, <span class="number">20</span>, <span class="string">"both"</span>,<span class="string">'x'</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"xxxxxxxconanxxxxxxxx"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="str-dup-复制"><a href="#str-dup-复制" class="headerlink" title="str_dup - 复制"></a>str_dup - 复制</h3><blockquote>
<p><strong>复制字符串</strong> duplicate</p>
</blockquote>
<ul>
<li><strong>str_dup(string, times)</strong></li>
</ul>
<blockquote>
<p>string: 字符串，字符串向量。</p>
<p>times: 复制数量</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; val &lt;- c(<span class="string">"abca4"</span>, <span class="number">123</span>, <span class="string">"cba2"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 复制2次</span></div><div class="line">&gt; str_dup(val, <span class="number">2</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"abca4abca4"</span> <span class="string">"123123"</span>     <span class="string">"cba2cba2"</span>  </div><div class="line"></div><div class="line"><span class="comment"># 按位置复制</span></div><div class="line">&gt; str_dup(val, <span class="number">1</span>:<span class="number">3</span>)  <span class="comment"># 复制的次数从1次增加到3次</span></div><div class="line">[<span class="number">1</span>] <span class="string">"abca4"</span>        <span class="string">"123123"</span>       <span class="string">"cba2cba2cba2"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="str-sort-amp-str-order-排序"><a href="#str-sort-amp-str-order-排序" class="headerlink" title="str_sort &amp; str_order - 排序"></a>str_sort &amp; str_order - 排序</h3><blockquote>
<p><strong>字符串值排序，同str_order索引排序</strong></p>
</blockquote>
<ul>
<li><strong>str_sort(x, decreasing = FALSE, na_last = TRUE, locale = “”, …)</strong></li>
<li><strong>str_order(x, decreasing = FALSE, na_last = TRUE, locale = “”, …)</strong></li>
</ul>
<blockquote>
<p>decreasing: 排序方向。  decrease - 减少</p>
<p>na_last:NA值的存放位置，一共3个值，TRUE放到最后，FALSE放到最前，NA过滤处理</p>
<p>locale:按哪种语言习惯排序</p>
<ul>
<li>loacle = “en” - ASCII字母 / “zh” - 拼音</li>
</ul>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 按ASCII字母排序</span></div><div class="line">&gt; str_sort(c(<span class="string">'a'</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">'11'</span>), locale = <span class="string">"en"</span>)  </div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span>  <span class="string">"11"</span> <span class="string">"2"</span>  <span class="string">"a"</span> </div><div class="line"></div><div class="line"><span class="comment"># 倒序排序</span></div><div class="line">&gt; str_sort(letters,decreasing=<span class="literal">TRUE</span>)         </div><div class="line"> [<span class="number">1</span>] <span class="string">"z"</span> <span class="string">"y"</span> <span class="string">"x"</span> <span class="string">"w"</span> <span class="string">"v"</span> <span class="string">"u"</span> <span class="string">"t"</span> <span class="string">"s"</span> <span class="string">"r"</span> <span class="string">"q"</span> <span class="string">"p"</span> <span class="string">"o"</span> <span class="string">"n"</span> <span class="string">"m"</span> <span class="string">"l"</span> <span class="string">"k"</span> <span class="string">"j"</span> <span class="string">"i"</span> <span class="string">"h"</span></div><div class="line">[<span class="number">20</span>] <span class="string">"g"</span> <span class="string">"f"</span> <span class="string">"e"</span> <span class="string">"d"</span> <span class="string">"c"</span> <span class="string">"b"</span> <span class="string">"a"</span></div><div class="line"></div><div class="line"><span class="comment"># 按拼音排序</span></div><div class="line">&gt; str_sort(c(<span class="string">'你'</span>,<span class="string">'好'</span>,<span class="string">'粉'</span>,<span class="string">'丝'</span>,<span class="string">'日'</span>,<span class="string">'志'</span>),locale = <span class="string">"zh"</span>)  </div><div class="line">[<span class="number">1</span>] <span class="string">"粉"</span> <span class="string">"好"</span> <span class="string">"你"</span> <span class="string">"日"</span> <span class="string">"丝"</span> <span class="string">"志"</span></div><div class="line"></div><div class="line"><span class="comment">#----对NA值的排序处理------------------------#</span></div><div class="line"> <span class="comment">#把NA放最后面</span></div><div class="line">&gt; str_sort(c(<span class="literal">NA</span>,<span class="string">'1'</span>,<span class="literal">NA</span>),na_last=<span class="literal">TRUE</span>) </div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span> <span class="literal">NA</span>  <span class="literal">NA</span></div><div class="line"></div><div class="line"><span class="comment">#去掉NA值 </span></div><div class="line">&gt; str_sort(c(<span class="literal">NA</span>,<span class="string">'1'</span>,<span class="literal">NA</span>),na_last=<span class="literal">NA</span>)    </div><div class="line">[<span class="number">1</span>] <span class="string">"1"</span></div></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h2 id="字符串变换"><a href="#字符串变换" class="headerlink" title="字符串变换"></a>字符串变换</h2><h3 id="str-warp-格式"><a href="#str-warp-格式" class="headerlink" title="str_warp - 格式"></a>str_warp - 格式</h3><blockquote>
<p><strong>控制字符串输出格式</strong></p>
</blockquote>
<ul>
<li><strong>str_wrap(string, width = 80, indent = 0, exdent = 0)</strong></li>
</ul>
<blockquote>
<p>string: 字符串，字符串向量。</p>
<p>width: 设置一行所占的宽度。</p>
<p>indent: 段落首行的缩进值</p>
<p>exdent: 段落非首行的缩进值</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">txt&lt;-<span class="string">'R语言作为统计学一门语言，一直在小众领域闪耀着光芒。直到大数据的爆发，R语言变成了一门炙手可热的数据分析的利器。随着越来越多的工程背景的人的加入，R语言的社区在迅速扩大成长。现在已不仅仅是统计领域，教育，银行，电商，互联网….都在使用R语言。'</span></div><div class="line"></div><div class="line"><span class="comment"># 设置宽度为60字符，首行缩进2字符</span></div><div class="line">&gt; cat(str_wrap(txt, width = <span class="number">60</span>, indent = <span class="number">2</span>), <span class="string">"\n"</span>)</div><div class="line">  R语言作为统计学一门语言，一直在小众领域闪耀着光芒。直到大数</div><div class="line">据的爆发，R语言变成了一门炙手可热的数据分析的利器。随着越来</div><div class="line">越多的工程背景的人的加入，R语言的社区在迅速扩大成长。现在已</div><div class="line">不仅仅是统计领域，教育，银行，电商，互联网….都在使用R语言。</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="参数控制函数"><a href="#参数控制函数" class="headerlink" title="参数控制函数"></a>参数控制函数</h2><blockquote>
<p>仅用于构造功能的参数，不能独立使用。</p>
</blockquote>
<h3 id="regex"><a href="#regex" class="headerlink" title="regex"></a>regex</h3><blockquote>
<p>定义正则表达式</p>
</blockquote>
<p><br></p>
<h2 id="stringr的API介绍"><a href="#stringr的API介绍" class="headerlink" title="stringr的API介绍"></a>stringr的API介绍</h2><p>stringr包1.0.0版本，一共提供了30个函数，方便我们对字符串处理。常用的字符串的处理以str_开头来命名，方便更直观理解函数的定义。我们可以根据使用习惯对函数进行分类：</p>
<ul>
<li>stringr包中的函数<strong><u>默认使用正则表达式</u></strong>的函数（pattern）</li>
<li><strong>R中的转义字符则是双斜杠：<code>\\</code></strong><ul>
<li><code>\\d</code> 代表<code>\d</code></li>
</ul>
</li>
</ul>
<p><strong>字符串拼接函数</strong></p>
<ul>
<li>str_c:字符串拼接。</li>
<li>str_join:字符串拼接，同str_c。</li>
<li>str_trim:去掉字符串的空格和TAB(\t)</li>
<li>str_pad:补充字符串的长度</li>
<li>str_dup:复制字符串</li>
<li>str_wrap:控制字符串输出格式</li>
<li>str_sub:截取字符串</li>
<li>str_sub&lt;-截取字符串，并赋值，同str_sub</li>
</ul>
<p><strong>字符串计算函数</strong></p>
<ul>
<li>str_count:字符串计数</li>
<li>str_length:字符串长度</li>
<li>str_sort:字符串值排序</li>
<li>str_order:字符串索引排序，规则同str_sort</li>
</ul>
<p><strong>字符串匹配函数</strong></p>
<ul>
<li>str_split:    字符串分割</li>
<li>str_split_fixed: 字符串分割，同str_split</li>
<li>str_subset: 返回匹配的字符串</li>
<li>word:从文本中提取单词</li>
<li>str_detect: 检查匹配字符串的字符</li>
<li>str_match:从字符串中提取匹配组。</li>
<li>str_match_all: 从字符串中提取匹配组，同str_match</li>
<li>str_replace: 字符串替换</li>
<li>str_replace_all: 字符串替换，同str_replace</li>
<li>str_replace_na:把NA替换为NA字符串</li>
<li>str_locate: 找到匹配的字符串的位置。</li>
<li>str_locate_all: 找到匹配的字符串的位置,同str_locate</li>
<li>str_extract: 从字符串中提取匹配字符</li>
<li>str_extract_all: 从字符串中提取匹配字符，同str_extract</li>
</ul>
<p><strong>字符串变换函数</strong></p>
<ul>
<li>str_conv:字符编码转换</li>
<li>str_to_upper: 字符串转成大写</li>
<li>str_to_lower: 字符串转成小写,规则同str_to_upper</li>
<li>str_to_title: 字符串转成首字母大写,规则同str_to_upper</li>
</ul>
<p><strong>参数控制函数</strong>，仅用于构造功能的参数，不能独立使用。</p>
<ul>
<li>boundary:定义使用边界</li>
<li>coll:定义字符串标准排序规则。</li>
<li>fixed:定义用于匹配的字符，包括正则表达式中的转义符</li>
<li>regex:定义正则表达式</li>
</ul>
<p><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;R_字符串处理_stringr&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;stringr：对一个单元格内的 [元素] 进行操作，而非把一个单元格看做一个整体来对待。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="软件工具" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
      <category term="r" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/r/"/>
    
    
      <category term="软件工具" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
      <category term="r" scheme="http://yoursite.com/tags/r/"/>
    
  </entry>
  
  <entry>
    <title>R_导入&amp;导出</title>
    <link href="http://yoursite.com/2017/07/24/R_%E5%AF%BC%E5%85%A5&amp;%E5%AF%BC%E5%87%BA/"/>
    <id>http://yoursite.com/2017/07/24/R_导入&amp;导出/</id>
    <published>2017-07-23T16:00:00.000Z</published>
    <updated>2017-08-13T03:25:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Windows下路径要用斜杠<code>/</code>或者双反斜杠<code>\\</code>  </strong></p>
<p><strong>R本身把<code>\</code> 当做转义符，所以写pattern的时候要用<code>\\</code>进行转义</strong></p>
<a id="more"></a>
<p><br></p>
<h1 id="获取文件目录信息"><a href="#获取文件目录信息" class="headerlink" title="获取文件目录信息"></a>获取文件目录信息</h1><h2 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h2><h4 id="getwd-amp-setwd"><a href="#getwd-amp-setwd" class="headerlink" title="getwd &amp; setwd"></a>getwd &amp; setwd</h4><ul>
<li><strong>getwd()</strong>：获得<strong>当前工作目录</strong></li>
<li><strong>setwd()</strong> ：<strong>设置</strong>当前工作目录 <code>setwd(&quot;C:/data&quot;)</code></li>
</ul>
<p><br></p>
<h4 id="dir-amp-list-files-获取"><a href="#dir-amp-list-files-获取" class="headerlink" title="dir &amp; list.files - 获取"></a>dir &amp; list.files - 获取</h4><blockquote>
<p>dir 与 list.files 功能相同；列出<strong>当前目录</strong>中所有的文件</p>
</blockquote>
<ul>
<li><strong>dir()</strong> ：列出<strong>当前目录</strong>中所有的文件名</li>
<li><strong>dir(path=”/home/conan/R”, pattern=Null, all.files=False, full.names=Fasle, recursice=Fasle, igonre.case= False, include.dirs=False, no..=False)</strong>：查看<strong>指定目录</strong>的文件</li>
</ul>
<blockquote>
<p>path：查看指定<strong>路径下</strong>的文件。</p>
<p>pattern ：匹配的正则表达式模式</p>
<p>all.files = False(默认) ；若为True，则列出隐藏的文件名</p>
<p>full.names=False(默认) <code>&quot;我的形状&quot;</code>；若为True，列出含相对路径的文件名 <code>&quot;./我的形状&quot;</code></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dir(path=<span class="string">"/home/conan/R"</span>,pattern=<span class="string">'txt$'</span>)</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="choose-dir-获取"><a href="#choose-dir-获取" class="headerlink" title="choose.dir - 获取"></a>choose.dir - 获取</h4><blockquote>
<p>通过选取的方式获得目录</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a &lt;- choose.dir()</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="system-“tree”-获取"><a href="#system-“tree”-获取" class="headerlink" title="system(“tree”) - 获取"></a>system(“tree”) - 获取</h4><blockquote>
<p>通过系统命令以<strong>树状结构</strong>查看目录结构</p>
</blockquote>
<ul>
<li>file.info()</li>
</ul>
<p><br></p>
<h4 id="dir-create-新建"><a href="#dir-create-新建" class="headerlink" title="dir.create - 新建"></a>dir.create - 新建</h4><ul>
<li><strong>dir.create()</strong>：在当前目录下，新建一个目录</li>
<li><strong>dir.create(path=”a1/b2/c3”,recursive = TRUE)</strong>：创建一个<strong>3级子目录</strong>./a1/b2/c3</li>
</ul>
<p><br></p>
<h4 id="file-path-合并"><a href="#file-path-合并" class="headerlink" title="file.path - 合并"></a>file.path - 合并</h4><ul>
<li><strong>file.path(…, fsep = .Platform$file.sep)</strong><ul>
<li><strong>file.path(getwd(), dir())</strong> ：当前工作目录下的文件的路径</li>
</ul>
</li>
</ul>
<blockquote>
<p>… : 字符串</p>
<p>fsep : 用于使用的<strong>路径分隔符</strong></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; file.path(<span class="string">"C:\\Users\\long\\Desktop"</span>,<span class="string">"txt"</span>)  </div><div class="line">[<span class="number">1</span>] <span class="string">"C:\\Users\\long\\Desktop/txt"</span> </div><div class="line"></div><div class="line"><span class="comment">#----------------------------------------#</span></div><div class="line">&gt; file.path(getwd(),dir())</div><div class="line">[<span class="number">1</span>] <span class="string">'E:/Jupyter_notebook/test'</span> <span class="string">'E:/Jupyter_notebook/test.ipynb'</span> <span class="string">'E:/Jupyter_notebook/专项分析'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>一般用paste来生成系统路径的时候，在最终结果，结合的地方会多一个<strong>空格</strong>，当然也可以用去空格的方式排除，但是不够好。</p>
<p>用file.path的方式直接生成，比较方便，而且绝对正确。</p>
</blockquote>
<p><br></p>
<h4 id="几个特殊的目录"><a href="#几个特殊的目录" class="headerlink" title="几个特殊的目录"></a>几个特殊的目录</h4><ul>
<li>R.home() 查看R软件的相关目录</li>
<li>.Library 查看R核心包的目录</li>
<li>.Library.site 查看R核心包的目录和root用户安装包目录</li>
<li>.libPaths() 查看R所有包的存放目录</li>
<li>system.file() 查看指定包所在的目录</li>
</ul>
<p><br></p>
<h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p><br></p>
<h4 id="file-exist-存在"><a href="#file-exist-存在" class="headerlink" title="file.exist - 存在"></a>file.exist - 存在</h4><blockquote>
<p>判断文件是否存在</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; file.exists(<span class="string">"."</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line">&gt; file.exists(<span class="string">"./a1/b2"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"></div><div class="line"><span class="comment"># 目录不存在</span></div><div class="line">&gt; file.exists(<span class="string">"./aa"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="file-remove-删除"><a href="#file-remove-删除" class="headerlink" title="file.remove - 删除"></a>file.remove - 删除</h4><blockquote>
<p>删除某目录</p>
</blockquote>
<p><br></p>
<h4 id="file-create-创建"><a href="#file-create-创建" class="headerlink" title="file.create - 创建"></a>file.create - 创建</h4><blockquote>
<p>创建文件</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 创建一个空文件 A.txt</span></div><div class="line">&gt; file.create(<span class="string">"A.txt"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line"></div><div class="line"><span class="comment"># 创建一个有内容的文件 B.txt</span></div><div class="line">&gt; cat(<span class="string">"file B\n"</span>, file = <span class="string">"B.txt"</span>)  <span class="comment"># 把字符串输出到file</span></div><div class="line"><span class="comment"># 打印B.txt</span></div><div class="line">&gt; readLines(<span class="string">"B.txt"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"file B"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="file-copy-复制"><a href="#file-copy-复制" class="headerlink" title="file.copy - 复制"></a>file.copy - 复制</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; file.copy(<span class="string">"A.txt"</span>, <span class="string">"C.txt"</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="file-append"><a href="#file-append" class="headerlink" title="file.append"></a>file.append</h4><p><br></p>
<h4 id="file-rename-重命名"><a href="#file-rename-重命名" class="headerlink" title="file.rename - 重命名"></a>file.rename - 重命名</h4><blockquote>
<p>对文件重命名</p>
</blockquote>
<ul>
<li>file.rename(“old_name”, “new_name”)：将old_name变更为new_name</li>
</ul>
<p><br></p>
<h3 id="压缩与解压"><a href="#压缩与解压" class="headerlink" title="压缩与解压"></a>压缩与解压</h3><blockquote>
<p>unzip(),zip() 两个函数，可以压缩和解压缩</p>
</blockquote>
<p><br></p>
<h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><p><br></p>
<h2 id="导入-数据表"><a href="#导入-数据表" class="headerlink" title="导入 - 数据表"></a>导入 - 数据表</h2><ol>
<li>要导入的数据必须<strong>存放在getwd()目录下</strong></li>
<li>Windows下路径要用斜杠<code>/</code>或者双反斜杠<code>\\</code></li>
</ol>
<p><br></p>
<h3 id="readr"><a href="#readr" class="headerlink" title="readr"></a>readr</h3><blockquote>
<p>library(readr)</p>
</blockquote>
<ul>
<li><strong>read_delim(“filename.xxx”, delim=””)</strong> : <strong>自由分隔符</strong><ul>
<li><code>delim= &quot;|&quot;</code>或其他任何形式</li>
</ul>
</li>
<li><strong>read_csv(“filename.csv”, col_names=T, col_types=NULL, skip = 0, locale(), na=c(“”,”NA”))：分隔符-逗号</strong></li>
</ul>
<blockquote>
<p>col_names = True(默认) / False 或者 <strong>c(“”,””)</strong> 指定的 [向量]列名</p>
<p>col_types = cols(colname=col<em>character() ) / cols(colename= “c”, colname=”</em>“) ：指定某个列的类型；</p>
<ul>
<li>可以使用简写 each character represents one column: c = character, i = integer, n = number, d = double, l = logical, D = date, T = date time, t = time, ? = guess, or _/- to skip the column.</li>
<li>cols(colname=col_skip() ) 跳过某个列不进行选取；</li>
</ul>
<p>skip = n 跳过的行数</p>
<p><strong>locale= locale</strong>(encoding=”UTF-8”, date_format=”%AD”,time_format=”%AT”)  (默认为US-centric)</p>
<ul>
<li><strong>encoding=”UTF-8” / “gb2312”</strong></li>
</ul>
<p>na = c(“”, “NA”)  ：设置 <code>&quot;&quot;</code> 与<code>&quot;NA&quot;</code> 显示为NA；也可自定义</p>
</blockquote>
<ul>
<li><strong>read_tsv()：制表符</strong></li>
<li><strong>read_csv2()：分号</strong></li>
<li><strong>read_table()</strong>  </li>
<li><strong>read_fwf()</strong></li>
</ul>
<p><br></p>
<h3 id="readxl"><a href="#readxl" class="headerlink" title="readxl"></a>readxl</h3><blockquote>
<p>.xls和.xlsx格式的Excel工作表</p>
</blockquote>
<ul>
<li><strong>read_excel(path, sheet = NULL, range = NULL, col_names = TRUE,  col_types = NULL, na = “”, trim_ws = TRUE, skip = 0, n_max = Inf,  guess_max = min(1000, n_max))</strong> ：读取xls/xlsx的工作表</li>
</ul>
<blockquote>
<p>path：Path to the xls/xlsx file</p>
<p>sheet：Sheet to read；整数或者字符串</p>
<p>range：读取的范围，例如 “B3:D87”</p>
<p>col_names：True/Fasle，或者输入自定义的列名，长度需要与col_types相同</p>
<p>col_types：</p>
<p>na = “ ”：默认将<code>空格</code>视为NULL</p>
<p>skip=0：跳过行数；若给定了<code>range</code>则忽略</p>
</blockquote>
<ul>
<li><strong>excel_sheet(path)</strong> ：显示表中的sheet名称</li>
</ul>
<p><br></p>
<h2 id="导入-非表格式"><a href="#导入-非表格式" class="headerlink" title="导入 - 非表格式"></a>导入 - 非表格式</h2><blockquote>
<p>非表格式的（Non-Tabular）；这里的文本文件指的是非表格式的文件，如纯文本文件，html文件</p>
</blockquote>
<p><br></p>
<h3 id="readr-1"><a href="#readr-1" class="headerlink" title="readr"></a>readr</h3><ul>
<li><strong>read_file(file, locale=default_locale())</strong>：读入为一个<strong>单一的字符串</strong></li>
</ul>
<blockquote>
<p>file ： 文档路径，一个连接或一个文本数据</p>
<ul>
<li>Files ending in .gz, .bz2, .xz, or .zip 将自动被解压</li>
<li>Files starting with http://, https://, ftp://, or ftps:// 将自动被下载</li>
<li>Remote gz files 也能被自动下载</li>
</ul>
<p>locale=locale()  : 默认为US-centric</p>
</blockquote>
<ul>
<li><strong>read_file_raw(file)</strong>：读入为一个<strong>未加工的向量</strong></li>
<li><strong>read_lines(file, skip=0, n_max=-1L, locale=default_locale(), na=character(), progress=interactive())</strong>：<strong>逐行读入</strong>，每一行作为一个<strong>单一的字符串</strong></li>
<li><strong>read_lines_raw()</strong>：逐行读入，每一行作为一个<strong>未加工的向量</strong></li>
<li><strong>read_log(file, col_names=FALSE, col_types=NULL, skip=0, n_max=-1L)</strong>：读入日志文档</li>
</ul>
<p><br></p>
<h3 id="scan"><a href="#scan" class="headerlink" title="scan"></a>scan</h3><ul>
<li><p><strong>scan(“file.xxx”, what=double(), seq=””, n=-1, nmax=-1, skip=0, encoding=”UTF-8”)</strong></p>
<blockquote>
<p>读取文本文件，<strong>默认</strong>情况下读取文件中以<strong>[空格分割]</strong> 所有<strong>[浮点数值]</strong></p>
</blockquote>
<ul>
<li>如果文件中包<strong>含非数值</strong>，可以字符串形式读入 <code>scan(&quot;a.txt&quot;,what=&quot;&quot;)</code></li>
<li>指定分隔符为换行，<code>scan(“a.txt”,what=””,sep=”\n”)</code> 返回以换行分割的字符串向量</li>
<li>如果数据为<strong>表格形式：因为有表头，用scan不能读入</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>what：读入的数据类型；The supported types are [ logical, integer, numeric, complex, character, raw and list. ]</p>
<ul>
<li>character(0)：每个单词作为字符向量的一个元素</li>
</ul>
<p>sep：分隔符，默认为空格<code>&quot; &quot;</code> </p>
<p>n = -1：显示至最后一行</p>
<p>nmax = -1：读取至最后一行</p>
<p>skip=0：跳过的行数</p>
<p>encoding=”UTF-8” / “Latin1”</p>
<p>quote =’’  : 若提示 EOF within quoted string可将<code>quote = &#39;&#39;</code> </p>
</blockquote>
<p><br></p>
<p><br></p>
<p><br></p>
<h3 id="readline"><a href="#readline" class="headerlink" title="readline"></a>readline</h3><blockquote>
<p>可以从键盘<strong>读取单行数据</strong></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">age&lt;-readline(<span class="string">"input the age: "</span>)</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="readLines"><a href="#readLines" class="headerlink" title="readLines"></a>readLines</h3><ul>
<li><strong>readLines(“file.xxx”, encoding=”UTF-8”)</strong> ：<strong>每一行当做一个字符串</strong>。等价于scan中指定分隔符为换行<ul>
<li>用于<strong>读取</strong>字符型的格式文件；常用于文本文件</li>
</ul>
</li>
</ul>
<blockquote>
<p>encoding = “UTF-8” / “Latin1” ; Lattin1是[ISO-8859-1]的别名，有些环境下写作Latin-1。ISO-8859-1编码是单字节编码，<strong>向下兼容ASCII</strong></p>
</blockquote>
<p><br></p>
<h1 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h1><p><br></p>
<h2 id="导出-数据表"><a href="#导出-数据表" class="headerlink" title="导出 - 数据表"></a>导出 - 数据表</h2><h3 id="readr-2"><a href="#readr-2" class="headerlink" title="readr"></a>readr</h3><ul>
<li><strong>write_delim(x, path, delim = “ “, na = “NA”, append = FALSE,  col_names = !append)</strong> ：默认分隔符为 <code>&quot; &quot;</code></li>
<li><strong>write_csv(x, path, na = “NA”, append = FALSE, col_names = !append)</strong> ：导出为<strong>逗号分隔符</strong>的文档</li>
</ul>
<blockquote>
<p>path：Path or connection to write to.</p>
<p>append=False (默认), 覆盖已有的文件；若为True，增加已经存在的文件</p>
<p>col_names = !append 写入的时候不写入列名</p>
</blockquote>
<ul>
<li>write_tsv()  ：分隔符为制表符<code>\t</code></li>
<li>write_excel_csv()：导出为csv文档</li>
</ul>
<blockquote>
<p>All columns are encoded as UTF-8</p>
</blockquote>
<p><br></p>
<h2 id="导出-文本-amp-文本文件"><a href="#导出-文本-amp-文本文件" class="headerlink" title="导出 - 文本&amp;文本文件"></a>导出 - 文本&amp;文本文件</h2><h3 id="readr-3"><a href="#readr-3" class="headerlink" title="readr"></a>readr</h3><ul>
<li><p><strong>write_file(x, path)</strong>：导出为<strong>字符串文档</strong></p>
</li>
<li><p><strong>write_lines()</strong>：导出为<strong>字符串向量，每一个元素一行</strong></p>
</li>
<li><p><strong>write_rds()</strong>：导出为RDS文档</p>
<p>​</p>
</li>
</ul>
<p><br></p>
<h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><ul>
<li><strong>cat(x, file=””, sep=””, fill=False, labels=NULL, append=False)</strong>：<ul>
<li>拼接后<strong>输出</strong>对象</li>
<li><strong>把结果写到指定的文件中</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>x：R的对象</p>
<p>file：一个连接，或命名的文件打印到一个字符串；默认情况下打印到标准输出连接</p>
<p>sep=” “：默认为<strong>空格</strong>； 每个元素后追加一个字符串的字符向量；</p>
<p>append = False 覆盖file内容；若为True，表示附加到file</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; cat(c(<span class="string">"AB"</span>, <span class="string">"C"</span>), c(<span class="string">"E"</span>, <span class="string">"F"</span>), <span class="string">"\n"</span>, sep=<span class="string">""</span>)</div><div class="line">[<span class="number">1</span>] ABCDEF</div><div class="line"></div><div class="line"><span class="comment">#----可以把结果写到指定的文件中-----------------#</span></div><div class="line">cat(<span class="string">"i = "</span>, <span class="number">1</span>, <span class="string">"\n"</span>, file=<span class="string">"c:/work/result.txt"</span>)</div><div class="line"><span class="comment"># 加上一个append=TRUE参数可以不覆盖原文 件而是在文件末尾附加，这很适用于运行中的结果记录。</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="cat-vs-paste"><a href="#cat-vs-paste" class="headerlink" title="cat vs. paste"></a>cat vs. paste</h4><ul>
<li>cat是<strong>输出</strong>，paste连接成一个<strong>字符串</strong><ul>
<li>显示结果是：一个没有引号的结果（cat），另一个是有引号的字符串（paste）</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">a&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">b&lt;-c(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>)</div><div class="line">c&lt;-c(<span class="string">'hi'</span>,<span class="string">'hello'</span>)</div><div class="line">&gt; paste(a,b,c)</div><div class="line">[<span class="number">1</span>] <span class="string">"1 4 hi"</span>    <span class="string">"2 5 hello"</span> <span class="string">"3 6 hi"</span>    <span class="string">"4 7 hello"</span></div><div class="line"></div><div class="line">&gt; cat(a,b,c)</div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> hi hello</div><div class="line"></div><div class="line"></div><div class="line">&gt; cat(LETTERS, letters)</div><div class="line">A B C D E <span class="literal">F</span> G H I J K L M N O P Q R S <span class="literal">T</span> U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z</div><div class="line">&gt; paste(LETTERS, letters)</div><div class="line"> [<span class="number">1</span>] <span class="string">"A a"</span> <span class="string">"B b"</span> <span class="string">"C c"</span> <span class="string">"D d"</span> <span class="string">"E e"</span> <span class="string">"F f"</span> <span class="string">"G g"</span> <span class="string">"H h"</span> <span class="string">"I i"</span> <span class="string">"J j"</span> <span class="string">"K k"</span> <span class="string">"L l"</span></div><div class="line">[<span class="number">13</span>] <span class="string">"M m"</span> <span class="string">"N n"</span> <span class="string">"O o"</span> <span class="string">"P p"</span> <span class="string">"Q q"</span> <span class="string">"R r"</span> <span class="string">"S s"</span> <span class="string">"T t"</span> <span class="string">"U u"</span> <span class="string">"V v"</span> <span class="string">"W w"</span> <span class="string">"X x"</span></div><div class="line">[<span class="number">25</span>] <span class="string">"Y y"</span> <span class="string">"Z z"</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="cat-vs-print"><a href="#cat-vs-print" class="headerlink" title="cat vs. print"></a>cat vs. print</h4><ul>
<li>cat被认为是更低级别的print，会<strong>识别转义符并进行执行</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt; x &lt;- <span class="string">"a b\tc\nd"</span></div><div class="line">&gt; print(x)</div><div class="line">[<span class="number">1</span>] <span class="string">"a b\tc\nd"</span></div><div class="line"></div><div class="line">&gt; cat(x)</div><div class="line">a b	c</div><div class="line">d</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="writeLines"><a href="#writeLines" class="headerlink" title="writeLines"></a>writeLines</h3><h1 id="案例-获取指定目录下的csv文档，并合并输出"><a href="#案例-获取指定目录下的csv文档，并合并输出" class="headerlink" title="案例 - 获取指定目录下的csv文档，并合并输出"></a>案例 - 获取指定目录下的csv文档，并合并输出</h1><ul>
<li><strong>Windows下路径要用斜杠<code>/</code>或者双反斜杠<code>\\</code>  </strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#----获取指定目录下的csv文档，并合并输出----------#</span></div><div class="line"></div><div class="line"><span class="comment">## 获取当前工作目录下所有文件名的路径</span></div><div class="line">file.path(getwd(),dir())</div><div class="line"><span class="string">'E:/Jupyter_notebook/test'</span> <span class="string">'E:/Jupyter_notebook/test.ipynb'</span> <span class="string">'E:/Jupyter_notebook/专项分析'</span></div><div class="line"></div><div class="line">path &lt;- file.path(getwd(),dir())[<span class="number">1</span>]</div><div class="line"><span class="string">'E:/Jupyter_notebook/test'</span></div><div class="line"></div><div class="line"><span class="comment">## 获取该路径下的所有csv文件名</span></div><div class="line">name &lt;- dir(path, pattern=<span class="string">".*\\.csv$"</span>); name</div><div class="line"><span class="string">'2016-01-11-IC_1.csv'</span> <span class="string">'2016-01-11-IH_1.csv'</span> <span class="string">'2016-01-12-TF_1.csv'</span> <span class="string">'2016-01-13-T_1.csv'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## 合并文件名路径 + 文件名</span></div><div class="line">path_name &lt;- file.path(path, name); path_name</div><div class="line"></div><div class="line"><span class="comment">## 省去定义data.frame的时间，我选择先读入一个文件</span></div><div class="line">table0 &lt;- read_csv(path_name[<span class="number">1</span>], locale=locale(encoding=<span class="string">'gb2312'</span>)) </div><div class="line"></div><div class="line"><span class="comment">## 写循环写入该文件中</span></div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> path_name[<span class="number">2</span>:length(paht_name)])&#123;       <span class="comment"># 大括号表示代码块的起止</span></div><div class="line">  table1 &lt;- read_csv(path_name[<span class="number">1</span>], locale=locale(encoding=<span class="string">'gb2312'</span>)) </div><div class="line">  table0 &lt;- bind_rows(table0, talbe1)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">## 写出文档</span></div><div class="line">write_csv(table0, file.path(path, <span class="string">'test.csv'</span>), append=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Windows下路径要用斜杠&lt;code&gt;/&lt;/code&gt;或者双反斜杠&lt;code&gt;\\&lt;/code&gt;  &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R本身把&lt;code&gt;\&lt;/code&gt; 当做转义符，所以写pattern的时候要用&lt;code&gt;\\&lt;/code&gt;进行转义&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="软件应用" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/r/"/>
    
    
      <category term="软件应用" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/tags/r/"/>
    
  </entry>
  
  <entry>
    <title>R_数据处理_dplyr&amp;reshape2&amp;tidyr</title>
    <link href="http://yoursite.com/2017/07/24/R_%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86_dplyr&amp;reshape2/"/>
    <id>http://yoursite.com/2017/07/24/R_数据处理_dplyr&amp;reshape2/</id>
    <published>2017-07-23T16:00:00.000Z</published>
    <updated>2017-07-30T08:39:08.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>dplyr：轻松地处理data.frame, data.table以及多种数据库为基础的数据，实现选择、变换、分组等</li>
<li>plry：轻松地在vector, list, data.frame之间做分组变换，实现<strong>拆分、变换、合并</strong>的操作</li>
<li>reshpae2：横向、纵向做数据变换</li>
</ul>
<a id="more"></a>
<blockquote>
<p>非特别标注，默认为dplyr包</p>
</blockquote>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li><p><strong>tbl_df(iris)</strong> ：数据类型转化</p>
<blockquote>
<p>将数据转化为tbl类型，更易于查看</p>
</blockquote>
</li>
<li><p><strong>glimpse(iris)</strong>：tbl数据的信息密集概括</p>
</li>
<li><p><strong>View(iris)</strong>：以电子表格的样式显示数据集</p>
</li>
<li><p><strong>%&gt;%</strong> ：管道函数，将左边对象的第一个参数传递到右边的函数中</p>
</li>
<li><p><strong>summary()</strong>：数据统计摘要；区别对待不同类型的数据变量- <strong>(1)数值型：相关极值等信息；(2)名义型/有序型：显示的是各水平的频数值</strong></p>
</li>
</ul>
<p><br></p>
<h2 id="重组数据"><a href="#重组数据" class="headerlink" title="重组数据"></a>重组数据</h2><blockquote>
<p><strong>改变数据集的布局</strong></p>
</blockquote>
<h3 id="布局转换-reshpae2-（数据透视）"><a href="#布局转换-reshpae2-（数据透视）" class="headerlink" title="布局转换 - reshpae2 （数据透视）"></a>布局转换 - reshpae2 （数据透视）</h3><ul>
<li><strong>melt(data, id.vars, measure.vars, factorsAsStrings = TRUE)</strong>：以id.vars为基准，转为<strong>长格式</strong>形式<ul>
<li><strong>melt(data, id=c(“”), measure=c(“”) )</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>id=c(“”,””) 或 id.vars=c()  以该变量为 [基准] 进行重构；<strong>其他的列均摞起来</strong></p>
<p>measure=c(“”)  或 measure.vars=c()  ：组合进id列的变量；若measure缺失，表示所有字段</p>
<p>varaiable.name ，表示将 各个变量的列名 放在这个列下面；</p>
<p>value.name，表示对应观测值的具体数值</p>
<p>na.rm = FALSE,</p>
<p>factorsAsStrings = TRUE,将因子转化为字符串</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">names(airquality) &lt;- tolower(names(airquality))</div><div class="line">View(airquality)</div><div class="line">airquality_1 &lt;- head(airquality,<span class="number">3</span>)</div><div class="line">aqm &lt;- melt(airquality_1, id=c(<span class="string">"month"</span>,<span class="string">"day"</span>))  <span class="comment"># 以该变量为 [基准] 进行重构；其他的列均 [摞起来]</span></div><div class="line"></div><div class="line">&gt; melt(airquality_1, id=c(<span class="string">"month"</span>,<span class="string">"day"</span>))  <span class="comment"># measure缺失时，默认选择所有的列</span></div><div class="line">   month day variable value</div><div class="line"><span class="number">1</span>      <span class="number">5</span>   <span class="number">1</span>    ozone  <span class="number">41.0</span></div><div class="line"><span class="number">2</span>      <span class="number">5</span>   <span class="number">2</span>    ozone  <span class="number">36.0</span></div><div class="line"><span class="number">3</span>      <span class="number">5</span>   <span class="number">3</span>    ozone  <span class="number">12.0</span></div><div class="line"><span class="number">4</span>      <span class="number">5</span>   <span class="number">1</span>  solar.r <span class="number">190.0</span></div><div class="line"><span class="number">5</span>      <span class="number">5</span>   <span class="number">2</span>  solar.r <span class="number">118.0</span></div><div class="line"><span class="number">6</span>      <span class="number">5</span>   <span class="number">3</span>  solar.r <span class="number">149.0</span></div><div class="line"><span class="number">7</span>      <span class="number">5</span>   <span class="number">1</span>     wind   <span class="number">7.4</span></div><div class="line"><span class="number">8</span>      <span class="number">5</span>   <span class="number">2</span>     wind   <span class="number">8.0</span></div><div class="line"><span class="number">9</span>      <span class="number">5</span>   <span class="number">3</span>     wind  <span class="number">12.6</span></div><div class="line"><span class="number">10</span>     <span class="number">5</span>   <span class="number">1</span>     temp  <span class="number">67.0</span></div><div class="line"><span class="number">11</span>     <span class="number">5</span>   <span class="number">2</span>     temp  <span class="number">72.0</span></div><div class="line"><span class="number">12</span>     <span class="number">5</span>   <span class="number">3</span>     temp  <span class="number">74.0</span></div><div class="line"></div><div class="line">&gt; melt(airquality_1, id.vars =c(<span class="string">"month"</span>,<span class="string">"day"</span>), measure=c(<span class="string">"wind"</span>,<span class="string">"temp"</span>))</div><div class="line">  month day variable value</div><div class="line"><span class="number">1</span>     <span class="number">5</span>   <span class="number">1</span>     wind   <span class="number">7.4</span></div><div class="line"><span class="number">2</span>     <span class="number">5</span>   <span class="number">2</span>     wind   <span class="number">8.0</span></div><div class="line"><span class="number">3</span>     <span class="number">5</span>   <span class="number">3</span>     wind  <span class="number">12.6</span></div><div class="line"><span class="number">4</span>     <span class="number">5</span>   <span class="number">1</span>     temp  <span class="number">67.0</span></div><div class="line"><span class="number">5</span>     <span class="number">5</span>   <span class="number">2</span>     temp  <span class="number">72.0</span></div><div class="line"><span class="number">6</span>     <span class="number">5</span>   <span class="number">3</span>     temp  <span class="number">74.0</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>dcast(data, formula, fun.aggregate = NULL)</strong>：以formula中的rowvar为基准列，重铸为<strong>宽格式</strong> [excel统计表单的格式]；<strong>若加上FUN，则为 [数据透视表] 的格式</strong><ul>
<li><strong>dcast(data, ID~variable, mean)</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p><strong><u>dcast的功能相当于 group_by + summarise 的功能</u></strong></p>
<p>formula , rowvar1+rowvar2 ~ colvar1+colvar2的格式；</p>
<ul>
<li>rowvar ：以此为基准的id列；</li>
<li>colvar ：需要重构的变量列；将该变量中的元素 <strong>[分类] 映射到 [列]</strong> 上去<ul>
<li>运行后的结果：出现的变量，原本为<strong>变量的列名</strong>，融合后是不参与计算的；<strong>参与的是对应的value列</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p><strong>若整个formula表达是中，均没有出现 variable列，默认即对其他所有的列默认做 [统计计数length] </strong></p>
<p>除非指定具体的FUN函数</p>
</blockquote>
<p>fun.aggregate（聚合函数）：直接列出聚合函数的名称；默认为计数 [length]</p>
<p>margins = NULL；向量形式的变量名字；</p>
<ul>
<li><strong>若为TRUE，则计算所有的合计</strong></li>
<li><strong>margins= “colname”  / “rowname”  即表达式中出现的变量名</strong></li>
</ul>
<p>subset = NULL；针对<strong>特定的变量类别</strong>做重铸；但<strong>需要加载plyr包</strong>去接收函数</p>
<ul>
<li>选择 <strong>行中分类值</strong> 或者 <strong>variable列中的分类 “length”</strong> 进行重铸<ul>
<li><code>subset = .(variable==&quot;length&quot;)</code>  或者 <code>subset = .(month == 5 )</code></li>
<li><code>subset = .(time &lt; 10 &amp; chick &lt; 20)</code> </li>
</ul>
</li>
</ul>
<p>fill = NULL； 填充NA的值</p>
<p>drop = TRUE；对缺失值的处理；drop or Not</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">names(airquality) &lt;- tolower(names(airquality))</div><div class="line">View(airquality)</div><div class="line">aqm &lt;- melt(airquality, id=c(<span class="string">"month"</span>, <span class="string">"day"</span>), na.rm=<span class="literal">TRUE</span>) <span class="comment"># 除了month和day两列，其他列摞起来，为了等长，m和d列循环对齐</span></div><div class="line"></div><div class="line">dcast(aqm, day + variable ~ month) <span class="comment"># 保持day和variable不变，按month中的元素 [分类] 映射到列上去(若month有5、6两个月，则分别有2列)</span></div><div class="line">dcast(aqm, variable + day ~ month) <span class="comment"># 换一下顺序，重复的variable连在一起，对应不一样的day，这样的方式排列</span></div><div class="line">dcast(aqm, day ~ variable + month) <span class="comment"># 只保留day列</span></div><div class="line">dcast(aqm, day+month ~ variable)  <span class="comment"># 还原为原本的样子</span></div><div class="line"></div><div class="line"><span class="comment"># 表达式中均未出现variable列，即默认把其他列的每一行看做一个整体进行计算-#</span></div><div class="line">dcast(aqm, day ~ month)  <span class="comment"># 当整个formula表达是中，均没有出现 variable列，即对其他所有的列默认做长度计算length</span></div><div class="line">   day <span class="number">5</span> <span class="number">6</span></div><div class="line"><span class="number">1</span>    <span class="number">1</span> <span class="number">4</span> <span class="number">3</span>   <span class="comment"># 表示day为1，month为5时，共有4个变量</span></div><div class="line"><span class="number">2</span>    <span class="number">2</span> <span class="number">4</span> <span class="number">3</span></div><div class="line"><span class="number">3</span>    <span class="number">3</span> <span class="number">4</span> <span class="number">3</span></div><div class="line"><span class="number">4</span>    <span class="number">4</span> <span class="number">4</span> <span class="number">3</span></div><div class="line"></div><div class="line">dcast(aqm, day ~ month, mean) <span class="comment"># 对所有没有出现的变量做函数mean</span></div><div class="line">   day         <span class="number">5</span>         <span class="number">6</span></div><div class="line"><span class="number">1</span>    <span class="number">1</span>  <span class="number">76.35000</span> <span class="number">124.20000</span></div><div class="line"><span class="number">2</span>    <span class="number">2</span>  <span class="number">58.50000</span> <span class="number">123.56667</span></div><div class="line"><span class="number">3</span>    <span class="number">3</span>  <span class="number">61.90000</span> <span class="number">108.36667</span></div><div class="line"><span class="number">4</span>    <span class="number">4</span> <span class="number">101.12500</span>  <span class="number">93.06667</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># -------加入计算：等价于group_by + summarise------------------------------#</span></div><div class="line"><span class="comment">## 正常情况下含variable</span></div><div class="line">&gt; dcast(aqm , month~variable) </div><div class="line">Aggregation <span class="keyword">function</span> missing: defaulting to length  <span class="comment"># 默认为计数</span></div><div class="line">  month ozone solar.r wind temp</div><div class="line"><span class="number">1</span>     <span class="number">5</span>    <span class="number">26</span>      <span class="number">27</span>   <span class="number">31</span>   <span class="number">31</span></div><div class="line"><span class="number">2</span>     <span class="number">6</span>     <span class="number">9</span>      <span class="number">29</span>   <span class="number">29</span>   <span class="number">29</span></div><div class="line">  </div><div class="line">&gt; dcast(aqm , month~variable, mean)</div><div class="line">  month    ozone  solar.r     wind     temp</div><div class="line"><span class="number">1</span>     <span class="number">5</span> <span class="number">23.61538</span> <span class="number">181.2963</span> <span class="number">11.62258</span> <span class="number">65.54839</span></div><div class="line"><span class="number">2</span>     <span class="number">6</span> <span class="number">29.44444</span> <span class="number">191.9655</span> <span class="number">10.34483</span> <span class="number">78.96552</span></div><div class="line">  </div><div class="line">  </div><div class="line"><span class="comment"># ------加入合计：margins-------------------</span></div><div class="line">&gt; dcast(aqm , month~variable,sum, margins = <span class="literal">T</span>)</div><div class="line">  month ozone solar.r  wind temp   (all)</div><div class="line"><span class="number">1</span>     <span class="number">5</span>   <span class="number">614</span>    <span class="number">4895</span> <span class="number">360.3</span> <span class="number">2032</span>  <span class="number">7901.3</span></div><div class="line"><span class="number">2</span>     <span class="number">6</span>   <span class="number">265</span>    <span class="number">5567</span> <span class="number">300.0</span> <span class="number">2290</span>  <span class="number">8422.0</span></div><div class="line"><span class="number">3</span> (all)   <span class="number">879</span>   <span class="number">10462</span> <span class="number">660.3</span> <span class="number">4322</span> <span class="number">16323.3</span></div><div class="line">  </div><div class="line">dcast(aqm , month~variable,sum, margins = <span class="string">"month"</span>)</div><div class="line">  </div><div class="line"><span class="comment"># --------加入子集的选取subset-------------------</span></div><div class="line"><span class="keyword">library</span>(plyr) <span class="comment"># needed to access . function</span></div><div class="line">dcast(aqm, variable ~ month, mean, subset = .(variable == <span class="string">"ozone"</span>))</div><div class="line">dcast(aqm, variable ~ month, mean, subset = .(month == <span class="number">5</span>))</div><div class="line"></div><div class="line">names(ChickWeight) &lt;- tolower(names(ChickWeight))</div><div class="line">chick_m &lt;- melt(ChickWeight, id=<span class="number">2</span>:<span class="number">4</span>, na.rm=<span class="literal">TRUE</span>)</div><div class="line">dcast(chick_m, chick ~ time, mean, subset = .(time &lt; <span class="number">10</span> &amp; chick &lt; <span class="number">20</span>))  <span class="comment"># 多条件选取</span></div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li><strong>dcast 和 acast区别</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; dcast(aqm, variable + month ~ day) </div><div class="line">&gt; acast(aqm, variable + month ~ day) <span class="comment"># acast和dcast的功能基本上相同，只是dcast会把 [分组信息] 作为一列或几列显示，而acast会将其作为行名</span></div><div class="line">&gt; acast(aqm, day ~ month, mean) <span class="comment"># 保留的列作为合并在一起作为列名（少了day列，不建议使用）</span></div><div class="line">&gt; acast(aqm, variable ~ month ~ day) <span class="comment"># acast 多出来的功能，生成一个三维数组，按照day的值分成31个矩阵</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p><br></p>
<ul>
<li><strong>t(x)</strong> ：<strong>转置</strong></li>
<li><strong>mtcars &lt;- mtacrs[, c(12,1:11) ]</strong> ：<strong>列重新排序</strong></li>
</ul>
<p><br></p>
<h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul>
<li><strong>arrange(mtcars, desc(mpg),var)</strong> ：根据变量进行排序</li>
<li>arrange(flights, <strong>desc(dep_delay - arr_delay)</strong>)：对<strong>计算的数据</strong>进行计算</li>
</ul>
<blockquote>
<p>默认为升序，aes</p>
</blockquote>
<p><br></p>
<h3 id="返回行-列名-Basic"><a href="#返回行-列名-Basic" class="headerlink" title="返回行/列名 - Basic"></a>返回行/列名 - Basic</h3><ul>
<li><strong>colnames(object)</strong>：返回所有<strong>列</strong>的名称<ul>
<li>names(object) </li>
</ul>
</li>
<li><strong>rownames(object)</strong>：返回所有<strong>行</strong>的名称 [二维以上的任何对象]<ul>
<li>row.names(object) </li>
</ul>
</li>
</ul>
<p><br></p>
<h3 id="重命名列变量"><a href="#重命名列变量" class="headerlink" title="重命名列变量"></a>重命名列变量</h3><ul>
<li><strong>rename(tbl, y=year)</strong>：将变量名year变更为y</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rename(data, newname=oldname)  <span class="comment"># 新的列名在前</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>select(df2tbl, x1 = x, y1 = y)</strong>：选择变量时，重命名；x1为新的列名</li>
<li><strong><u>fix(object)</u></strong>：可以同时改变格式 numeric / character <strong>【Basic】</strong></li>
</ul>
<p><br></p>
<ul>
<li><strong>data_frame</strong>(a=1:3, b=3:5)：将向量合并为数据框</li>
</ul>
<p><br></p>
<h3 id="合并-amp-分割-Tidyr"><a href="#合并-amp-分割-Tidyr" class="headerlink" title="合并 &amp; 分割 - Tidyr"></a>合并 &amp; 分割 - Tidyr</h3><ul>
<li><strong>separate(data, col, into, sep=”[^[:alnum:]]+”, remove=TRUE, convert=FALSE, extra=”warm”, fill=”warm”)</strong>：<strong>将一列分隔为几列</strong></li>
</ul>
<blockquote>
<p>data：</p>
<p>col ：待分隔的列</p>
<p>into=c(“”,””)：新的列名</p>
<p>sep：分隔符；</p>
<ul>
<li>若为字符串，作为正则表达式进行匹配（默认）</li>
<li>若为数值型，则根据位置进行匹配（-1代表最后一位）</li>
</ul>
<p>remove =TRUE，移除原来的待分隔的列</p>
<p>convert=FALSE， 若为TRUE，则进行格式转换</p>
</blockquote>
<ul>
<li><strong>separate_rows(data, …, sep=””, convert=FASLE)</strong>：把一列<strong>分隔为若干行</strong></li>
</ul>
<p><br></p>
<ul>
<li><strong>unite(data, col, …, sep=”_”, remove=TRUE)</strong>：把几列<strong>合并为一列</strong></li>
</ul>
<blockquote>
<p>… : 指定需要合并的列名</p>
<p>col=”” :合并后新增的列名</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unite(table, century, year, col=<span class="string">"year"</span>, sep=<span class="string">""</span>)</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="重编码-amp-排名-参见-创建新变量"><a href="#重编码-amp-排名-参见-创建新变量" class="headerlink" title="重编码&amp;排名 - 参见 [创建新变量]"></a>重编码&amp;排名 - 参见 [创建新变量]</h3><p><br></p>
<h2 id="合并数据集"><a href="#合并数据集" class="headerlink" title="合并数据集"></a>合并数据集</h2><h3 id="合并联接-Join"><a href="#合并联接-Join" class="headerlink" title="合并联接 -  Join"></a>合并联接 -  Join</h3><blockquote>
<p>等价于SQL中的join联接</p>
</blockquote>
<ul>
<li><strong>inner_join(a, b，by=”x1”)</strong> ：内联接 合并数据，仅保留匹配的数据</li>
<li><strong>left_join(a, b, by=”x1”)</strong> ：以a表为基准表，加入与a表中x1列匹配的数据集b的记录</li>
<li><strong>right_join</strong>(a, b, by=”x1”) ：以b表为基准表，加入与b表中x1列匹配的数据集b的记录</li>
<li><strong>outer_join</strong>(a,b, by=”x1”)：保留所有数据，所有行</li>
</ul>
<blockquote>
<p>by = NUll（默认）；表示为 自联接，自动选取 [相同的列] 作为索引</p>
<ul>
<li>by=c(‘col1’, ‘col2’)：两个表中<strong>相同名称列</strong>的匹配</li>
<li>by=c(‘col1’ = ‘col2’) ：两个表中<strong>不同名称列</strong>之间的匹配</li>
</ul>
<p>copy=False(默认)； 若为True, 当a与b不为同一张表，会自动创建一个y的表</p>
</blockquote>
<p><br></p>
<h3 id="集处理-行"><a href="#集处理-行" class="headerlink" title="集处理 - 行"></a>集处理 - 行</h3><ul>
<li><strong>intersect(y, z)</strong>：<strong>均出现</strong>在数据集y和z中的记录行</li>
<li><strong>union(y, z)</strong>：出现在y<strong>或者</strong>z中的记录，<strong>自动删除重复的值</strong></li>
<li><strong>setdiff(y, z)</strong>：<strong>仅</strong>出现在数据集y 而不在z中的记录行</li>
</ul>
<p><br></p>
<h3 id="合并与筛选"><a href="#合并与筛选" class="headerlink" title="合并与筛选"></a>合并与筛选</h3><blockquote>
<p>仅返回<strong>匹配列</strong>的记录</p>
</blockquote>
<ul>
<li><strong>semi_join(a, b, by=”x1”)</strong>： 数据集a中能与b匹配的记录，以a表中”x1”列的值为索引</li>
<li><strong>anti_join</strong>(a, b, by=”x1”) ：数据集a中能与b<strong>不能匹配</strong>的记录，以a表中”x1”列的值为索引</li>
</ul>
<p><br></p>
<h3 id="插入行-列"><a href="#插入行-列" class="headerlink" title="插入行/列"></a>插入行/列</h3><ul>
<li><strong>bind_rows(y, z)</strong> ：<strong>插入新行</strong>；把数据集 z 作为新的行添加到y中</li>
<li><strong>bind_cols(y, z)</strong>： <strong>添加新列</strong>；把数据集 z 作为新的行添加到y中（注意：<strong>数据按所在位置匹配</strong>）</li>
</ul>
<p><br></p>
<p><br></p>
<h2 id="数据选取"><a href="#数据选取" class="headerlink" title="数据选取"></a>数据选取</h2><h3 id="子集观测值-行"><a href="#子集观测值-行" class="headerlink" title="子集观测值 - 行"></a>子集观测值 - 行</h3><ul>
<li><strong>filter(tbl_df, cond &amp; cond) </strong>：根据<strong>逻辑条件</strong>选取，使用 <code>&amp;</code>或者<code>|</code> 来进行设置<ul>
<li>filter(hflights_df, Month == 1, DayofMonth == 1)</li>
<li>filter(tbl_df,  x <strong>%in%</strong> c(“a”,”b”)) ：表示x中<strong>包含</strong>“a”<strong>或者</strong>“b”的值，返回为<strong>逻辑为真</strong></li>
<li>filter(iris,Species<strong>!=”</strong>setosa”) / filter(iris,<strong>!Species %in%</strong> c(“setosa”))：<strong>排除某些行</strong> <code>!</code></li>
<li><strong>filter() %&gt;% select(., var)</strong>：<strong>选中子集中的特定列</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>对于多条件的选择，需要完整条件的，然后使用集合运算符将条件拼接起来。</p>
<p><code>&amp;</code> 、<code>|</code></p>
<p><code>==</code>、 <code>&gt;=</code>、<code>&lt;&gt;</code>、<code>!=</code></p>
<p><code>%in%</code></p>
</blockquote>
<p><br></p>
<ul>
<li><strong>sample_frac(iris, 0.5, replace=False)</strong>：按<strong>比例</strong>进行<strong>随机选取</strong></li>
<li><strong>sample_n(iris, 10, replace=True)</strong> ：按<strong>数量</strong>进行<strong>随机选取</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## replace = False(默认)，表示是否替换</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>slice(mtcars, n:n)</strong>： 通过<strong>行数的位置</strong>进行选取， 等价于data[n:n, ]</li>
</ul>
<p><br></p>
<ul>
<li><p><strong>top_n(mtcars, 1, desc(carb) )</strong>：<strong>选取并排列前n条</strong>记录；相当于<strong>先按某变量进行排序，然后选择前n条记录。</strong></p>
<ul>
<li>top_n(tbl_df, n [,wt])</li>
</ul>
<blockquote>
<p>若为分组数据，则按组排序</p>
</blockquote>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## wt，用于进行排序的变量，可选；若不指定，默认为最后一个变量</span></div><div class="line"><span class="comment">## -n，从底部开始选择n个数据</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="子集变量-列"><a href="#子集变量-列" class="headerlink" title="子集变量 - 列"></a>子集变量 - 列</h3><blockquote>
<p>Selection <strong>drops variables that are not in the selection</strong> while renaming retains them</p>
</blockquote>
<ul>
<li><strong>select(mtcars, hp)</strong> ：通过<strong>列名或帮助函数</strong>选取列变量<ul>
<li>select(tbl_df, <strong>mpg:hp</strong>)：；选取在mpg和hp之间的<strong>连续多个</strong>变量 （包含mpg&amp;hp；用<code>:</code>连接</li>
<li>select(tbl_df, <strong>-var</strong>)  / select(tbl_df, -(var1:var4))：通过<code>-</code>来<strong>排除</strong>某个变量列</li>
</ul>
</li>
<li><strong>select</strong>(tbl, <strong>xxx</strong> )：通过<strong>帮助函数</strong>进行选择<ul>
<li><strong>starts_with(“x”)</strong>：列名中以元素x为首的列</li>
<li><strong>ends_with(“x”)</strong>：列名中以元素x结尾的列</li>
<li><strong>contains(“x”)</strong>：包含元素x的列</li>
<li><strong>matches(“.t”)</strong>：符合指定<strong>匹配正则表达式</strong>的列 </li>
<li><strong>one_of(c(“mpg,”hp”) )</strong>：名字在指定组中的列，等价于 select(tbl, mpg, hp)</li>
<li><strong>everything()</strong>：所有列，一般调整数据集中变量顺序时使用<ul>
<li><strong>select(df2tbl,y,everything())  #将变量y放到最前</strong></li>
</ul>
</li>
<li><strong>num_range(“x”, 1:5)</strong>：选取名为x1、x2、x3、x4、x5的列</li>
</ul>
</li>
<li><strong>select_if()</strong>：选取<strong>不同条件的列</strong><ul>
<li><strong>hflights %&gt;% select_if(is.factor)</strong>：选取hflights数据中<strong>为因子</strong>的列 / is.numeric</li>
<li><em>hflights %&gt;% select_if(function(col) is.numeric(col) &amp;&amp; mean(col) &gt; 3.5)：选取hflights数据中某一变量列</em> ？？</li>
</ul>
</li>
</ul>
<p><br></p>
<h3 id="唯一值"><a href="#唯一值" class="headerlink" title="唯一值"></a>唯一值</h3><ul>
<li><strong>distinct(iris)</strong>：删除<strong>重复记录</strong><ul>
<li><strong>distinct(hflights_df, Month, .keep_all = TRUE)</strong></li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## .keep_all = TRUE,指保留除Month以外的其它列的内容。默认的情况是不保存其他列的。</span></div></pre></td></tr></table></figure>
<blockquote>
<p>指各个变量列均相同的记录</p>
</blockquote>
<ul>
<li><strong>unique(x)</strong>：只对<strong>向量</strong>可用；或对各行中各变量完全相同的行取一行</li>
<li><strong>!duplicated(x)</strong>： 返回逻辑值；若完全相同则为TRUE，可对data.frame使用<ul>
<li><strong>x[!duplicated(x)]</strong> ：选取不重复值的值</li>
</ul>
</li>
</ul>
<blockquote>
<p>返回data中所有不相同的值，然后在进行行选取data[x, ]</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 删除各行中变量完全相同的值 = unique(x)</span></div><div class="line">data &lt;- data[!duplicated(data), ]    --<span class="comment"># 返回各列所有相同的值 data[duplicated(test),]</span></div><div class="line"></div><div class="line"><span class="comment"># 删除某变量中相同的值</span></div><div class="line">data &lt;- data[!duplicated(test[, <span class="string">"var"</span>]), ]  </div><div class="line"></div><div class="line"><span class="comment"># 删除某两个变量完全相同的行</span></div><div class="line"> data &lt;- data[!duplicated(test[, c(<span class="string">"var1"</span>,<span class="string">"var2"</span>)], ]</div></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h2 id="创建新变量"><a href="#创建新变量" class="headerlink" title="创建新变量"></a>创建新变量</h2><blockquote>
<p>根据是否删除原列进行区分</p>
</blockquote>
<h3 id="计算并添加新列"><a href="#计算并添加新列" class="headerlink" title="计算并添加新列"></a>计算并添加新列</h3><blockquote>
<p><strong>若要将多个单元格中的值合并，用<code>stringr</code>包中的<code>str_c()</code></strong></p>
</blockquote>
<ul>
<li><strong>运用<code>$</code>直接创建</strong>   <code>mtcars$new &lt;- sqtr(mtcars$carb)</code></li>
</ul>
<ul>
<li><strong>mutate(tbl_df, var3=var1+var2, var4=var3+..)</strong>：优势在于可<strong>对刚添加的列</strong>进行<strong>变换</strong></li>
<li><strong>mutate_each</strong>(iris, <strong>funs(min_rank), [var1,var2]</strong>)：对<strong>每一列</strong>运行<strong>窗口函数</strong></li>
<li><strong>mutate_all()</strong>：对<strong>每一列</strong>运行窗口函数</li>
<li><strong>mutate_at()</strong>：对<strong>指定的列</strong>运行窗口函数</li>
<li><strong>mutate_if()</strong>：对<strong>指定类型的列</strong>运行窗口函数</li>
</ul>
<blockquote>
<p><strong>窗口函数:</strong></p>
<p>min_rank  # 排序，并列时，其他序号延号</p>
<p>dense_rank  #无缝排序</p>
<p>row_number # 排序。并列时将并列数在前的序号在前</p>
<p>percent_rank  # 把数据在[0,1]中重组，并排序</p>
<p>lead  # 把除第一个值以外的所有元素提前，最后一位为NA</p>
<p>lag  # 把除最后一位以外的所有数据延后，第一个元素为NA</p>
<p>between()  # 数据在a、b之间</p>
<p>ntile  # 把数据分为n分</p>
<p>cute_dist  # 累计分布</p>
<hr>
<p><strong>cummean  # 累积mean函数</strong></p>
<p>cumsum   # 累积sum函数</p>
<p>cusmax   # 累积max函数</p>
<p>cusmin   # 累积min函数</p>
<p>cumall  # 累积all函数</p>
<p>cumany   # 累积any函数</p>
<p>cumprod  # 累计prod函数</p>
<p>pmax  # 针对元素的max函数；返回输入中最大的值，并将其长度自动扩大到输入中长度最大的那个向量</p>
<p>pmin  # 针对元素的min函数</p>
</blockquote>
<p>​</p>
<p><br></p>
<h3 id="计算并删除其他列"><a href="#计算并删除其他列" class="headerlink" title="计算并删除其他列"></a>计算并删除其他列</h3><ul>
<li><strong>transmute(df, var3=var1+var2)</strong>：该函数扩展新变量的同时，将<strong>删除原始变量</strong> ；常伴有<strong>na.rm=T</strong></li>
</ul>
<blockquote>
<p>na.rm= True 计算时排除NA值</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&gt; mutate(head(airquality),Temp=Temp - <span class="number">32</span>)</div><div class="line">  Ozone Solar.R Wind Temp Month Day</div><div class="line"><span class="number">1</span>    <span class="number">41</span>     <span class="number">190</span>  <span class="number">7.4</span>   <span class="number">35</span>     <span class="number">5</span>   <span class="number">1</span></div><div class="line"><span class="number">2</span>    <span class="number">36</span>     <span class="number">118</span>  <span class="number">8.0</span>   <span class="number">40</span>     <span class="number">5</span>   <span class="number">2</span></div><div class="line"><span class="number">3</span>    <span class="number">12</span>     <span class="number">149</span> <span class="number">12.6</span>   <span class="number">42</span>     <span class="number">5</span>   <span class="number">3</span></div><div class="line"><span class="number">4</span>    <span class="number">18</span>     <span class="number">313</span> <span class="number">11.5</span>   <span class="number">30</span>     <span class="number">5</span>   <span class="number">4</span></div><div class="line"><span class="number">5</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="number">14.3</span>   <span class="number">24</span>     <span class="number">5</span>   <span class="number">5</span></div><div class="line"><span class="number">6</span>    <span class="number">28</span>      <span class="literal">NA</span> <span class="number">14.9</span>   <span class="number">34</span>     <span class="number">5</span>   <span class="number">6</span></div><div class="line"></div><div class="line">&gt;transmute(head(airquality),Temp=Temp - <span class="number">32</span>)</div><div class="line">  Temp</div><div class="line"><span class="number">1</span>   <span class="number">35</span></div><div class="line"><span class="number">2</span>   <span class="number">40</span></div><div class="line"><span class="number">3</span>   <span class="number">42</span></div><div class="line"><span class="number">4</span>   <span class="number">30</span></div><div class="line"><span class="number">5</span>   <span class="number">24</span></div><div class="line"><span class="number">6</span>   <span class="number">34</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="排名"><a href="#排名" class="headerlink" title="排名"></a>排名</h3><ul>
<li><strong>row_number()</strong>：对于相同的值，<strong>位置在前的排名在前</strong>。</li>
<li><strong>min_rank()</strong>：对于相同的值，均<strong>显示排名较前</strong>的值。</li>
<li><strong>dense_rank()</strong>：对于相同的值，类似于<code>min_rank()</code>，均<strong>显示排名较小的值</strong>；但<strong>与后一位之间没有间隔</strong>；</li>
<li><strong>percent_rank()</strong>：将排名<strong>缩放为[0,1]</strong>之间的值</li>
<li><strong>cume_dist()</strong>：<strong>累计的分布函数</strong></li>
<li><strong>ntile(x,n)</strong>：将x划<strong>分为n个组块</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&gt; x &lt;- c(<span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="literal">NA</span>)</div><div class="line">&gt; row_number(x)</div><div class="line">[<span class="number">1</span>]  <span class="number">5</span>  <span class="number">1</span>  <span class="number">4</span>  <span class="number">2</span>  <span class="number">3</span> <span class="literal">NA</span></div><div class="line"></div><div class="line">&gt; min_rank(x)  <span class="comment"># 相同的值，排名较前的值</span></div><div class="line">[<span class="number">1</span>]  <span class="number">5</span>  <span class="number">1</span>  <span class="number">4</span>  <span class="number">2</span>  <span class="number">2</span> <span class="literal">NA</span></div><div class="line"></div><div class="line">&gt; dense_rank(x)  <span class="comment"># 相同的值，排名较前的值，但与后一位没有间隔</span></div><div class="line">[<span class="number">1</span>]  <span class="number">4</span>  <span class="number">1</span>  <span class="number">3</span>  <span class="number">2</span>  <span class="number">2</span> <span class="literal">NA</span></div><div class="line"></div><div class="line">&gt; percent_rank(x)</div><div class="line">[<span class="number">1</span>] <span class="number">1.00</span> <span class="number">0.00</span> <span class="number">0.75</span> <span class="number">0.25</span> <span class="number">0.25</span>   <span class="literal">NA</span></div><div class="line"></div><div class="line">&gt; cume_dist(x)</div><div class="line">[<span class="number">1</span>] <span class="number">1.0</span> <span class="number">0.2</span> <span class="number">0.8</span> <span class="number">0.6</span> <span class="number">0.6</span>  <span class="literal">NA</span></div><div class="line"></div><div class="line">&gt; ntile(x, <span class="number">2</span>)</div><div class="line">[<span class="number">1</span>]  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">1</span> <span class="literal">NA</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="重编码"><a href="#重编码" class="headerlink" title="重编码"></a>重编码</h3><blockquote>
<p><code>if_else()</code> &amp; <code>case_when()</code> 适合进行重编码，但缺少对象的输入，可结合<code>within()</code></p>
<p>因为recode是<strong>面向 [向量] </strong>的函数</p>
</blockquote>
<h4 id="常规编码-within"><a href="#常规编码-within" class="headerlink" title="常规编码 - within / $"></a>常规编码 - within / $</h4><ul>
<li><strong>within(x, {})</strong> ：对x中的对象做运算<ul>
<li><strong>within</strong>：能对<strong>原始数据进行修改</strong></li>
<li>with()：<strong>不能</strong>对原始数据进行修改，创建的变量<strong>只能在花括号之内有效</strong>（即使进行赋值也是如此）</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&gt; aq&lt;-with(head(airquality), &#123;   </div><div class="line">+   lOzone &lt;- log(Ozone)</div><div class="line">+   Month &lt;- factor(month.abb[Month])</div><div class="line">+   cTemp &lt;- round((Temp - <span class="number">32</span>) * <span class="number">5</span>/<span class="number">9</span>, <span class="number">1</span>)</div><div class="line">+   S.cT &lt;- Solar.R / cTemp  </div><div class="line">+   rm(Day, Temp)</div><div class="line">+   <span class="comment">#head(aq)</span></div><div class="line">+ &#125;)</div><div class="line">&gt; aq</div><div class="line"><span class="literal">NULL</span>  <span class="comment"># 显示为NULL，即aq不存在</span></div><div class="line"></div><div class="line"></div><div class="line">&gt; aq&lt;-within(head(airquality), &#123;     <span class="comment"># Notice that multiple vars can be changed</span></div><div class="line">+   lOzone &lt;- log(Ozone)</div><div class="line">+   Month &lt;- factor(month.abb[Month])</div><div class="line">+   cTemp &lt;- round((Temp - <span class="number">32</span>) * <span class="number">5</span>/<span class="number">9</span>, <span class="number">1</span>) <span class="comment"># From Fahrenheit to Celsius</span></div><div class="line">+   S.cT &lt;- Solar.R / cTemp  <span class="comment"># using the newly created variable</span></div><div class="line">+   rm(Day, Temp)</div><div class="line">+ &#125;)</div><div class="line">&gt; aq</div><div class="line">  Ozone Solar.R Wind Month      S.cT cTemp   lOzone</div><div class="line"><span class="number">1</span>    <span class="number">41</span>     <span class="number">190</span>  <span class="number">7.4</span>   May  <span class="number">9.793814</span>  <span class="number">19.4</span> <span class="number">3.713572</span></div><div class="line"><span class="number">2</span>    <span class="number">36</span>     <span class="number">118</span>  <span class="number">8.0</span>   May  <span class="number">5.315315</span>  <span class="number">22.2</span> <span class="number">3.583519</span></div><div class="line"><span class="number">3</span>    <span class="number">12</span>     <span class="number">149</span> <span class="number">12.6</span>   May  <span class="number">6.394850</span>  <span class="number">23.3</span> <span class="number">2.484907</span></div><div class="line"><span class="number">4</span>    <span class="number">18</span>     <span class="number">313</span> <span class="number">11.5</span>   May <span class="number">18.742515</span>  <span class="number">16.7</span> <span class="number">2.890372</span></div><div class="line"><span class="number">5</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="number">14.3</span>   May        <span class="literal">NA</span>  <span class="number">13.3</span>       <span class="literal">NA</span></div><div class="line"><span class="number">6</span>    <span class="number">28</span>      <span class="literal">NA</span> <span class="number">14.9</span>   May        <span class="literal">NA</span>  <span class="number">18.9</span> <span class="number">3.332205</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>Recode(var, recodes, as.factor.result, as.numeric.result=TRUE, levels) </strong>：car包中的Recode函数，用法与car包中的recode函数相同；无需通过指定car包来运行；</li>
</ul>
<blockquote>
<p>var：字符型、数值型、因子型 向量</p>
<p>recodes：<strong>字符串格式的</strong>重编码方式；即编码内容需用 <strong>引号<code>&quot; &quot;</code>包括起来</strong>，多个条件之间用<strong>分号<code>;</code>分隔</strong></p>
<ul>
<li>单个变量：<code>&quot;0=NA&quot;</code></li>
<li>一组向量：<code>&quot;c(7,8,9)=&#39;high&#39;&quot;</code></li>
<li>一组序列变量：<code>&quot;7:9=&#39;C&#39;&quot;</code></li>
<li>未匹配的值： <code>&quot;else=NA&quot;</code></li>
<li>字符串变量：<code>&quot;&#39;a&#39;=&#39;b&#39; &quot;</code>  <strong>若编码的内容为字符串格式，需要用引号括起来；而最外面的引号也是必不可少的</strong></li>
</ul>
<p>as.factor.result = T/F；当输入的var为因子格式时，默认为TRUE,否则默认为FALSE</p>
<p>as.numeric.result=T/F；当输入的var为数值格式时，默认为TRUE,否则默认为FALSE</p>
<p>levels：可选的，默认为原本的顺序</p>
</blockquote>
<p><br></p>
<ul>
<li><strong>recode(.x,  a= ‘apple’, .default = NULL, .missing = NULL)</strong>：保持原有的顺序水平；</li>
<li><strong>recode_factor(.x, …, .default = NULL, .missing = NULL, .ordered = FALSE)</strong>：</li>
</ul>
<blockquote>
<ol>
<li>.x : 进行处理的向量<ul>
<li><strong>对于数值型向量，你可以基于位置替换它</strong></li>
<li><strong>对于字符串，你可以基于字符串的名称来替换它</strong></li>
</ul>
</li>
<li>指定替换的变量为<strong>字符串</strong> <code>a = &#39;apple&#39;</code> : a为对象中要变更的值；’apple’为变更后的值</li>
<li>.default=NULL: <strong>对未匹配的值不做变更</strong>；<ul>
<li>.default=NA<em>character</em> ：<strong>用NA替换未匹配的</strong>值</li>
</ul>
</li>
</ol>
<ul>
<li>.default= ‘others’ : 可以指定替换的值</li>
<li>.default = level(x) ：支持对默认的顺序进行因子化</li>
</ul>
<ol>
<li>指定替换的变量为<strong>数值</strong> `2` =20 或 20L<ul>
<li><em>若对象x为向量<code>is.vector()</code> ，若不加L，则对于未匹配的值默认用NA替换；加L，对其他未匹配的值不做变更；</em> ？？？</li>
</ul>
</li>
<li>.missing = NULL(默认) ：对<strong>缺失值NA</strong>不做处理，<strong>默认为NA</strong>；<ul>
<li>.missing = “missing”：指定具体的值<strong>对NA进行替换</strong> </li>
</ul>
</li>
</ol>
<blockquote>
<p>若不指定替换的变量，默认按照<strong>位置顺序</strong>进行重编码；<strong>但对未匹配的值默认用NA替换</strong></p>
</blockquote>
<hr>
<p>.order=FALSE(默认)：若为TRUE，则创建<strong>有序的因子</strong></p>
<blockquote>
<p>当输入的向量是可比较的，它的因子会被重新定义为默认的</p>
</blockquote>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 指定替换的变量 - 字符串</span></div><div class="line">&gt; x &lt;- sample(c(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>), <span class="number">10</span>, replace = <span class="literal">TRUE</span>)</div><div class="line">&gt; x</div><div class="line"> [<span class="number">1</span>] <span class="string">"a"</span> <span class="string">"a"</span> <span class="string">"b"</span> <span class="string">"b"</span> <span class="string">"a"</span> <span class="string">"b"</span> <span class="string">"a"</span> <span class="string">"a"</span> <span class="string">"a"</span> <span class="string">"c"</span></div><div class="line"></div><div class="line">&gt; recode(x, a = <span class="string">"Apple"</span>)</div><div class="line"> [<span class="number">1</span>] <span class="string">"Apple"</span> <span class="string">"Apple"</span> <span class="string">"b"</span>     <span class="string">"b"</span>     <span class="string">"Apple"</span> <span class="string">"b"</span>     <span class="string">"Apple"</span> <span class="string">"Apple"</span> <span class="string">"Apple"</span> <span class="string">"c"</span>    </div><div class="line"></div><div class="line">&gt; recode(x, a = <span class="string">"Apple"</span>, .default = <span class="literal">NA_character_</span>)</div><div class="line"> [<span class="number">1</span>] <span class="string">"Apple"</span> <span class="string">"Apple"</span> <span class="literal">NA</span>      <span class="literal">NA</span>      <span class="string">"Apple"</span> <span class="literal">NA</span>      <span class="string">"Apple"</span> <span class="string">"Apple"</span> <span class="string">"Apple"</span> <span class="literal">NA</span>     </div><div class="line"></div><div class="line"><span class="comment">## 指定替换的变量 - 数值型</span></div><div class="line">&gt; x &lt;- c(<span class="number">1</span>:<span class="number">5</span>)</div><div class="line">&gt; recode(x, <span class="string">'2'</span>= <span class="number">20L</span>, <span class="string">'4'</span> = <span class="number">40L</span>)   <span class="comment"># 加上L之后，对未匹配的值不做变更</span></div><div class="line">[<span class="number">1</span>]  <span class="number">1</span> <span class="number">20</span>  <span class="number">3</span> <span class="number">40</span>  <span class="number">5</span></div><div class="line"></div><div class="line">&gt; recode(x, <span class="string">'2'</span>= <span class="number">20</span>, <span class="string">'4'</span> = <span class="number">40</span>)</div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span> <span class="number">20</span> <span class="literal">NA</span> <span class="number">40</span> <span class="literal">NA</span></div><div class="line"></div><div class="line"><span class="comment">## 若不指定替换的变量，默认按照顺序进行重编码</span></div><div class="line">&gt; recode(x, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>)    <span class="comment"># 但对未匹配的值默认用NA替换</span></div><div class="line">[<span class="number">1</span>] <span class="string">"a"</span> <span class="string">"b"</span> <span class="string">"c"</span> <span class="literal">NA</span>  <span class="literal">NA</span>  <span class="literal">NA</span> </div><div class="line"></div><div class="line"><span class="comment">#--------recode_factor------------------------------------------#</span></div><div class="line">&gt; recode_factor(factor(letters[<span class="number">1</span>:<span class="number">3</span>]), b = <span class="string">"z"</span>, c = <span class="string">"y"</span>)  <span class="comment"># 当输入的向量是可比较的，它的因子会被重新定义为默认的</span></div><div class="line">[<span class="number">1</span>] a z y</div><div class="line">Levels: z y a</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="条件编码"><a href="#条件编码" class="headerlink" title="条件编码"></a>条件编码</h4><ul>
<li><strong>if_else(cond, true_value, false_value, missing=NULL)</strong>：对于逻辑值的重编码</li>
</ul>
<blockquote>
<p>cond :  条件</p>
<p>missing = NULL(默认)； 若对缺失值替换为某个值，需指定 “x”</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 常规重编码</span></div><div class="line">leadership&lt;-within(leadership,&#123;</div><div class="line">agecat&lt;-<span class="literal">NA</span></div><div class="line">agecat[age&gt;<span class="number">75</span>] &lt;- “Elder”</div><div class="line">agecat[age&gt;=<span class="number">55</span> &amp; age&lt;=<span class="number">75</span>] &lt;- “Middle aged”</div><div class="line">agecat[age&lt;<span class="number">55</span>]&lt;-“young”</div><div class="line">&#125;)</div><div class="line"></div><div class="line"></div><div class="line">y$new&lt;- if_else(y$new&lt;=<span class="number">1</span>, <span class="number">10</span>, y$new)</div><div class="line"></div><div class="line"><span class="comment"># 搭配within使用</span></div><div class="line">within(y,&#123; </div><div class="line">  carb &lt;- if_else(carb&lt;=<span class="number">2</span>,<span class="number">20</span>,carb)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>case_when(cond ~ “”, TRUE ~ “”)</strong>：<strong>多条件的重编码</strong><ul>
<li>类同于SQL的case when；多条件之间<strong>按顺序</strong>进行执行。</li>
</ul>
</li>
</ul>
<blockquote>
<p>~ ：表示<strong>赋值</strong></p>
<p>TRUE ：类同于 Else的功能</p>
<p>配合<code>list()</code> 与 <code>!!!</code>，将语句进行<strong>拼接</strong>，然后<strong>执行</strong></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">x &lt;- <span class="number">1</span>:<span class="number">10</span></div><div class="line">case_when(</div><div class="line">  x %% <span class="number">3</span> == <span class="number">0</span> ~ <span class="string">"fizz buzz"</span>,</div><div class="line">  x %% <span class="number">5</span> == <span class="number">0</span> ~ <span class="string">"fizz"</span>,</div><div class="line">  x %% <span class="number">7</span> == <span class="number">0</span> ~ <span class="string">"buzz"</span>,</div><div class="line">  <span class="literal">TRUE</span> ~ as.character(x)  </div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment">## 创建一个新变量</span></div><div class="line">starwars %&gt;%</div><div class="line">  select(name:mass, gender, species) %&gt;%</div><div class="line">  mutate(</div><div class="line">    type = case_when(</div><div class="line">      height &gt; <span class="number">200</span> | mass &gt; <span class="number">200</span> ~ <span class="string">"large"</span>,</div><div class="line">      species == <span class="string">"Droid"</span>        ~ <span class="string">"robot"</span>,</div><div class="line">      <span class="literal">TRUE</span>                      ~  <span class="string">"other"</span></div><div class="line">    )</div><div class="line">  )</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 配合list() 与 !!!，将语句进行拼接，然后执行</span></div><div class="line">patterns &lt;- list(        <span class="comment"># 先将语句拼接</span></div><div class="line">  <span class="literal">TRUE</span> ~ as.character(x),</div><div class="line">  x %%  <span class="number">5</span> == <span class="number">0</span> ~ <span class="string">"fizz"</span>,</div><div class="line">  x %%  <span class="number">7</span> == <span class="number">0</span> ~ <span class="string">"buzz"</span>,</div><div class="line">  x %% <span class="number">35</span> == <span class="number">0</span> ~ <span class="string">"fizz buzz"</span></div><div class="line">)</div><div class="line">case_when(!!! patterns)   <span class="comment"># 用 !!! 执行</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h3><h4 id="检查与判断"><a href="#检查与判断" class="headerlink" title="检查与判断"></a>检查与判断</h4><ul>
<li><strong>is.na(x)</strong>：逻辑判断</li>
<li><strong>colSums(is.na(x))</strong>：求该列缺失值的数量</li>
<li><strong>mean(is.na(x))</strong>：求该列缺失值的比例</li>
<li><strong>is.nan(x)</strong>：判断不可能值</li>
<li><strong>is.infinite(x)</strong> ：判断无穷值</li>
</ul>
<p><br></p>
<h4 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h4><ul>
<li><strong>na.rm=T</strong>：在计算之前将缺失值移除，可用在<strong>函数内部</strong></li>
<li><strong>na.omit(x)</strong>： 移除所有含缺失值所在的行 [删除整行]</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> <span class="comment"># 用来存储没有缺失值的数据</span></div><div class="line">newdata &lt;- na.omit(mydata)</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="缺失值重编码"><a href="#缺失值重编码" class="headerlink" title="缺失值重编码"></a>缺失值重编码</h4><ul>
<li><strong>na_if(x, y)</strong>：把<strong>对象x中的y替换为NA</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; x &lt;- c(<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>)</div><div class="line">[<span class="number">1</span>]  <span class="number">1</span> -<span class="number">1</span>  <span class="number">0</span> <span class="number">10</span></div><div class="line"></div><div class="line">&gt; na_if(x,<span class="number">0</span>)</div><div class="line">[<span class="number">1</span>]  <span class="number">1</span> -<span class="number">1</span> <span class="literal">NA</span> <span class="number">10</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>coalesce(x,y)</strong>：把对象x中的NA替换为y</li>
</ul>
<blockquote>
<p>x, y ：均为<strong>向量</strong></p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 把x中的NA替换为y</span></div><div class="line">&gt; x &lt;- sample(c(<span class="number">1</span>:<span class="number">5</span>, <span class="literal">NA</span>, <span class="literal">NA</span>, <span class="literal">NA</span>)); x</div><div class="line">[<span class="number">1</span>]  <span class="number">5</span>  <span class="number">3</span> <span class="literal">NA</span>  <span class="number">4</span>  <span class="number">2</span> <span class="literal">NA</span>  <span class="number">1</span> <span class="literal">NA</span>  </div><div class="line">&gt; coalesce(x, <span class="number">0L</span>) </div><div class="line">[<span class="number">1</span>] <span class="number">5</span> <span class="number">3</span> <span class="number">0</span> <span class="number">4</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></div><div class="line"></div><div class="line"><span class="comment"># 将NA匹配为对应位置的值  （y, z 两者长度必须相同）</span></div><div class="line">&gt; y &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NA</span>, <span class="literal">NA</span>, <span class="number">5</span>)</div><div class="line">&gt; z &lt;- c(<span class="literal">NA</span>, <span class="literal">NA</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</div><div class="line">&gt; coalesce(y, z)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></div><div class="line"></div><div class="line"><span class="comment"># 配合list() 与 !!!，将语句进行拼接，然后执行</span></div><div class="line">vecs &lt;- list(</div><div class="line">  c(<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NA</span>, <span class="literal">NA</span>, <span class="number">5</span>),</div><div class="line">  c(<span class="literal">NA</span>, <span class="literal">NA</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</div><div class="line">)</div><div class="line">coalesce(!!! vecs)</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li><strong>pmin/pmax(.., na.rm=FALSE)</strong>：返回输入中最小/最大值的向量组合，并将其长度自动扩大到输入中长度最大的那个向量<ul>
<li>min/max()：只返回单一长度的值</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; pmax(5:1,10) </div><div class="line">[1] 10 10 10 10 10</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="概述函数-summairse"><a href="#概述函数-summairse" class="headerlink" title="概述函数 - summairse"></a>概述函数 - summairse</h2><ul>
<li><strong>summarise(iris, avg=mean(Sepal.Length))</strong> ：对数据进行概述，并<strong>创建新的子集</strong>  （将数据概括为单行数值）</li>
<li><strong>summarise_all(.tbl, .funs, …)</strong>：对<strong>每一列</strong>运行概述概述<ul>
<li><strong>summarise_each(iris, funs(mean))</strong> ：对<strong>每一列</strong>运行概述函数</li>
</ul>
</li>
<li><strong>summarise_at(.tbl, .vars, .funs, …, .cols=NULL)</strong>：对<strong>指定的列</strong>运行概述函数<ul>
<li><strong>summarise_at(mtcars, vars(hp,mpg), mean, …, .cols=NULL)</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>vars() : 表示需要进行概述的列</p>
<p><strong>.funs的用法</strong></p>
<ul>
<li>直接在函数中写明需要运行的函数 <code>summarise(., vars(), mean)</code></li>
<li>结合funs写出调用的函数 <code>summarise(., vars(), funs(mean))</code></li>
</ul>
</blockquote>
<ul>
<li><strong>summarise_if(.tbl, .predicate, .funs)</strong>：对<strong>指令类型的列</strong>运行概述函数</li>
</ul>
<blockquote>
<p><strong>funs的用法</strong></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; summarise_all(df1[,-<span class="number">1</span>],funs(mean,sum))  <span class="comment"># 若出现两个及以上的函数，列名中自动添加后缀</span></div><div class="line">&gt; summarise_all(df1[,-<span class="number">1</span>],funs(sum(.*<span class="number">2</span>))) <span class="comment"># 所有数据用.表示</span></div><div class="line">&gt; summarise_all(df1[,-<span class="number">1</span>],funs(medi=median)) <span class="comment"># 指定得到的列后缀名</span></div><div class="line">&gt; summarise_all(df1[,-<span class="number">1</span>],funs(<span class="string">"in"</span>=median)) <span class="comment"># 或者加引号 (因为in在R中表示其他含义)</span></div><div class="line">&gt; mutate_all(df1[,-<span class="number">1</span>],funs(.^<span class="number">2</span>))</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p><br></p>
<blockquote>
<p>min / max / mean / median  / sd / var /  sum / IQR (向量的四分位距离)</p>
<p> n （向量中元素的个数）/ n_distinct （不同元素的个数）</p>
<p>first / last / nth （向量的第n个值）</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">name1 &lt;- c(<span class="string">"Bob"</span>,<span class="string">"Mary"</span>,<span class="string">"Jane"</span>,<span class="string">"Kim"</span>)</div><div class="line">weight &lt;- c(<span class="number">60</span>,<span class="number">65</span>,<span class="number">45</span>,<span class="number">55</span>)</div><div class="line">height &lt;- c(<span class="number">170</span>,<span class="number">165</span>,<span class="number">140</span>,<span class="number">135</span>)</div><div class="line">weta &lt;- <span class="number">1</span>:<span class="number">4</span></div><div class="line">df1 &lt;- data.frame(name1,weight,height,weta);df1</div><div class="line"></div><div class="line"><span class="comment">## 需指定要进行计算的列</span></div><div class="line">summarise(df1,avg_weight=mean(weight),avg_height=mean(height)) </div><div class="line"></div><div class="line"><span class="comment">## 对选出来的 [每一列] 都进行计算</span></div><div class="line">summarise_all(select(df1,-<span class="number">1</span>), mean)</div><div class="line"></div><div class="line"><span class="comment">## 配合vars函数，一次选择多列</span></div><div class="line">summarise_at(df1,vars(weight,height,weta),mean) </div><div class="line">summarise_at(df1,vars(weight:weta),mean)</div><div class="line">u &lt;- c(<span class="string">"weight"</span>,<span class="string">"height"</span>)</div><div class="line">summarise_at(df1,vars(one_of(u)),mean) <span class="comment"># 可以接字符串向量</span></div><div class="line">summarise_at(df1,u,mean) <span class="comment"># 也可以直接接字符串向量</span></div><div class="line">summarise_at(df1,u,mean,trim=<span class="number">1</span>) <span class="comment"># mean的参数可以接在后面</span></div><div class="line"></div><div class="line">summarise_at(df1,vars(contains(<span class="string">"eig"</span>)),mean) <span class="comment"># 匹配含有的</span></div><div class="line">summarise_at(df1,vars(matches(<span class="string">".t."</span>)),mean) <span class="comment"># 使用正则表达式</span></div><div class="line">summarise_at(df1,vars(starts_with(<span class="string">"w"</span>)),mean) <span class="comment"># 匹配以此为开头的</span></div><div class="line">summarise_at(df1,vars(ends_with(<span class="string">"ht"</span>)),mean) <span class="comment"># 匹配以此为结尾的</span></div><div class="line">summarise_at(df1[,-<span class="number">1</span>],vars(everything()),mean) <span class="comment"># 选择所有列</span></div><div class="line"></div><div class="line"><span class="comment">## 检验出所有是数值的列，全部求均值</span></div><div class="line">summarise_if(df1,is.numeric,mean)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><p><strong>count(iris, Species [, wt=Sepal.Length])</strong> ：计算变量中每一个<strong>特定值的行数/频率/求和</strong> （带或不带权重）</p>
<ul>
<li>若出现wt，表示进行 <strong>[求和]</strong> ；</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## wt=""  可选；若缺失，则计算频率</span></div><div class="line">count(iris, Species)  <span class="comment"># 分组计算Species列中各类别的频量；类似于基本函数包中的table函数</span></div><div class="line"></div><div class="line"><span class="comment">## wt="",若指定某一列，则会通过计算非缺失值的总和来比对权重(weighted)；</span></div><div class="line"><span class="comment"># wt = var2 ， 表示按var中的类别来分组，计算var2中未缺失值的对应的 [求和]</span></div><div class="line">count(iris, Species, wt=Sepal.Length)  <span class="comment"># 即按Species分组后，求对应Sepal.Length中的值的总和</span></div><div class="line">--等价于  iris %&gt;% group_by(., Species) %&gt;% summarize(., sum(Sepal.Length))</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## sort = False</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h3><ul>
<li><strong>length(x)</strong>：返回一组<strong>向量（包括列表）或因子的长度</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 返回对象的个数 或者 某个列的的观测值行数</span></div><div class="line">length(object/data$col)</div><div class="line"></div><div class="line"><span class="comment"># 返回非空置的行数</span></div><div class="line">length(na.omit(object/data$col))</div><div class="line"></div><div class="line"><span class="comment"># 返回对象的唯一值的行数  </span></div><div class="line">length(unique(data$col/object))  <span class="comment"># 等价于 n_distinct()</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>nrow() / ncol()</strong>：总行数/总列数</li>
</ul>
<ul>
<li><strong>n()</strong>：返回观测行的行数，<strong>不能单独使用</strong>（可被用于 <code>summarise()、mutate()、filter()</code> ）</li>
<li><strong>n_distinct(x, na.rm=FALSE)</strong>：返回不重复的行数 <ul>
<li><strong>sum(!is.na())</strong>：计算非空值的行数</li>
</ul>
</li>
</ul>
<p><br></p>
<h3 id="分布"><a href="#分布" class="headerlink" title="分布"></a>分布</h3><ul>
<li><strong>mean(x, na.rm=FALSE)</strong> ：返回均值； <ul>
<li><strong>mean(!is.na())</strong> ：非空值的均值</li>
</ul>
</li>
<li><strong>median(x, na.rm=FASLE)</strong>：返回中位数</li>
<li><strong>sum(x, na.rm=FALSE)</strong>：返回求和</li>
<li><strong>range(object)</strong>：值域</li>
<li><strong>colSums(x) / rowSums(x)</strong>：各列/行求和</li>
<li><strong>colMeans(x) / rowMeans(x)</strong>：各列/行求均值</li>
</ul>
<p><br></p>
<h3 id="位置与序列"><a href="#位置与序列" class="headerlink" title="位置与序列"></a>位置与序列</h3><ul>
<li><strong>first(x)/last(x)</strong>：最前/后的值</li>
<li><strong>nth(x, n)</strong>：从开始数的第n个值</li>
<li><strong>quantile(x, probs=seq(0, 1, 0.25), na.rm=FALSE)</strong>：显示x中处于[0,0.25,0.5,0.75,1]的值</li>
</ul>
<blockquote>
<p>probs = seq(0,1, 0.25) 或者 = c(0.25,0.5) ：指定要显示的所处位置的值</p>
</blockquote>
<ul>
<li><strong>min/max(x, na.rm=FALSE)</strong>：返回最大/最小值</li>
</ul>
<p><br></p>
<h3 id="趋势"><a href="#趋势" class="headerlink" title="趋势"></a>趋势</h3><ul>
<li><strong>IQR()</strong>：四分位距离</li>
<li><strong>var()</strong>：方差</li>
<li><strong>sd()</strong>：标准差</li>
<li><strong>mad()</strong>：绝对均方差</li>
</ul>
<p><br></p>
<h3 id="数字处理"><a href="#数字处理" class="headerlink" title="数字处理"></a>数字处理</h3><ul>
<li><strong>options(digits=7)</strong> ：默认有效位数为7位</li>
<li><strong>trunc(x)</strong>：取整  <code>trunc(3.531) [1] 3</code><ul>
<li><strong>floor(x)</strong>：向下取整</li>
<li><strong>ceiling(x)</strong>：向上取整</li>
</ul>
</li>
<li><strong>sigif(x, digits=n)</strong>：指定最小值的有效位数</li>
<li><strong>abs(x)</strong>：绝对值</li>
<li><strong>x %% y</strong> ：求余数</li>
<li><strong>x^n</strong>：幂次方</li>
<li><strong>exp(x)</strong>：指数</li>
<li><strong>ln(x) / log(x, y)</strong>：对数</li>
<li><strong>sqrt(x)</strong>：平方根</li>
</ul>
<p><br></p>
<h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><ul>
<li><strong>group_by(.data, …, add=FALSE)</strong>：根据Species进行分组<ul>
<li>group_by(mtacrs, cyl,vs )</li>
</ul>
</li>
</ul>
<blockquote>
<p>… ： 表示用于分组的列名；</p>
<p>add= FALSE(默认) </p>
<ul>
<li>FALSE，表示会覆盖原来的分组，相当于对源数据重新分组；</li>
<li>若为TRUE,则不覆盖，相当于在原来的基础上在进行分组；</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">## 先对mtcars按cyl 进行分组</span></div><div class="line">&gt; by_cyl &lt;- mtcars %&gt;% groupby(cyl)  </div><div class="line">&gt;</div><div class="line">&gt; <span class="comment"># --------add=FALSE (默认)-------------------------#</span></div><div class="line">&gt; by_cyl %&gt;%  group_by(vs, am) %&gt;%   <span class="comment"># add默认为FALSE，即对 mtcars进行 vs,am 两个变量进行分组；</span></div><div class="line">&gt;   summarise_at(.,vars(new),funs(mean) )</div><div class="line">&gt; <span class="comment"># A tibble: 4 x 3</span></div><div class="line">&gt; <span class="comment"># Groups:   vs [?]</span></div><div class="line">&gt;      vs    am      new</div><div class="line">&gt;   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;</div><div class="line">&gt; <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span> <span class="number">1.737751</span></div><div class="line">&gt; <span class="number">2</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">2.115355</span></div><div class="line">&gt; <span class="number">3</span>     <span class="number">1</span>     <span class="number">0</span> <span class="number">1.404061</span></div><div class="line">&gt; <span class="number">4</span>     <span class="number">1</span>     <span class="number">1</span> <span class="number">1.177520</span></div><div class="line">&gt;</div><div class="line">&gt; <span class="comment"># 与如上等价</span></div><div class="line">&gt; &gt; group_by(mtcars, vs,am) %&gt;% summarise_at(.,vars(new),funs(mean) )</div><div class="line">&gt; <span class="comment"># A tibble: 4 x 3</span></div><div class="line">&gt; <span class="comment"># Groups:   vs [?]</span></div><div class="line">&gt;      vs    am      new</div><div class="line">&gt;   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;</div><div class="line">&gt; <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span> <span class="number">1.737751</span></div><div class="line">&gt; <span class="number">2</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">2.115355</span></div><div class="line">&gt; <span class="number">3</span>     <span class="number">1</span>     <span class="number">0</span> <span class="number">1.404061</span></div><div class="line">&gt; <span class="number">4</span>     <span class="number">1</span>     <span class="number">1</span> <span class="number">1.177520</span></div><div class="line">&gt;</div><div class="line">&gt; <span class="comment"># --------add=TRUE ----------------------#</span></div><div class="line">&gt; &gt; by_cyl %&gt;%  group_by(vs, am, add=<span class="literal">TRUE</span>) %&gt;% </div><div class="line">&gt; +   summarise_at(.,vars(new),funs(mean) )</div><div class="line">&gt; <span class="comment"># A tibble: 7 x 4</span></div><div class="line">&gt; <span class="comment"># Groups:   cyl, vs [?]    # 分组变量有3个</span></div><div class="line">&gt;     cyl    vs    am      new</div><div class="line">&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;</div><div class="line">&gt; <span class="number">1</span>     <span class="number">4</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">1.414214</span></div><div class="line">&gt; <span class="number">2</span>     <span class="number">4</span>     <span class="number">1</span>     <span class="number">0</span> <span class="number">1.276142</span></div><div class="line">&gt; <span class="number">3</span>     <span class="number">4</span>     <span class="number">1</span>     <span class="number">1</span> <span class="number">1.177520</span></div><div class="line">&gt; <span class="number">4</span>     <span class="number">6</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">2.149830</span></div><div class="line">&gt; <span class="number">5</span>     <span class="number">6</span>     <span class="number">1</span>     <span class="number">0</span> <span class="number">1.500000</span></div><div class="line">&gt; <span class="number">6</span>     <span class="number">8</span>     <span class="number">0</span>     <span class="number">0</span> <span class="number">1.737751</span></div><div class="line">&gt; <span class="number">7</span>     <span class="number">8</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">2.414214</span></div><div class="line">&gt;</div><div class="line">&gt; &gt; group_by(mtcars, cyl,vs,am) %&gt;% summarise_at(.,vars(new),funs(mean) )</div><div class="line">&gt; <span class="comment"># A tibble: 7 x 4 </span></div><div class="line">&gt; <span class="comment"># Groups:   cyl, vs [?]    # 分组变量有3个</span></div><div class="line">&gt;     cyl    vs    am      new    </div><div class="line">&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;</div><div class="line">&gt; <span class="number">1</span>     <span class="number">4</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">1.414214</span></div><div class="line">&gt; <span class="number">2</span>     <span class="number">4</span>     <span class="number">1</span>     <span class="number">0</span> <span class="number">1.276142</span></div><div class="line">&gt; <span class="number">3</span>     <span class="number">4</span>     <span class="number">1</span>     <span class="number">1</span> <span class="number">1.177520</span></div><div class="line">&gt; <span class="number">4</span>     <span class="number">6</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">2.149830</span></div><div class="line">&gt; <span class="number">5</span>     <span class="number">6</span>     <span class="number">1</span>     <span class="number">0</span> <span class="number">1.500000</span></div><div class="line">&gt; <span class="number">6</span>     <span class="number">8</span>     <span class="number">0</span>     <span class="number">0</span> <span class="number">1.737751</span></div><div class="line">&gt; <span class="number">7</span>     <span class="number">8</span>     <span class="number">0</span>     <span class="number">1</span> <span class="number">2.414214</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p>&gt;</p>
<blockquote>
</blockquote>
<ul>
<li><strong>ungroup(iris)</strong>：<strong>移除</strong>数据框的分组信息</li>
<li><strong>group_by_all()</strong>：</li>
<li><strong>group_by_at(.tbl, .vars, .funs = list(), …, .add = FALSE)</strong>：<ul>
<li>group_by_at(df, vars(accept,weight)) %&gt;% summarise(., var=mean(height),count=n())</li>
</ul>
</li>
</ul>
<blockquote>
<p>group_by_at()  与 group_by 的区别，仅在与at中将分组的变量用 <code>vars()</code> 包含起来，利于查看</p>
</blockquote>
<ul>
<li><strong>group_by_if()</strong>：</li>
<li><strong>iris %&gt;% group_by(., Species) %&gt;% summarize(., sum(Sepal.Length))</strong>：对<strong>每一个分组</strong>分别进行<strong>概述</strong>计算</li>
<li>iris %&gt;% group_by(., Species) %&gt;% <strong>mutate(., …)</strong>：按组计算<strong>新变量</strong></li>
</ul>
<p><br></p>
<h3 id="分组-amp-概述函数"><a href="#分组-amp-概述函数" class="headerlink" title="分组&amp;概述函数"></a>分组&amp;概述函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="plyr-分隔-操作-合并"><a href="#plyr-分隔-操作-合并" class="headerlink" title="plyr - 分隔-操作-合并"></a>plyr - 分隔-操作-合并</h2><blockquote>
<p>用来切割、计算、合并数据的包</p>
<p>在一个函数内同时解决<strong>spilt-apply-combine</strong>的三个步骤</p>
<ol>
<li>Spilt：把要处理的数据分割成小的片段</li>
<li>Apply：对每个小片段进行操作</li>
<li>Combine:把片段重新组合</li>
</ol>
</blockquote>
<ul>
<li><strong>a*plyr(.data, .margins, .fun, …, .progress = “none”)</strong> </li>
<li><strong>d*plyr(.data, .variables, .fun, …, .progress = “none”)</strong> </li>
<li><strong>l*plyr(.data, .fun, …, .progress = “none”)</strong></li>
</ul>
<blockquote>
<p>首字母代表输入的待处理的数据格式，第二个字母-输出的数据格式；</p>
</blockquote>
<p><br></p>
<ul>
<li><strong>ddply</strong>(.data, .variables, .fun = NULL, …, .progress = “none”,  .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)：以ddplyr为例<ul>
<li>ddply()函数会自动的<strong>将分割后的每一小部分的计算结果汇总</strong>，以<strong>data.frame的格式保存</strong>。</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## .data, 要操作的原始数据集</span></div><div class="line"><span class="comment">## .variables, 是按照某个/几个变量，对数据集 [分割]; 比如按照year对数据集分割，可以写成.(year)的形式</span></div><div class="line"><span class="comment">## .fun, 具体执行操作的函数，对分割后的 [每一个子数据集，调用该函数]</span></div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h3><h4 id="重复和循环"><a href="#重复和循环" class="headerlink" title="重复和循环"></a>重复和循环</h4><ul>
<li><strong>for结构</strong> ：<code>for (var in seq) statement</code><ul>
<li>循环执行某语句statement，直到某个变量var的值不在包含在序列seq中为止</li>
</ul>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">10</span>) print(<span class="string">"hello"</span>)</div></pre></td></tr></table></figure>
<ul>
<li><strong>while结构</strong> ：<code>while (cond) statment</code><ul>
<li>必须确保cond中的条件语句能【被改变】（即它在某个时刻不在为真），否则循环将永不停止</li>
</ul>
</li>
</ul>
<p><br></p>
<h4 id="条件执行"><a href="#条件执行" class="headerlink" title="条件执行"></a>条件执行</h4><ul>
<li><strong>if-else结构</strong>：<code>if (cond) statement</code> 或者 <code>for (cond) statement1 else statement2</code></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!is.factor(grade)) gerade &lt;- as.factor(grade) <span class="keyword">else</span> print(<span class="string">"Grade already is a factor"</span>)</div></pre></td></tr></table></figure>
<ul>
<li><strong>ifelse结构</strong>：<code>ifelse(cond, statement1, statement2)</code></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ifelse(sorce&gt;<span class="number">0.5</span>, print(<span class="string">"Passed"</span>), print(<span class="string">"Failed"</span>))</div><div class="line">outcome &lt;- ifelse(socre&gt;<span class="number">0.5</span>, <span class="string">"Passed"</span>, <span class="string">"Failed"</span>)</div></pre></td></tr></table></figure>
<ul>
<li><strong>switch结构</strong>：根据一个表达式的值<strong>选择</strong>语句执行<code>switch(expr,...)</code></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">feelings &lt;- c(<span class="string">"sad"</span>, <span class="string">"afraid"</span>)</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> feelings)</div><div class="line">  print(</div><div class="line">  	<span class="keyword">switch</span>(i,</div><div class="line">          happy  = <span class="string">"I am glad you are happpy"</span>,  <span class="comment"># 用逗号分隔</span></div><div class="line">          afraid = <span class="string">"There is nothing to fear"</span>,</div><div class="line">          sad    = <span class="string">"Cheer Up"</span>,</div><div class="line">           angry = <span class="string">"Calm down now"</span></div><div class="line">          )</div><div class="line">  )</div><div class="line"><span class="comment">## expr之后的…是expr的可能取值，后接等号（=），表示执行的行为</span></div><div class="line"><span class="comment">## switch语句中，不同条件末尾要有 [逗号]</span></div><div class="line"><span class="comment">## 若expr为文本形式，输入时需加 [引号]</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="逻辑判断"><a href="#逻辑判断" class="headerlink" title="逻辑判断"></a>逻辑判断</h4><ul>
<li><strong>which()</strong>： 返回为真的逻辑对象，允许对数组array使用</li>
</ul>
<p><br></p>
<h3 id="自编函数"><a href="#自编函数" class="headerlink" title="自编函数"></a>自编函数</h3><ul>
<li><strong>结构</strong></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">myfunction &lt;- <span class="keyword">function</span>(arg1, arg2, <span class="keyword">...</span>)&#123;</div><div class="line">  statements</div><div class="line">  <span class="keyword">return</span>(object)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="数据拆分"><a href="#数据拆分" class="headerlink" title="数据拆分"></a>数据拆分</h2><ul>
<li><strong>pretty(x, n)</strong> ：将<strong>连续型变量</strong>x分给为<strong>n个区间</strong>；</li>
<li><strong>cut(x, n,[order_result=TRUE])</strong>：将连续型变量x分割成有<strong>n个水平的因子</strong></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;dplyr：轻松地处理data.frame, data.table以及多种数据库为基础的数据，实现选择、变换、分组等&lt;/li&gt;
&lt;li&gt;plry：轻松地在vector, list, data.frame之间做分组变换，实现&lt;strong&gt;拆分、变换、合并&lt;/strong&gt;的操作&lt;/li&gt;
&lt;li&gt;reshpae2：横向、纵向做数据变换&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="软件应用" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/r/"/>
    
    
      <category term="软件应用" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
      <category term="r" scheme="http://yoursite.com/tags/r/"/>
    
  </entry>
  
  <entry>
    <title>《麦肯锡精英的39个工作习惯》_摘抄</title>
    <link href="http://yoursite.com/2017/07/23/%E3%80%8A%E9%BA%A6%E8%82%AF%E9%94%A1%E7%B2%BE%E8%8B%B1%E7%9A%8439%E4%B8%AA%E5%B7%A5%E4%BD%9C%E4%B9%A0%E6%83%AF%E3%80%8B_%E6%91%98%E6%8A%84/"/>
    <id>http://yoursite.com/2017/07/23/《麦肯锡精英的39个工作习惯》_摘抄/</id>
    <published>2017-07-22T16:00:00.000Z</published>
    <updated>2017-08-13T02:50:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>《麦肯锡精英的39个工作习惯》 _ 大岛祥誉</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_麦肯锡精英的39个工作习惯.jpg" alt=""></p>
<blockquote>
<p>“解决问题的基本在于保持疑问。怀疑这个结论是不是最佳结论。这样一来就能够找到解决问题的线索。” —— 大前研一</p>
</blockquote>
<a id="more"></a>
<h2 id="重视”成果”"><a href="#重视”成果”" class="headerlink" title="重视”成果”"></a>重视”成果”</h2><blockquote>
<p>问题究竟是什么？</p>
<ol>
<li>掌握真正的问题</li>
<li>对问题进行整理</li>
<li>收集信息</li>
<li>提出假设</li>
<li>验证假设</li>
<li>思考解决办法</li>
<li>实行解决办法</li>
</ol>
</blockquote>
<ol>
<li><p>保持”从零开始”。考虑什么才是真正的问题？这项问题今后有没有继续的必要？</p>
</li>
<li><p>分清”重视效率” 还是 “重视思考”。时常思考，<strong>自己需不需要在这个事情上花费这么多时间。</strong></p>
<blockquote>
<p>工作能力不强的人，往往本末倒置。在别人看来，往往不理解 “为什么他要在这样的工作上浪费那么多时间”。——思考自己有没有这样的事情</p>
</blockquote>
<ul>
<li>追求效率，指的是那些花费时间毫无意义，越快做完越能够提高生产效率的工作</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="将要点分为”三部分”"><a href="#将要点分为”三部分”" class="headerlink" title="将要点分为”三部分”"></a>将要点分为”三部分”</h2><ol>
<li><p>摸清<strong>上司的类型</strong>。[ 去回顾 <strong>《向上管理》</strong>]</p>
<ul>
<li>情感型 or 理智型；</li>
<li>单独型 or 复合型</li>
</ul>
<blockquote>
<p>情感型：直率、感情丰富、重视共鸣；不知追求结果同样重视过程，用自己的感性来描述自己的经验和方法</p>
<p>理智型：自制、重视理论、准备周全、讨厌借口和浪费时间，对逻辑讨论有反应</p>
</blockquote>
<p>|      | 情感型                  | 理智型                |<br>| —- | ——————– | —————— |<br>| 谈话准备 | 正是开始对话之前，寒暄几句        | 直奔主题               |<br>| 谈话节奏 | 把节奏交给对方，配合对方的节奏进行交流  | 自己掌握               |<br>| 谈话内容 | 可以坦白说出自己的请求 或者让对方来决定 | 由自己展开内容；插穿假设的方式来沟通 |</p>
</li>
<li><p><strong>第一句话</strong>应该表明<strong>交谈的主题</strong>。 对于这个主题的事项，上司会根据他的理解来安排处理的时间。</p>
<ul>
<li>关于XX事情，可以占用您一分钟时间吗？</li>
</ul>
</li>
<li><p><strong>邮件</strong>使用。<strong>主题 + 简洁 + 尽快回复</strong></p>
<ul>
<li>邮件要尽快回复</li>
<li>回复内容需要一些时间考虑，也应该立即回复一封邮件说明 “我要考虑一下，明天给你回复”</li>
<li>明确邮件主题。</li>
</ul>
<blockquote>
<p>邮件要尽可能简洁，为了使对方在最短的时间了解邮件的要点。</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h2 id="将主张放在疑问里"><a href="#将主张放在疑问里" class="headerlink" title="将主张放在疑问里"></a>将主张放在疑问里</h2><ol>
<li>灵活运用面谈、电话和邮件。针对不同的情况选择不同的沟通方式。<ul>
<li><strong><u>负面的 或 紧急的</u> 信息一定要<u>当面沟通</u>，其次为电话。</strong>千万不要用邮件。 邮件无法传达紧张感与迫切感</li>
<li><strong>打电话时慢点说话，等待对方的反应。</strong>  <u>对方还要讲下一句话，而自己常常却插了进去。以为对方讲完了。</u></li>
<li>打电话之前思考，”这件事情真的有打电话的必要吗？”</li>
<li>决定打电话之前，自己先理一下思路</li>
</ul>
</li>
<li>等对方把话说完之后，自己再开口。<strong>说话慢一点，再慢一点。</strong></li>
<li><strong>将自己的主张放在疑问里</strong>，以此<strong>引导对方自己说出你要的结果</strong><ul>
<li>通过 <strong>“提问”</strong> 的方式引导对方的思维；</li>
<li>而该 问题的答案是你心里已经知道的结果</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="认可、共鸣、激励"><a href="#认可、共鸣、激励" class="headerlink" title="认可、共鸣、激励"></a>认可、共鸣、激励</h2><ol>
<li>明确会议的 <strong>“目的”</strong> 与 <strong>“目标状态”</strong>。<ul>
<li>目的：开展会议的原因(why)</li>
<li>目标状态：会议要达到的结果</li>
</ul>
</li>
<li>将会议的 “目的”与”目标状态” <strong>写在会议的白板上/显眼的地方</strong></li>
</ol>
<p><br></p>
<h2 id="控制感情"><a href="#控制感情" class="headerlink" title="控制感情"></a>控制感情</h2><ol>
<li><p>用5分钟时间自省，最适合用来进行 <strong>专注性思考</strong> 的训练</p>
<blockquote>
<p>5分钟后你等的人出现了，你的思考没有得出任何结论的情况下被中断了。看上去好像浪费了时间，但实际上你的发散思维在后台已经开启。</p>
</blockquote>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《麦肯锡精英的39个工作习惯》 _ 大岛祥誉&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_麦肯锡精英的39个工作习惯.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“解决问题的基本在于保持疑问。怀疑这个结论是不是最佳结论。这样一来就能够找到解决问题的线索。” —— 大前研一&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>《麦肯锡精英的48个工作习惯》_摘抄</title>
    <link href="http://yoursite.com/2017/07/22/%E3%80%8A%E9%BA%A6%E8%82%AF%E9%94%A1%E7%B2%BE%E8%8B%B1%E7%9A%8448%E4%B8%AA%E5%B7%A5%E4%BD%9C%E4%B9%A0%E6%83%AF%E3%80%8B_%E6%91%98%E6%8A%84/"/>
    <id>http://yoursite.com/2017/07/22/《麦肯锡精英的48个工作习惯》_摘抄/</id>
    <published>2017-07-21T16:00:00.000Z</published>
    <updated>2017-08-13T02:52:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>《麦肯锡精英的48个工作习惯》_户塚隆将</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_麦肯锡精英的48个工作习惯01.jpg" width="50%"></p>
<a id="more"></a>
<h2 id="人际关系"><a href="#人际关系" class="headerlink" title="人际关系"></a>人际关系</h2><ol>
<li><strong>相处时注意变换场合。</strong>这样利于加深对彼此的认识。</li>
<li><strong>不管多忙，每周都要跟工作无关的人见一面</strong>；和他们交换信息，这是有效拓展视野、扩展人脉的好方法。</li>
<li><strong>如果对对方有好感，一定要约定近期再见面。</strong>如果你初次见到对方就对他产生了好感，那就应该在下周或近期在见面。</li>
<li>对交谈抱有诚意，并真诚提问。初次见面时应记住对方的名字，接下来就是努力相互了解。而且你应该采取主动，要首先<strong>对对方产生兴趣</strong>。</li>
</ol>
<p><br></p>
<h2 id="磨炼内在与外在"><a href="#磨炼内在与外在" class="headerlink" title="磨炼内在与外在"></a>磨炼内在与外在</h2><ol>
<li><p>不要说 <strong>“不好意思”</strong>， 也不要把 <strong>“对不起”</strong> 挂在嘴边，要多说 <strong>“谢谢你”</strong></p>
<ul>
<li>“不好意思” 的便利之处，在于它既不能充分地表达感激之情，也不能充分地表达歉意</li>
<li>每当你要说 “不好意思” 时，停下来想一想。<strong>如果要表示感谢，就说 “谢谢你”。如果要表达歉意，那就说 “对不起”</strong></li>
</ul>
</li>
<li><p><strong>读书后，花三倍的时间思考</strong>。思考的时间一定要大于阅读的时间。</p>
</li>
<li><p>读报的时候，<strong>要思考 “大家的反映”</strong>。</p>
<ul>
<li>读完后要思考人们对这则消息的反映； 因为通过这些，你可以预测市场的动态</li>
<li>读新闻，要注意各条新闻的登载方式</li>
<li>至少一次读2份 报纸/网站； 一份作为信息的主要来源，一份找出与他的区别</li>
</ul>
<blockquote>
<p><strong>思考每条新闻给人们带来的影响，努力探寻自己的答案，这样就能渐渐形成自己的看法。</strong></p>
</blockquote>
</li>
<li><p><strong>运用图表来整理逻辑</strong>，强化结论。</p>
</li>
<li><p>整理想法的三个过程：</p>
<ul>
<li>先写出头脑中浮现的想法</li>
<li>不要介意逻辑构成、因果关系、先后次序和语言表达</li>
<li>不断审视整理，改写成 “金字塔结构” 的模式</li>
</ul>
</li>
<li><p>用 “三个关键” 锻炼思考的能力</p>
<ul>
<li>如果一个内容需要<strong>超过3条以上</strong>的信息来表达，这个时候你应该<strong>思考自己到底要表达的是什么，它的目的与意义是什么。</strong></li>
</ul>
</li>
<li><p>护理鞋子。出门前把鞋子理干净。</p>
</li>
</ol>
<p><br></p>
<h2 id="不被时间操纵"><a href="#不被时间操纵" class="headerlink" title="不被时间操纵"></a>不被时间操纵</h2><ol>
<li>无论遇到什么情况，<strong>都提前10分钟到场</strong>。这个是基本的基本。</li>
<li>根据事项的 [优先程度] 和 <strong>[工作所需的时间]</strong> 为中心来对工作分类<ul>
<li>先做 优先程度 [高]，所需时间 [长] 的项目A</li>
<li>其次 优先程度 [高]，所需时间 [短] 马山能完成的项目B</li>
<li>再次  截止日期延后的 优先程度 [高]，所需时间 [长] 马山能完成的项目A</li>
<li>然后 优先程度 [低]，所需时间 [短] 马山能完成的项目C</li>
<li>最后 优先程度 [低]，所需时间 [长] 的项目D</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="沟通创造成果"><a href="#沟通创造成果" class="headerlink" title="沟通创造成果"></a>沟通创造成果</h2><ol>
<li><p><strong>接到任务之后，当场确认任务信息。</strong>  接到任务之后，要当前去 [界定问题]。</p>
<ul>
<li>在什么背景下S提出的任务，目的是为了解决什么问题。5W2H</li>
<li><strong>产出的要求/标准</strong> （可通过<strong>类举之前的工作产出来对比</strong>，确定产出的要求）</li>
<li>截止时间</li>
</ul>
</li>
<li><p><strong>接到任务后，5分钟内马上开始安排进程。</strong> 目的是确认问题、界定标准、确认是否有遗漏的信息、预估时间。<u>如果目前还有工作在进行，就暂时先放一放。然后抽出5分钟时间，将精力集中在刚刚接到的任务上</u></p>
<ul>
<li>再次确认指示；如果工作刚开始时都是疑问，一定要立刻找上司加以确认。<ol>
<li><strong>因为工作初期出现的问题，越是尽早确认，越能将问题的影响控制在最小范围内。</strong></li>
<li><strong>如果等到第二天早上再对初期出现的问题确认，对你工作能力的评价就会降低</strong></li>
</ol>
</li>
<li>制定一份工作计划，并对完成工作<strong>所需的时间进行预判</strong></li>
<li><strong>将截止日期提前一天</strong>；这会使你自觉加快速度。</li>
</ul>
</li>
<li><p><strong>回复邮件的速度 = 别人对你的评价</strong>。这与你设置固定时间接收邮件没有然后进行回复，并不冲突。</p>
<ul>
<li>把回复邮件的时间当做你的名片；如果对方等了很久还是没有收到回信的话，他就会担心自己之前的邮件是不是么有发送成功，进而去通过其他方式进行确认</li>
<li><strong>当回复邮件需要花费大量时间时，先发送一份言简意赅的邮件告知对方</strong></li>
<li>当需要整理思路时，要敢于搁置一晚再回复</li>
</ul>
</li>
<li><p>向上司报告、联系、交谈时要先发制人，并穿插假设来说服对方</p>
<ul>
<li>先报告、联系，然后交谈；报告不是目的，联系也不是目的；报告不是单方面的，在报告的同时还要听取对方的意见、调整工作的方向。</li>
<li>通过假设 “我打算…… 你觉得怎么样”</li>
</ul>
</li>
<li><p>向上司<strong>报告工作要选在第二天一早</strong></p>
<blockquote>
<p>挤出泡沫 - 输赌候群症</p>
</blockquote>
<ul>
<li>超出对方的期待值</li>
<li>可以及时调整工作方案；如果等到下午才报告，若要调整方案则时间就很少了。</li>
<li>早晨的环境安静，可以进行充分沟通</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="对待资料与会议"><a href="#对待资料与会议" class="headerlink" title="对待资料与会议"></a>对待资料与会议</h2><ol>
<li><strong>把自己的资料/产出视为自己的产品。你的作品就是代表了你这个人。</strong></li>
<li>在制作PPT之前，先关掉电脑，在纸上绘制出<strong>草图</strong>，<strong>理顺你的逻辑，构造你的呈现。</strong></li>
<li>把注重细节贯彻到底<ul>
<li>注重统一感</li>
<li><strong>最后阶段无视资料内容，只做机械地校对</strong>；（一次只做一件事情）</li>
</ul>
</li>
<li><strong>会议上一定要发言，否则就跟缺席一样</strong><ul>
<li>出席会议的人不是被赋予了发言的权利，而是<strong>被分配了发言的义务</strong>。</li>
<li>会议的目的是要求全体出席者对会议作出了某系贡献</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="职业技能"><a href="#职业技能" class="headerlink" title="职业技能"></a>职业技能</h2><ol>
<li>通过<strong>多次 [写下] 相同的目标</strong>来进行目标管理；不要将<strong>回顾</strong>笔记作为目的，而是要<strong>重视书写的过程。</strong></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《麦肯锡精英的48个工作习惯》_户塚隆将&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_麦肯锡精英的48个工作习惯01.jpg&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>张开双臂，拥抱她</title>
    <link href="http://yoursite.com/2017/07/15/%E5%BC%A0%E5%BC%80%E5%8F%8C%E8%87%82%EF%BC%8C%E6%8B%A5%E6%8A%B1%E5%A5%B9/"/>
    <id>http://yoursite.com/2017/07/15/张开双臂，拥抱她/</id>
    <published>2017-07-14T16:00:00.000Z</published>
    <updated>2017-08-13T02:31:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>生命的诞生，始于跳动的脉搏，那是从无到有的变化，至此带来了新的灵魂。</p>
<a id="more"></a>
<h2 id="张开双臂，拥抱她"><a href="#张开双臂，拥抱她" class="headerlink" title="张开双臂，拥抱她"></a>张开双臂，拥抱她</h2><p>​    生命的诞生，始于跳动的脉搏，那是从无到有的变化，至此带来了新的灵魂。</p>
<p>​    呱呱坠地，睁开眼的一瞬，全是陌生的一切，但又是那样的新颖。那时的我，仿佛拥有无上的力量，呼风唤雨，无所不能。我以为世界只有这么小，都在我的掌握中。直到我迈出第一步的瞬间，才发现原来路有那么长，怎么走都走不完；原来天空有这么远，怎么望都望不到边。</p>
<p>​    端坐学习，翻阅书籍，原来还有那么多没有见过的事，没有听过的人。从尧舜禹帝到飞上太空，原来过去有这么长，原来还有比天空更远的地方，原来生命如此短暂。至此，我努力探索，尽情生活，为了在这短短的流年里，留下只属于我的印记。</p>
<p>​    走出山林，踏入河流。涌进大厦，奔走路途。原以为要去经历多彩的人生，想不到却跌入了名为无奈的河流。随波逐流，恍恍惚惚。</p>
<p>​    不曾想过，原来我能够离天空那么近。当我探头往外望时，纯白的云朵和蔚蓝的天空，仿佛拨动了心底的琴弦。猛然间，发现自己停滞太久，活在所谓的城市里。但其实，不过是一颗无趣的灵魂，朝生暮死。当再次踏上大地的时候，却俨然丢弃了那副皮囊，准备重新出发。</p>
<p>​    所谓意志，所谓坚持，到头来都是脆弱的另一个名字。那个踏上征途时的自己，已经记不清他的模样，就只是记得好像有这么一个人。这一次，是被拖入温热的沼泽。好像一切并没有那么糟糕，好像继续下去也可以。但其实，看似平稳的世界，正在慢慢下降，只不过你无法觉察到而已。</p>
<p>​    原以为就会这样过活下去，但一个新的生命突然闯入了我的世界。她是那么柔弱，那么娇小，但又那么充满活力。巨大的能量被唤醒，我迈出脚步，挣脱束缚。因为我知道，我要用尽一切的力量去保护她。</p>
<p>​    望着她远去的背影，默默送她离开。我知道，她长大了，她要去探求自己的世界。原来，自己的容颜已经衰老，原来时间走的这么快。来不及感伤，庆幸发现这一切的自己，因为那一刻我知道，在余下的岁月，我要更加真实地去感受天空，感受寒冷，感受爱，感受逝去的青春。</p>
<p>​    如果没有迈出那第一步，我就不知道原来自己并不是唯一；</p>
<p>​    如果没有翻开第一本书，我就不知道原来生命是如此渺小与短暂；</p>
<p>​    如果没有那一次近距离的接触天空，我一定会是茫茫砂砾中那最平凡的一颗；</p>
<p>​    如果没有新生命的涌入，我一定是沦陷于温暖的河床；</p>
<p>​    如果没有她的远去，我一定不会如此真切地感受这个世界。</p>
<p>​    如果……</p>
<p>​    恰好都不是如果。正是因为那些突如其来的变化，让我的世界如此不同；正是因为那些意想不到的意外，让我有如此自豪而绚烂的人生。我感谢出现在我生命中的那些变化和意外，如果可以，我愿意张开双臂，拥抱她。</p>
<p>—— 写于2017.07.15</p>
<p><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生命的诞生，始于跳动的脉搏，那是从无到有的变化，至此带来了新的灵魂。&lt;/p&gt;
    
    </summary>
    
      <category term="个人创作" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%88%9B%E4%BD%9C/"/>
    
    
      <category term="个人创作" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E5%88%9B%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>文件名命名规范</title>
    <link href="http://yoursite.com/2017/07/11/%E6%96%87%E4%BB%B6%E5%90%8D%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2017/07/11/文件名命名规范/</id>
    <published>2017-07-10T16:00:00.000Z</published>
    <updated>2017-07-13T14:56:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>文件名的命名规则。</p>
<a id="more"></a>
<h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><ol>
<li><p>只使用<strong>小写字母</strong>，不使用大写字母</p>
<blockquote>
<p>可移植性：inux 系统是大小写敏感的，而 Windows 系统和 Mac 系统正好相反，大小写不敏感。</p>
<p>易读性：小写文件名通常比大写文件名更易读，比如<code>accessibility.txt</code>就比<code>ACCESSIBILITY.TXT</code>易读</p>
<p>易用性：某些系统会生成一些预置的用户目录，采用首字母大写的目录名。</p>
</blockquote>
</li>
<li><p><strong>文件</strong>的命名规范：<strong>项目命名词（或项目编号）_文件命名词_日期_V版本号.文件后缀</strong> </p>
<blockquote>
<p>文件名称由四部分组成：第一部分为项目名称或编号，第二部分为文件的描述，第三部分为当前文件的日期，第四部分为文件阶段标识加文件后缀</p>
<p>如果是同一版本同一阶段的文件修改过两次以上，则在版本标识后面加以数字标识，每次修改数字加1； <strong>当有多人同时提交同一份文件时，可以在版本标识的后面加入人名或缩写来区别。</strong></p>
</blockquote>
</li>
<li><p><strong>文件夹</strong>的命名规范：<strong>项目命名词(或项目编号)_文件夹名称_起始日期_结束日期</strong></p>
<blockquote>
<p>举个文件夹命名例子：Prj_PC PIS Project_20101112_完成日期。<strong>第二个下划线后为空，等待工作结束时，添加工作结束的日期</strong>。</p>
</blockquote>
</li>
<li><p>用<strong>下划线<code>_</code> 作为分割符，用连字符<code>-</code> 作为联接符</strong>（同一个属性的内容） —— [ 个人习惯 ]</p>
<blockquote>
<p>1_工作学习_jupyter-notebook_20170711</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><ul>
<li><strong>版本号式命名法</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">XX平台交流材料_V1.0.pptx</div><div class="line">XX平台交流材料_V1.1.pptx</div></pre></td></tr></table></figure>
<blockquote>
<p>用V1.0、V1.0.0或者V1.0.0.0作为起始的版本，可根据需要自行控制，然后对其中的需要变更的数字进行+1操作即可</p>
</blockquote>
<p><br></p>
<ul>
<li><strong>日期命名法</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">广东办事处周报_20140117.xlsx</div><div class="line">广东办事处周报_20140220.xlsx</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li><strong>综合命名法</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">XX平台交流材料_20170102_v1.0</div><div class="line">XX平台交流材料_20170102_v1.1</div><div class="line">XX平台交流材料_20170103_v1.2</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><p>增加特殊符号，用于标识不同状态的文件： </p>
<ol>
<li><code>！</code>（叹号）——标注<strong>重要</strong>的文件或者文件夹 </li>
<li><code>#</code>（井号）——标注<strong>等待处理</strong>的文件或者文件夹 </li>
<li><code>@</code>（@号）——标注<strong>正在处理</strong>的文件或者文件夹</li>
</ol>
<p>对那些处理完毕的文件，应该放在合适的文件夹当中，因此不作特殊符号的标注。</p>
<p>这些符号的使用，是作为文件命名的<strong>首字应用</strong>，如此一个文件夹中，标注特殊符号的文件会排列在一块，查找和使用起来会比较方便。</p>
<p><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件名的命名规则。&lt;/p&gt;
    
    </summary>
    
      <category term="文档规范" scheme="http://yoursite.com/categories/%E6%96%87%E6%A1%A3%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="文档规范" scheme="http://yoursite.com/tags/%E6%96%87%E6%A1%A3%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>《刻意练习》_读书笔记</title>
    <link href="http://yoursite.com/2017/07/11/%E3%80%8A%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E3%80%8B_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/07/11/《刻意练习》_读书笔记/</id>
    <published>2017-07-10T16:00:00.000Z</published>
    <updated>2017-08-13T03:10:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>《Secrets From The New Science of Experience》(刻意练习) - Anders Ericsson (安德斯.艾利克森)</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_刻意练习01.jpg" alt=""></p>
<a id="more"></a>
<blockquote>
<p>刻意练习的原则是通过研究杰出人物发现的。</p>
</blockquote>
<ol>
<li>成人最佳的学习方式是在<strong><u>情景中学习</u></strong>，而非独自练习。</li>
<li>年龄越小，大脑的适应性越好。有些能力只能在6岁/12岁/18岁之前培养。</li>
</ol>
<h2 id="学习中会经历的几个阶段"><a href="#学习中会经历的几个阶段" class="headerlink" title="学习中会经历的几个阶段"></a>学习中会经历的几个阶段</h2><ol>
<li><p>从0到1：从完全不会，到慢慢掌握技能，并且能够完成 “自动” 地完成，而非刻意的完成。 </p>
<blockquote>
<p><em>在球场上你的所有动作都是自动做出来的，你的表现也被人接受，不需要太多的思考。你可以真正在球场上放松。</em></p>
<p>这个阶段，即使你对自己的水平不是很满意，但你的进步是实实在在的。你已经掌握了容易的技能。</p>
</blockquote>
</li>
<li><p>从1到N：提高技能的熟练度，但存在一个上限</p>
<blockquote>
<p><em>你的能力随着练习的增加而增加，但那你很快会发现你依然有一些弱点，不论你多么经常地学习，这些弱点总是暴露出来</em></p>
<p>这是大多数人会遇到的一个瓶颈。而且很多事情实际上也只需要我们达到中等水平就可以了。</p>
<p><strong>一旦你达到令你满意的技能水平，并能做到自然而然地表现你的水平，你就已经不再进步了。人们通常错误地理解这种现象，认为继续联系就能提升水准</strong></p>
<p>“天真的练习”， 基本上只是反复地做某件事情，并指望只靠那种反复，就能提高表现和水平。</p>
</blockquote>
</li>
<li><p>从N到N+1：克服自己的弱点，超越瓶颈，把技能上升到高水平</p>
</li>
</ol>
<p><br></p>
<h2 id="刻意练习的特点"><a href="#刻意练习的特点" class="headerlink" title="刻意练习的特点"></a>刻意练习的特点</h2><ol>
<li><p>刻意练习发展的技能，是已经拥有一套有效训练方法的技能。</p>
</li>
<li><p>刻意练习发生在<strong>舒适区之外，但并不会太远</strong>。并且要<strong><u>持续不断地尝试刚好超出当前能力范围</u></strong>的事物。</p>
<ul>
<li>在 “舒适区” 做事，叫生活；在“学习区”做事，才叫练习。<strong>有效的练习必须发生在“学习区”，一旦你学会了某个东西，就不该在上面继续花时间，要立即转入下一个难度。</strong></li>
</ul>
<blockquote>
<p>心理学家把人的知识和技能分为层层嵌套的三个圆形区域：最内一层是“舒适区”，是我们已经熟练掌握的各种技能；最外一层是“恐慌区”，是我们暂时无法学会的技能；二者中间则是“学习区”。</p>
</blockquote>
</li>
<li><p><strong>组块化地学习</strong>。</p>
<blockquote>
<p>刻意练习需要把训练的内容分成几不同层次渐进提升的小模块，每次针对每一个模块进行重复联系，重复练习正确掌握一个模块后再进行下一个模块的练习。</p>
</blockquote>
</li>
<li><p>有<strong>明确可衡量</strong>的特定<strong>目标</strong>。</p>
<blockquote>
<p>只有结果可控的领域，刻意练习才有用。</p>
</blockquote>
</li>
<li><p>需要专注和有意识地行动。</p>
<blockquote>
<p><em>学习时间长不等于用功，决定性因素不是学习时间，而是学习环境。刻意练习不好玩，如果你在打打闹闹中享受练习的过程，那就不是刻意练习。你必须在一个不受打扰的环境中单独学习，调动大量的身体和精神资源，全力投入。特别专注地干一件事才是最酷的。</em></p>
</blockquote>
</li>
<li><p>包含反馈，并且是<strong>及时的反馈</strong>。</p>
<blockquote>
<p>刻意练习的关键是<strong><u>随时获得有效的反馈</u></strong>。你需要一个旁观者，他不见得水平比你高，不需要经常跟你谈心，不用激发你的战斗热情，但他必须给你提供三步反馈：<strong>演示一遍正确动作，表现一遍错误动作，再演示一遍正确动作。</strong></p>
<p>有效的反馈，应该满足三个条件： 及时，一旦不对马上就有人给你指出来；超脱，对事不对人，反馈者不把你的错误上升到“你这个人行不行”的层面；试错，你犯错误的代价很小。</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h2 id="刻意练习的原则"><a href="#刻意练习的原则" class="headerlink" title="刻意练习的原则"></a>刻意练习的原则</h2><ol>
<li>确定谁是杰出人物<ul>
<li>理想的情况是找到客观的、可复制的测量指标，为了能够一致地从人群中找到最优秀的人</li>
</ul>
</li>
<li>找出杰出人物与其他人物的差别<ul>
<li>思考他们都做了什么</li>
<li>思考哪些训练方法帮助他们实现了卓越</li>
</ul>
</li>
<li>最佳方法是找到优秀的导师</li>
</ol>
<p><br></p>
<h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ol>
<li><strong>考试是最好的反馈</strong>。熟悉并不等于理解，想要真正理解，唯一的办法是考试和测验。<strong>没有经过测验，你的知识只是幻觉。</strong></li>
<li>刻意练习最为关键的一点，是敢于迈出从舒适区往外走的那一步。你不但应该在“学习区”刻意练习，<strong>你的研究、工作和娱乐都应该在“学习区”。</strong></li>
<li>遇到瓶颈时，<strong><u>试着从不同角度来里思考/练习</u></strong>，而不是去做更难的事情。</li>
<li>大脑的机制：如果你足够多地练习某件事情，你的大脑会改变某些神经元的用途，以帮助完成那些任务。</li>
<li><strong>记忆是取决于背景的</strong>。 *一组句子你可以记忆，但若打乱句子中各个字的顺序，凌乱地排列，可能你就无法记忆了。</li>
<li>于刻意练习，被误读最久的一个概念是“一万小时定律”。事实上，想把自己变成高手，光知道“一万小时”毫无意义，因为真正的<strong>关键根本不在训练时间，而是<u>训练的方法</u></strong> 。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《Secrets From The New Science of Experience》(刻意练习) - Anders Ericsson (安德斯.艾利克森)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/阅读书籍_刻意练习01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="工具方法" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>个人日志_2017年6月总结</title>
    <link href="http://yoursite.com/2017/07/09/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97_2017%E5%B9%B46%E6%9C%88%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/07/09/个人日志_2017年6月总结/</id>
    <published>2017-07-08T16:00:00.000Z</published>
    <updated>2017-07-09T10:55:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="6月总结"><a href="#6月总结" class="headerlink" title="6月总结"></a>6月总结</h2><p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年6月总结_01.jpg" alt=""></p>
<p><strong>掌握正确的学习方法，运用严谨的思维组织与表达体系完成思考与输出。</strong></p>
<a id="more"></a>
<h3 id="【运动-amp-健康】9分"><a href="#【运动-amp-健康】9分" class="headerlink" title="【运动&amp;健康】9分"></a>【运动&amp;健康】9分</h3><ol>
<li><p>对于新年目标的达成情况：有约3周的时间早睡早起，还是不错的战绩。</p>
<p>| 做晨间日志 | 早睡早起 | 晚睡早起 |<br>| :—: | :–: | :–: |<br>|  25天  | 14天  | 11天  |</p>
</li>
<li><p>从6.4开始学习游泳，截止到月底，共学习3次；完成了蛙泳腿部动作的学习，进度上还算合理。对于学习时间上，基本保持住1周1次的进度。</p>
</li>
<li><p>6月不在乱来，算是达到了目标。</p>
</li>
<li><p>剪头发：结果剪的太短；但其实本可以防止这种事情发生，原因在于自己发现了问题，但没有及时行动去制止。</p>
</li>
</ol>
<p><br></p>
<h3 id="【生活-amp-娱乐】8分"><a href="#【生活-amp-娱乐】8分" class="headerlink" title="【生活&amp;娱乐】8分"></a>【生活&amp;娱乐】8分</h3><ol>
<li>参加读书会《非常历史说——简述欧洲史》的分享，地点在大悦城-西西弗书店；自1500年以来的全球发展，由三个国家进行主导<ul>
<li>17世纪 - 荷兰：开启了全球商业帝国</li>
<li>18-19世纪 - 英国：第一个工业化、立宪制度国家</li>
<li>20世纪 - 美国：宗教灵魂之国</li>
</ul>
</li>
<li>学习魔方，最终仍然么有学会。</li>
<li>看了电影《异形：契约》，小时候对它留下的恐怖的阴影，但这一次完全么有那么恐怖与害怕。当然也主要是由于电影基本都在讲剧情，没有太多怪物的场面。</li>
<li>吃了两个 “大餐”：周童鞋、杨童鞋</li>
</ol>
<p><br></p>
<h3 id="【阅读-amp-学习】10分"><a href="#【阅读-amp-学习】10分" class="headerlink" title="【阅读&amp;学习】10分"></a>【阅读&amp;学习】10分</h3><p>一个学习与阅读的忙碌月份。这个月，顺利通过了”证券从业资格”的考试。完成了内容整理与输出的思考；</p>
<p>阅读郑也夫《信任论》《代价论》，重读 芭芭拉 • 明托《金字塔原理》，完成了读书笔记的同时还形成了自己的思考体系。研究学习与阅读的方法，阅读《学习之道》《刻意练习》，使用 Anki 软件，从根本上提高学习的效率。</p>
<p>研究 “稳重”的特性，准备改变自己的行为方式。</p>
<ol>
<li>对比了博客、微信、知乎各个品台的功能，决定将<strong>博客作为知识储备，微信作为知识输出。</strong><ul>
<li>分别描述它们的特点，最后要决定如何去使用。</li>
</ul>
</li>
<li>阅读郑也夫《信任论》、《代价论》，后续因为忙于提高自己思维的组织与表达能力，所以没有花时间去做读书笔记的整理，把这个事项排在了后面。</li>
<li>参加 “证券从业资格” 的考试，并顺利通过。</li>
<li>将软件的认识真正落实到行动上。对于Python与R的选择，最终决定<strong>数据处理用Python，可视化用Excel</strong>。其次可视化用 R (单独处理)<ul>
<li><strong>对于选择用Excel，是认识到当前做的<u>分析报告都是基于word/PPT/Publisher，而对此兼容性最好的是Excel中的图表</u></strong></li>
<li><strong>图表的原则：简洁，一个图表表达一个观点</strong>； 而<strong><u>对于需要绘制复杂图形的软件，目前还没有应用的余地</u></strong></li>
<li>当前的数据量，并没有大到Excel无法处理的地步<ul>
<li>这个月，对于Pytonn 与 R 的使用仍然处在选择困难期，一方面期望Python的兼容性，一方面想要 R 中ggplot2作图的美观性。为了能将两者完美的结合起来，花费了大量的时间研究如何在Pythton中调用R。<ol>
<li><strong>魔法命令 - %R / %%R； 兼容性较好，会作为一个方案</strong></li>
<li>可视化直接调用R进行处理</li>
<li>rpy2 - 作图时会出现打开另一个窗开，虽然有代码可以解决，但不易记忆</li>
<li>ggplo2包 - Python中无法识别中文字符</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
<li>研究 “稳重” 的特质以及具体的行为表现方式，通过可落实的行为来改变自己。<ul>
<li><strong>[思考先于言行]</strong>  一定是<strong>思考先行</strong>。</li>
<li>对事情有一个基本的判断 + 思考自己的目的&amp;背景 + 思考对方的目的&amp;背景 + 降低语速、直视对方 + 思考事情的发展趋势</li>
</ul>
</li>
<li>时隔7年再次阅读《金字塔原理》，深受感触，完成<a href="https://chf2012.github.io/2017/06/29/《金字塔原理》_读书笔记/" target="_blank" rel="external">《金字塔原理》_读书笔记</a> ，同时形成自己的思考体系。<ul>
<li><strong>纵向：任意层次的思想必须是下一层次的概括</strong></li>
<li><strong>横向：同一层次的内容必须属于同一逻辑范畴</strong></li>
<li><strong>横向：同一层次的内容必须按照某种逻辑顺序进行组织</strong></li>
</ul>
</li>
<li>收听知乎Live《如何自学计算机课程》，并做了读书笔记；其中谈到的学习方法，让我很受用。并让我去关注学习&amp;阅读的方法，进而去阅读《学习之道》《刻意练习》；最终输出<a href="https://chf2012.github.io/2017/06/27/学习的方法/" target="_blank" rel="external"> 《学习的方法》</a><ul>
<li>认识大脑对于学习这件事情的处理方式（工作记忆/长期记忆、构造组块）</li>
<li>学习的过程就是新知识与已有知识产生联接的过程</li>
<li>发散思维不仅是一种重要的思维，而且在学习过程中担任非常重要的角色；<strong>必须要留有时候给发散思维对知识进行粘合与整理。</strong></li>
<li>通过 <strong>回想</strong> 而非重复阅读来加深记忆。</li>
</ul>
</li>
</ol>
<p><br></p>
<h3 id="【工作】6分"><a href="#【工作】6分" class="headerlink" title="【工作】6分"></a>【工作】6分</h3><ol>
<li>前往上海清算所拜访，了解关于当前市场的运作情况，以及引入个人投资者的可行性；但自己的<strong>对话能力太弱</strong>，全程几乎没有说几句话；</li>
<li>参加讲座《期货，你不知道的那些事》，认识到期货市场远远比现货市场更加复杂，不仅如此，还有一个强力的监管者 “证监会”。</li>
<li>分享 “贝叶斯分类”。刚开始举的例子出现了错误，其实这正好说明了自己并没有特别充分地理解；同时也说明没有很好地去准备；</li>
<li>换工位；虽然只是一件小事，但反应了自己的一些问题。<strong>对事情如何发展一定要自己去判断；当涉及对方的提议时，思考对方对这个建议的重视度，他的处事风格，已经这个事情可能的发展情况。</strong></li>
<li>对于分析报告，由于逻辑与表达的原因，改了好几个版本。非常惭愧。痛下决心要改过来。阅读《金字塔原理》，购买”麦肯锡思考类”书籍，奋起学习。</li>
</ol>
<p><br></p>
<h3 id="【友情】-9分"><a href="#【友情】-9分" class="headerlink" title="【友情】 9分"></a>【友情】 9分</h3><ol>
<li>认识两位新伙伴：朱童鞋、周童鞋<ol>
<li>由于学游泳的关系，认识了新的伙伴 - 朱童鞋；接触下来，还是挺合拍的。</li>
<li>收到周童鞋的邀请，说为了感谢我的笔记，邀请我一起去看电影《异形》；但之后相约一起吃午饭都是她主动提出的，这点上自己做的不太好。虽然彼此都是第一次见面，但这并不影响我们的沟通；整个下午，看了电影，吃了东西，逛了大悦城，还是挺开心的。</li>
</ol>
</li>
<li>老伙伴的邀约：<ol>
<li>邀约瑶瑶，第一次约的时候刚好不巧，原本说约下周五，但最后不了了之</li>
<li>与杨童鞋一起逛新天地、K11、日月光；说好了这次是TA请吃饭，但自己好像太过于在意消费的问题，生怕对方多花钱，但这个时候应该是由对方去决定，而非自己替对方决定说吃什么。</li>
<li>约李童鞋，但因第二天要去苏州徒步，故无缘相见</li>
<li>约周童鞋一起去看”减压展” ，因TA要备考，所以下次再约。</li>
</ol>
</li>
</ol>
<p><br></p>
<h3 id="【亲情】5分"><a href="#【亲情】5分" class="headerlink" title="【亲情】5分"></a>【亲情】5分</h3><ol>
<li>虽然自己很少主动打电话回家，但对父母的态度更加缓和，没有之前的不耐烦。话说这个不耐烦好像是好多年前的事情了，但在最近一年自己开始有所察觉与感悟。</li>
</ol>
<p><br></p>
<h3 id="【投资】-0分"><a href="#【投资】-0分" class="headerlink" title="【投资】 0分"></a>【投资】 0分</h3><ol>
<li>对于5月遗留的问题没有去实施。（去了解个人贷款的途径与方式、金额及利率；）</li>
</ol>
<p><br></p>
<h3 id="【感恩回报】7分"><a href="#【感恩回报】7分" class="headerlink" title="【感恩回报】7分"></a>【感恩回报】7分</h3><blockquote>
<p>虽然记录的事情只有一件，但这是有意识地表达感谢。</p>
</blockquote>
<ol>
<li>感谢一起学游泳的朱童鞋，特意带了樱桃给我。樱桃很甜，我告诉他。</li>
</ol>
<p><br></p>
<h3 id="【成功小事】5分"><a href="#【成功小事】5分" class="headerlink" title="【成功小事】5分"></a>【成功小事】5分</h3><ol>
<li>周末早起成功过</li>
<li>6月没有乱来，自己的计划得以完成</li>
</ol>
<p><br></p>
<h3 id="【自我思索】10分"><a href="#【自我思索】10分" class="headerlink" title="【自我思索】10分"></a>【自我思索】10分</h3><ol>
<li>当你发现事情并没有向你期望的方向发展时，要及时制止。明明已经观察到了不对劲的地方，但却保持了默许的态度。——剪头发</li>
<li>将软件的认识真正落实到行动上。对于Python与R的选择，最终决定<strong>数据处理用Python，可视化用Excel</strong>。其次可视化用 R (单独处理)<ul>
<li><strong>对于选择用Excel，是认识到当前做的<u>分析报告都是基于word/PPT/Publisher，而对此兼容性最好的是Excel中的图表</u></strong></li>
<li><strong>图表的原则：简洁，一个图表表达一个观点</strong>； 而<strong><u>对于需要绘制复杂图形的软件，目前还没有应用的余地</u></strong></li>
<li>当前的数据量，并没有大到Excel无法处理的地步</li>
</ul>
</li>
<li>去上海清算所拜访，发现自己的<strong>对话能力太弱</strong>。之后看电影《异形》的过程中，欣赏稳重的人的行为表现，所以花时间研究稳重的具体行为，并要把自己塑造成稳重的个性。自我塑造，我真正想要的自己应该是如电影中的角色那样，<strong>生活中可以风趣玩耍，但对于事情，你要有自己的坚持与判断，不是严肃，而是认真。</strong> （回想电影中准备赴任舰长时，他的表现）</li>
<li><strong>软件的全部价值在于应用，帮助你解决问题。</strong></li>
<li><strong>睡前阅读</strong>好像已经半个多月都没有实施了。因为不仅是学习，<strong>更关键的是为了早睡。</strong></li>
<li>随身带本书，可以在坐地铁的时候拿来翻一翻，的确如此。好习惯，要养成。</li>
<li>学习的时候，往往会发觉时间不够，还有好多想阅读的书，还多待办事项没有完成。但同时，有一个问题，就是<strong>你花在提高你工作能力方面的时间有多少</strong>。是不是花费了太多时间在你感兴趣的领域，而这些本应该花在工作能力提升上的时间。</li>
<li><strong>对事情如何发展一定要自己去判断；</strong>当涉及对方的提议时，思考对方对这个建议的重视度，他的处事风格，已经这个事情可能的发展情况。</li>
<li>自己在其他主题上的记录太少，要用心去记录，而不是当成一项任务去完成。</li>
</ol>
<p><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;6月总结&quot;&gt;&lt;a href=&quot;#6月总结&quot; class=&quot;headerlink&quot; title=&quot;6月总结&quot;&gt;&lt;/a&gt;6月总结&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年6月总结_01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;掌握正确的学习方法，运用严谨的思维组织与表达体系完成思考与输出。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人塑造" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
      <category term="个人日志" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="个人日志" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
      <category term="个人塑造" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>《金字塔原理》_读书笔记</title>
    <link href="http://yoursite.com/2017/06/29/%E3%80%8A%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E3%80%8B_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/06/29/《金字塔原理》_读书笔记/</id>
    <published>2017-06-28T16:00:00.000Z</published>
    <updated>2017-08-13T03:14:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>《The Pyramid Principle》（金字塔原理） - Barbara • Minto（芭芭拉 • 明托）</strong> </p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/书籍阅读_金字塔原理01.jpg" alt=""></p>
<p><strong>[ 思考先于写作/表达 ]</strong> - 在开始写作前，先将自己的<strong>思路组织成金字塔结构</strong>，并按照<strong>逻辑关系</strong>的规则进行<strong>检查与修改</strong>。</p>
<blockquote>
<p>你要<strong>强迫</strong>自己先想后写、先想后做、先向后说。</p>
</blockquote>
<a id="more"></a>
<h1 id="1-表达的逻辑"><a href="#1-表达的逻辑" class="headerlink" title="1. 表达的逻辑"></a>1. 表达的逻辑</h1><p>从整体介绍了金字塔结构的运用方式。包括使用金字塔的原因、金字塔的内容与构建方法、序言的撰写以及思维的呈现。</p>
<p><br></p>
<h2 id="为什么要用金字塔结构"><a href="#为什么要用金字塔结构" class="headerlink" title="为什么要用金字塔结构"></a>为什么要用金字塔结构</h2><h3 id="归类分组，将思想组成金字塔"><a href="#归类分组，将思想组成金字塔" class="headerlink" title="归类分组，将思想组成金字塔"></a>归类分组，将思想组成金字塔</h3><ol>
<li><p>大脑会 <strong>“自动”</strong> 把具有 <strong>“共性”</strong>的任何事物<strong>组织在一起</strong>；</p>
<blockquote>
<p>共性：具有某种<strong>相似的共同点</strong> 或 所处<strong>位置相近</strong></p>
</blockquote>
</li>
<li><p>大脑一次记忆不超过 7 个思想、概念或项目；大脑<strong>比较容易记住的是3个，次之5个，绝对不要超过7个</strong></p>
</li>
<li><p>当我们把9个概念分类后提高一个层次变为3个项目时，但闹需要处理的内容就只有3个</p>
<blockquote>
<p>因为处于较高层次上的思想总能提示下一层次的意思</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h3 id="自上而下表达，结论先行"><a href="#自上而下表达，结论先行" class="headerlink" title="自上而下表达，结论先行"></a>自上而下表达，结论先行</h3><ol>
<li><p>清晰的顺序：先提出<strong>总结性思想</strong>，再提出<strong>被总结的具体思想</strong></p>
<blockquote>
<p>受众的大脑只能<strong>逐句</strong>理解作者/演讲者表达的思想。他们会<strong>假定一同出现的思想在逻辑上存在某种关系</strong>。如果你不预先告诉他们这种逻辑关系，他们会自动从中寻找共同点，将你表达的思想归类组合，以了解各个组合的意义</p>
<p>读者可利用的思维能力有限：(1) 用于识别和解读读到的词语；(2) 找出各种思想之间的关系； (3) 理解所表述思想的含义</p>
<blockquote>
<p>通过有效的方法表达你的思想，减少读者在前面两项活动上的时间与精力，从而使读者能够用最少的脑力理解你表达的思想</p>
</blockquote>
</blockquote>
</li>
</ol>
<p><br></p>
<h3 id="自下而上思考，总结概括"><a href="#自下而上思考，总结概括" class="headerlink" title="自下而上思考，总结概括"></a>自下而上思考，总结概括</h3><ol>
<li><p>你的思维总是从最底部的层次开始，将句子按照某种逻辑关系组成段落，然后将段落组成章节，最后将章节组成完成的文章；而<strong>代表整篇文章的是金字塔最顶端的一个思想</strong>。</p>
<blockquote>
<p>仔细回想你的实际思考过程，你在总结主要思想时的确使用了这种自下而上的方式。</p>
<blockquote>
<p>假设你要将6个句子组成一个段落。为什么要将这6个句子组织在一起，而不包括其他句子？原因自傲与你认为这6个句子之间有某种逻辑关系。而这种逻辑关系要求所有6个句子共同解释或支持由其组成的段落所表达的单一思想。通过这种方法，你可以把3个段落而不是其他段落组织在一起。将章节组成文章也按照这个思路进行。</p>
<p>每一篇文章的结构必定只支持一个思想。因为你总是要不断地对思想进行概括和归纳，直到没有可以与之关联的思想能继续概括。</p>
</blockquote>
</blockquote>
</li>
</ol>
<p><br></p>
<h3 id="思想符合如下规则能实现好的表达"><a href="#思想符合如下规则能实现好的表达" class="headerlink" title="思想符合如下规则能实现好的表达"></a>思想符合如下规则能实现好的表达</h3><p>==<strong>【写作之前，先将你的思路放入到金字塔结构中，并根据如下规则进行检验。若不能符合，说明你的思路存在问题，需要调整思路】</strong>==</p>
<ol>
<li><strong>纵向</strong>：<strong>任一层次的思想必须是其下一层次思想的概括</strong></li>
<li><strong>横向</strong>：每组中的思想必须属于<strong>同一逻辑范畴</strong></li>
<li><strong>横向</strong>：每组中的思想必须按照某种<strong>逻辑顺序组织</strong></li>
</ol>
<blockquote>
<ul>
<li><strong>横向：同一逻辑范畴</strong></li>
</ul>
<p>若希望将某一组中思想的抽象程度提高一个层次，那这一组中的思想必须在逻辑上具有共同点</p>
<p>对 “同一逻辑范围” 的具体解释：<em>如果某组思想中的第一个思想时做某件事的一个原因，那么其他思想也必须是做同一件事的其他原因；如果第一个思想是某个过程的一个步骤，其他也必须是步骤；</em></p>
<ul>
<li><strong>横向：按某种逻辑顺序组织</strong></li>
</ul>
<p>必须有明确的理由说明为什么把第二个思想放在第二位</p>
</blockquote>
<ul>
<li><strong>组织思想的4中逻辑顺序</strong></li>
</ul>
<blockquote>
<p>你写作的逻辑顺序展现了你组织思想时的分析过程</p>
</blockquote>
<ol>
<li>演绎顺序：大前提、小前提、结论</li>
<li>时间（步骤）顺序：第一、第二、第三</li>
<li>结构（空间）顺序：波士顿、纽约、华盛顿</li>
<li>程度（重要性）顺序：最重要、次重要</li>
</ol>
<p><br></p>
<h2 id="金字塔的内部结构"><a href="#金字塔的内部结构" class="headerlink" title="金字塔的内部结构"></a>金字塔的内部结构</h2><p>【在开始将思想组织成金字塔之前，首先你必须<strong>梳理你想要表达的思想</strong>】</p>
<p>金字塔中的子结构，能够加快你树立思想的过程：</p>
<ol>
<li><p>主题与子主题之间的<strong>纵向关系 (疑问/回答式对话)</strong> </p>
</li>
<li><p>各子主题之间的<strong>横线关系 (演绎、归纳)</strong></p>
</li>
<li><p><strong>序言的叙述方式 (讲故事 - SCQA)</strong></p>
<blockquote>
<p>重要的是，了解读者最早提出的疑问，确保你组织和呈现的思想与读者有关联</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h3 id="纵向关系"><a href="#纵向关系" class="headerlink" title="纵向关系"></a>纵向关系</h3><p>【金字塔中的 <strong>“思想”</strong>，指的是向受众发出信息并 <strong><u>“引发疑问”</u></strong> 的语句】</p>
<p>【你的每一个表述都应当<strong>引发读者的疑问</strong>，而你也必须在这一表述下的横向结构上逐个<strong>回答读者的疑问</strong>】</p>
<ol>
<li><p>一些很明显的事实可能需要经过很长的时间才能被人们所认知；<strong>阅读的过程</strong>就是一个典型的例子。</p>
<blockquote>
<p>文章都是<strong>一维的</strong>：<strong>一个句子接一个句子，在纸面上基本呈现出纵向向下的结构</strong>。</p>
<p>这种纵向延伸掩盖了一个事实，即思想时位于不同的抽象层次上的。根据这一事实，大主题下的任何思想都同时与文章的其他思想发生着纵向与横向的联系。</p>
</blockquote>
</li>
<li><p>通过 <strong>疑问/回答式的对话</strong>，能使你的读者按照你的思路产生符合逻辑的反应</p>
<blockquote>
<p>金字塔中的 <strong>“思想”</strong>，指的是向受众发出信息并 <strong>“引发疑问”</strong> 的语句</p>
<p>表达思想的主要目的，向受众传达新的信息；而这样的标出，必然会使对方就其逻辑性产生疑问。作为文章的作者，你必须在该表述的下一层次上横向地回答读者的疑问。<em>但是，你的回答仍然是向读者传递他所不知道的信息，这又使读者产生新的疑问，于是你又在再下一个层次回答新的疑问。</em>不断按照 “ 引起读者疑问并回答疑问” 的方式写作，直至读者<strong>不会再</strong>对你的新表述<strong>提出任何疑问为</strong>止。至此，作者就可以离开金字塔结构的第一个分支，<strong>返回关键句 (Key Line) 层次</strong>，<strong>继续回答</strong>由金字塔顶端中思想引发的<strong>初初始疑问</strong>。</p>
</blockquote>
</li>
<li><p>吸引读者的全部注意力：</p>
<ol>
<li><strong>在做好回答问题的准备之前，避免引起读者的疑问</strong></li>
<li><strong>在引起读者疑问之前，避免先给出该问题的答案</strong></li>
</ol>
</li>
</ol>
<p><br></p>
<h3 id="横向关系"><a href="#横向关系" class="headerlink" title="横向关系"></a>横向关系</h3><p>横向结构上的表述不仅能<strong>回答</strong>上一层次引起的<strong>疑问</strong>，而且还必须保证<strong>表述符合逻辑</strong>。</p>
<ol>
<li><strong>演绎</strong><ul>
<li>第一个思想是世界上某种现象的表述</li>
<li>第二个思想是<strong>对第一个思想的 [主语] 或 [谓语] 做出的表述</strong></li>
<li>第三个思想从以上两个思想中得出结论</li>
</ul>
</li>
<li><strong>归纳</strong><ul>
<li>组合中的思想相互关联，必须保证逻辑上有共同点，并且可以用<strong>一个 [名词]</strong> 来表示</li>
</ul>
</li>
</ol>
<p><br></p>
<h3 id="序言的结构"><a href="#序言的结构" class="headerlink" title="序言的结构"></a>序言的结构</h3><p>【序言的目的 $\to$ 确定<strong>初始问题</strong>】 即促使你思考做这件事的目的与原因是什么。</p>
<ol>
<li><p>只有当引发 疑问/回答式对话的话语与读者有关，才能吸引读者的注意力。保证出现相关性的唯一办法，就是使这句子<strong>直接回答你所发现的读者头脑中已存在的某一疑问</strong>。</p>
<blockquote>
<p>读者只有在需要了解问题的答案时才会去找答案；</p>
<p>文章的序言可以通过追溯<strong>问题的起源和发展</strong>来确定这一问题。</p>
</blockquote>
</li>
<li><p>通过 <strong>讲故事</strong> 的方式进行呈现，读者会更易于理解信息</p>
<ul>
<li>Situation：背景</li>
<li>Complication：冲突</li>
<li>Question：疑问</li>
<li>Answer：回答</li>
</ul>
<blockquote>
<p><strong>S-背景与C-冲突，是为了说明做这个事情的Why-原因；</strong></p>
<p><strong>可以理解为，通过S与C将Why拆解</strong></p>
<p><strong>通过讲故事的序言模式，会促使你思考做这件事的目的与原因(Why)</strong></p>
</blockquote>
</li>
<li><p>叙述式的序言说明了 “冲突” 发生的 “背景” ，以及 “冲突” 引发的 “疑问” ，而这个 “疑问” 正是你的文章将要 “回答” 的。一旦你提出了对该 “疑问” 的 “回答”，就回使读者产生新的疑问，于是你就要在文章结构的下一层次上回答这些疑问</p>
</li>
</ol>
<p><br></p>
<h2 id="如何构建金字塔"><a href="#如何构建金字塔" class="headerlink" title="如何构建金字塔"></a>如何构建金字塔</h2><p>当前已经掌握的信息</p>
<ol>
<li>金字塔<strong>顶端</strong>有一个包含 主语和谓语 的句子</li>
<li>这个句子的 <strong>主语</strong> 就是文章的 <strong>主题</strong></li>
<li>这个句子是对读者头脑中已经存在的某个<strong>疑问的回答</strong></li>
<li>回答这个<strong>最初的疑问</strong>，就是你<strong>写作的动机</strong></li>
</ol>
<p><br></p>
<h3 id="自上而下法"><a href="#自上而下法" class="headerlink" title="自上而下法"></a>自上而下法</h3><blockquote>
<ol>
<li>先利用<strong>序言的结构</strong>将头脑中的观点逐个梳理出来</li>
<li>再开始进行书写</li>
</ol>
<p>目的是为了<strong>确保你了解自己将要回答哪些疑问</strong>。而一旦确定了主要疑问，其他因素就很容易在金字塔结构中各就各位。</p>
</blockquote>
<p><strong>简要步骤</strong></p>
<blockquote>
<ol>
<li>提出主题思想</li>
<li>设想受众的主要疑问</li>
<li>写序言（背景 - 冲突 - 疑问 - 回答）</li>
<li>与受众进行 疑问/回答式对话</li>
<li>对新的疑问重复进行 疑问/回答式对话</li>
</ol>
</blockquote>
<p><strong>具体步骤</strong></p>
<ol>
<li><p><strong>画主题方框，填入要探讨的主题</strong></p>
<blockquote>
<p>金字塔结构最顶端的结构。</p>
<p><em>若不确定主题是什么，跳到第2步</em></p>
</blockquote>
</li>
<li><p><strong>确定读者</strong> ，并<strong>设想主要疑问</strong> ，然后<strong>写出来</strong></p>
<blockquote>
<p>确定文章将面向哪些对象？</p>
<p>希望回答读者关于该主题的哪些疑问？</p>
<p><em>若无法确定，跳到第4步</em></p>
</blockquote>
</li>
<li><p><strong>写出对该疑问的回答</strong></p>
<blockquote>
<p>若还不清楚答案，请注明你有能力回答该疑问</p>
</blockquote>
</li>
<li><p><strong>说明 “背景”</strong></p>
<blockquote>
<p>证明现阶段你能够清晰论述该主要的疑问和答案；具体做法：</p>
<p>把要讨论的主题与”背景”相结合，作出关于该主题的第一个<strong>不会引起争议的表述</strong>。</p>
</blockquote>
</li>
<li><p><strong>指出 “冲突”</strong></p>
<blockquote>
<p>你作出了第一个不会引起争议的表述，开始了与读者进行 疑问/回答式对话。</p>
<p>考虑 “背景” 中发生了哪些 “冲突”，以致引发读者的 “疑问”</p>
</blockquote>
</li>
<li><p><strong>检查 “主要疑问” 和 “答案”</strong></p>
<blockquote>
<p><strong>【确定读者的疑问与你之前设想的疑问是否一致】</strong></p>
<p>在对 “背景” 和 “冲突” 的介绍中，应当直接导致读者提出主要疑问（已在步骤2中列出）</p>
<p>否则，必须要重新介绍 “背景” 中的 “冲突”，使之可以直接导致读者提出主要疑问。</p>
<p>若 “背景” 中的 “冲突” 与 主要疑问对不上，则必须重新构思</p>
</blockquote>
</li>
</ol>
<p><em>自上而下构建金字塔</em></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图3-1_自上而下构建金字塔.png" width="%"></p>
<p><em>P35 图3-1 金字塔结构中互相关联的各要素</em></p>
<p><br></p>
<h3 id="自下而上法"><a href="#自下而上法" class="headerlink" title="自下而上法"></a>自下而上法</h3><blockquote>
<p>当你无法确定主题、读者心中的疑问，无法构造金字塔的顶端，可以向下移动一个层次，从<strong><u>关键句层次</u></strong>上着手。</p>
</blockquote>
<p><strong>步骤</strong></p>
<ol>
<li>列出向表达的<strong><u>所有</u></strong>观点<ul>
<li>行动性思想</li>
<li>描述性思想</li>
</ul>
</li>
<li>找出各要点之间的<strong><u>逻辑关系</u></strong></li>
<li>得出结论</li>
</ol>
<br>

<h3 id="初学者事项"><a href="#初学者事项" class="headerlink" title="初学者事项"></a>初学者事项</h3><ol>
<li><p>一定先搭结构，先尝试自上而下法</p>
</li>
<li><p>序言先写背景，将背景作为序言的起点</p>
<blockquote>
<p>一旦你知道自己想在序言的主体部分说什么（背景、冲突、疑问和回答），你就可以根据你所希望产生的效果，按任何顺序写出这些内容。选择不同的顺序会影响文章的风格</p>
</blockquote>
</li>
<li><p>多花时间思考序言，不要省略</p>
<blockquote>
<p>序言是你思考为什么采取行为的原因/目的</p>
</blockquote>
</li>
<li><p>将历史背景放在序言中</p>
<blockquote>
<p>正文部分应当只包括思想，思想只能以逻辑方式相互联系</p>
</blockquote>
</li>
<li><p>序言仅涉及读者不会对其真实性提出质疑的内容</p>
</li>
<li><p>在关键句层次上，更宜选择归纳推理而非演绎推理</p>
</li>
</ol>
<p><br></p>
<h2 id="序言的具体写法"><a href="#序言的具体写法" class="headerlink" title="序言的具体写法"></a>序言的具体写法</h2><blockquote>
<p>以讲故事的形式编写序言；</p>
<p>序言应概述读者已知的信息，并将这些信息与文章将要回答的疑问建立联系；然后作者就可以把全部精力放在回答问题上</p>
</blockquote>
<h3 id="序言的讲故事结构"><a href="#序言的讲故事结构" class="headerlink" title="序言的讲故事结构"></a>序言的讲故事结构</h3><blockquote>
<p>讲故事的形式，是为了让读者抛开复杂的思想，专注于你的话题。同时激发读者兴趣，吸引注意力。</p>
</blockquote>
<ol>
<li>“背景” ：一个特定的时间和空间</li>
<li><strong>“冲突” ：能推动情节发展，并引发读者 “疑问” 的因素</strong>   <em>（并不是严格意义上的所谓冲突）</em></li>
<li>“疑问” ：读者产生的 “疑问”</li>
<li>“回答” ：仅对该疑问的 “回答”  ( 为什么 - 回答必须是原因 )</li>
</ol>
<p><br></p>
<p><strong>序言不同顺序的呈现形式</strong></p>
<blockquote>
<p>结构必须是 ”背景 - 冲突 - 疑问 - 回答“；但呈现的顺序可以有所变化</p>
</blockquote>
<ol>
<li>标准式：背景- 冲突 -答案</li>
<li>开门见山式：答案 - 背景 - 冲突</li>
<li>突出忧虑式：冲突 - 背景 - 答案</li>
<li>突出信心式：疑问 - 背景 - 冲突 - 答案</li>
</ol>
<p><br></p>
<p><strong>关键句要点</strong></p>
<blockquote>
<p>不仅回答由文章主题引起的新疑问，还要呈现文章的框架结构。</p>
</blockquote>
<p>列出的关键句要点必须让读者在开始阅读的<strong>30秒内</strong>就能了解你的<strong>全部思路</strong>。随后的内容只是解释/支持这些观点，就能顺利地将读者请到一个适当的位置上。</p>
<p><strong><u>关键句要点，必须是完整的思想，完整的句子。</u></strong>而不仅是一个名词。例如，”成功的前提和条件“等</p>
<p><br></p>
<p><strong>序言与要点</strong></p>
<ol>
<li>全文序言：提示全主题的信息</li>
<li>要点引言：提示这一主题与全主题的关系</li>
</ol>
<ol>
<li>序言的目的是 <strong>”提示“</strong> 读者而不是 <strong>”告诉“</strong> 读者某些信息</li>
<li>序言必须包含<strong>讲故事</strong>的三个要素，<strong>”背景“、”冲突“、”答案“</strong></li>
</ol>
<p>全篇文章的中心<strong>都依赖于</strong>读者提出的第一个疑问，即<strong>初始疑问</strong>。这种疑问全篇只能有一个，并且是通过序言来引出的。</p>
<p><br></p>
<h3 id="序言的常见模式"><a href="#序言的常见模式" class="headerlink" title="序言的常见模式"></a>序言的常见模式</h3><p><strong>常见的4类问题</strong></p>
<ol>
<li><strong>What - 我们应该做什么？</strong><ul>
<li>不知道做什么？</li>
<li>有多个可供选择的内容，不知道做哪一个？</li>
</ul>
</li>
<li><strong>How  - 我们应该如何做？</strong></li>
<li><strong>Do or not - 我们是否应该这样做？</strong></li>
<li><strong>Why  - 为什么会发生这种情况？</strong></li>
</ol>
<p><strong>关于解释做法的方式</strong> （我们应该如何做？）</p>
<ol>
<li><p>告诉读者他们之前没做过的事</p>
</li>
<li><p>告诉读者如何正确做他们正在做的事</p>
<ul>
<li><strong>分别列出</strong>两个对象之间的流程/因素</li>
<li>两者之间的<strong>差异决定了关键句的要点</strong></li>
</ul>
<blockquote>
<p>涉及两个对象之间的比较时</p>
</blockquote>
</li>
</ol>
<p><strong>关于比较选择的方式</strong>（我们应该做什么）</p>
<blockquote>
<p>一旦选择了某种方案，必须回答 ”为什么此方案优于其他方案？“</p>
</blockquote>
<ol>
<li><p>当事先没有可选方案时，即回答 ”我们应该做什么“</p>
</li>
<li><p>最好的方法：围绕<strong><u>评估的标准（即该行为产生的结果）</u></strong>撰写关键句要点。</p>
<ul>
<li>若有最佳方案，则表明选择方案C的主要原因，放弃方案A与B的主要原因来进行（而非通过否定A与B，来确定C；我们选择C是因为它能解决问题，根本没有必要提及A和B。若读者要求给出可供选择的方案，很可能时因为他的问题没有被清晰地既定，即R2是模糊不清的；这种情况下，读者真正想要的不是所有可选的解决方案，而是可供选择的R2）</li>
</ul>
</li>
</ol>
<ul>
<li><p>如果任何一种方案都无法达到你的目标/无法准确描述目标，此时你的目标是围绕 <strong>“替代目标”</strong>写作，而不是 “替代方案”；</p>
<ul>
<li><p>关键句应该为 <strong>”选择哪种方案，取决于你希望达到的目标“</strong> </p>
<blockquote>
<p>各个方案之间相互比较意义不大，重要的是如何与R2比较。由于没有明确而的R2，我们在做的其实是界定它应该是什么</p>
</blockquote>
</li>
<li><p>下一层次的关键句应该是各方案<strong>产生的结果</strong> “如果你希望取得稳定的销售额，应该选择方案A”</p>
</li>
</ul>
</li>
</ul>
<p><em>转化为替代目标的写作</em></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图4-11_转化为替代目标的写作.png" width="%"></p>
<p><em>P76 图4-11 对”疑问”的回答</em></p>
<p><strong>关于介绍流程的改进</strong></p>
<blockquote>
<p>想象改变前和改变后流程中的每一步，确定这些改变就是你想要的</p>
</blockquote>
<ol>
<li>读者对新旧流程都了解。他的问题：是否应该实施新流程 或 应该怎样实施</li>
<li>读者不了解流程是怎么工作的，更不知道问题所在。他的问题：准备怎么改变，以及为什么要改变</li>
</ol>
<p><br></p>
<h2 id="演绎推理与归纳推理"><a href="#演绎推理与归纳推理" class="headerlink" title="演绎推理与归纳推理"></a>演绎推理与归纳推理</h2><blockquote>
<p>在金字塔横向结构中，同一组的思想之间存在着逻辑顺序，具体的顺序取决于该组思想之间的逻辑关系是演绎推理关系、还是归纳推理关系。</p>
<p>演绎推理：位于演绎推理过程上每个思想均有前一个思想导出，重点是演绎推理过程的最后一步，即由 ”因此“ 得出的结论。</p>
<p>归纳推理：将一组具有共同点的思想、事实归类分组，并概括共同性</p>
</blockquote>
<h3 id="演绎推理"><a href="#演绎推理" class="headerlink" title="演绎推理"></a>演绎推理</h3><blockquote>
<p>演绎推理比归纳推理更容易实现，人们在思维时会更多地使用演绎推理。但在写作时却显得比较繁琐。</p>
<p>在<strong><u>关键句层次上</u></strong>尽量避免使用演绎推理，而用<strong><u>归纳推理</u></strong>取而代之。</p>
</blockquote>
<p><strong>演绎推理的步骤</strong></p>
<ol>
<li>第一个思想是世界上某种现象的表述</li>
<li>第二个思想是<strong>对第一个思想的 [主语] 或 [谓语] 做出的表述</strong></li>
<li>第三个思想从以上两个思想中得出结论</li>
</ol>
<p><strong>也可以是如下三个步骤：</strong></p>
<ol>
<li>出现的问题或存在的现象</li>
<li>产生问题的原因</li>
<li>解决问题的方案</li>
</ol>
<p><strong>演绎推理的参照标准</strong></p>
<ol>
<li>演绎推理的过程不要超过4个步骤</li>
<li>推导出的结论不要超过2个</li>
</ol>
<p><br></p>
<h3 id="归纳推理"><a href="#归纳推理" class="headerlink" title="归纳推理"></a>归纳推理</h3><blockquote>
<p>同一主题的信息都集中在一起，不同主题之间的界限非常明确。</p>
</blockquote>
<p><strong>完成归纳推理需要的两项技能：</strong></p>
<ol>
<li>正确<strong><u>定义</u></strong>该组思想</li>
<li>准确识别并<strong><u>剔除</u></strong>该组思想中与其他思想<strong><u>不相称的思想</u></strong></li>
<li>通过<strong>自下而上提问的方式</strong>来检查你的推理；并且概括的思想<strong>不能与该层之下的思想抽象层次过多</strong>。</li>
</ol>
<p><strong>归纳推理的步骤：</strong></p>
<blockquote>
<p>最重要的是找到一个能够<strong><u>表示该组所有思想的名词</u></strong>； 这个词必须是<strong><u>单一名词</u></strong></p>
<blockquote>
<p>因为所有表示一类事物的词都是名词</p>
<p>该组思想中必定包含两个及以上该类思想</p>
<p>找不出一个与该名词不相配的思想</p>
</blockquote>
<p>eg：计划、步骤、损害方式</p>
</blockquote>
<p><br></p>
<h3 id="演绎推理与归纳推理的区别"><a href="#演绎推理与归纳推理的区别" class="headerlink" title="演绎推理与归纳推理的区别"></a>演绎推理与归纳推理的区别</h3><ol>
<li>当你进行演绎推理时，<strong>推理过程的第二个思想必须是对第一个思想的主语或谓语的表述；</strong></li>
<li>如果不具有这一特点，就不是演绎推理；而是归纳推理</li>
<li>当你进行归纳推理的时候，<strong>同组中的思想具有类似的主语或谓语，同时你应当能用一个单一的名词来概括</strong>，以检查你归类是否恰当</li>
</ol>
<p>归纳过程中，通常需要保持<strong>主语不变，谓语改变；</strong>或者<strong>主语改变，谓语不变</strong> 来进行归纳；</p>
<p><br></p>
<h3 id="不同情况下对-关键句层次-选择不同的逻辑方式"><a href="#不同情况下对-关键句层次-选择不同的逻辑方式" class="headerlink" title="不同情况下对 [关键句层次] 选择不同的逻辑方式"></a>不同情况下对 [关键句层次] 选择不同的逻辑方式</h3><p>【对关键句层次，尽量使用归纳推理法】<em>（不包括关键句层次以下的层次）</em></p>
<blockquote>
<p>对于演绎推理 与 归纳推理的争论，常见的问题可能是：</p>
</blockquote>
<ul>
<li>应该先告诉读者为什么要进行改革，然后告诉读者要采取的措施？</li>
<li>应该先告诉读者必须进行改革及进行的措施，然后再告诉读者为什么要采取这样的改革？</li>
</ul>
<p><em>先说明what再说明why</em></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图5-5_先说明what再说明why.png" width="%"></p>
<p><em>P87 配图 5-5 用归纳法论述更清晰、更简洁</em></p>
<p>建议<strong>最好先说明行动 (what)，后说明原因 (why)；</strong></p>
<blockquote>
<p>大部分情况下，采取哪些行动才是读者最关心的；</p>
<p>极少情况下，会关系采取行为的原因</p>
</blockquote>
<p><strong>采取演绎推理的两种情况：</strong></p>
<ol>
<li>当你在金字塔顶端表达的思想与读者期望的或预想的不一样时，建议采取先说明原因，在表述具体行为的方式。即<strong>读者更关心”为什么“的情况下，需要使用演绎表达法；</strong></li>
<li>若不先给予解释，读者无法理解需要采取的行动。</li>
</ol>
<blockquote>
<p>商务文章的读者很少属于以上两种情况。</p>
</blockquote>
<p>在某个段落中使用演绎法是合适的，读者也是容易理解的；若在较高的层次上，归纳法总是比演绎法更容易理解。</p>
<blockquote>
<p>如果读者必须读完好几页才能找到演绎推理的第一步和第二步之间的关系，读者一般是无法理解演绎推理之间的关系的。</p>
</blockquote>
<p><br></p>
<h1 id="2-思考的逻辑"><a href="#2-思考的逻辑" class="headerlink" title="2. 思考的逻辑"></a>2. 思考的逻辑</h1><p><strong>写作时机的掌握：</strong></p>
<ol>
<li>当你对文章结构的思考已经深入到关键句层次的下一个层次时，你就应该开始写作了。</li>
<li>更低层次的思想不要在构思阶段完成，而应放在实际的写作过程中完成。</li>
</ol>
<p><strong>罗列并不是一个好的表达方式</strong></p>
<ol>
<li>罗列似乎已经是一种普遍的倾向。虽然罗列不失为一种将思想排列出来并审视的方法，但我们不能止步于此，应当进一步思考，以<strong>保证每组中的各个思想之间确实存在某种内在的逻辑关系</strong>，然后<strong>明确说明这种逻辑关系的隐含意义</strong>。</li>
<li><strong>研究各个组的思想</strong>是思考过程的重心，但也是一项艰难的工作，因此经常被忽略。</li>
<li>完成思考需要的两个步骤，这一过程称为 ”冷静思考“<ul>
<li>确定逻辑顺序</li>
<li>概括各组思想</li>
</ul>
</li>
</ol>
<p><br></p>
<h2 id="应用逻辑顺序"><a href="#应用逻辑顺序" class="headerlink" title="应用逻辑顺序"></a>应用逻辑顺序</h2><p>归纳分组活动仅有的3种方式：</p>
<ol>
<li><p><strong>前后因果关系（时间/步骤顺序）</strong></p>
</li>
<li><p>将整体分割为部分、或将部分组成整体</p>
</li>
<li><p>将类似事物<strong>按重要性归为一组</strong></p>
<blockquote>
<p>每个问题都具有一个共性，但所具有的共性的程度各不相同； <em>（如果不存在这种差异，就无法从这方面进行区分）</em></p>
</blockquote>
</li>
</ol>
<p><strong>逻辑顺序呈现的是一个过程，而这个过程取决于你需要回答的问题。</strong></p>
<p><em>根据逻辑顺序呈现内容</em></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_表6-2_根据逻辑顺序呈现内容.png" width="%"></p>
<p><em>P127 表6-2 需要回答的问题</em></p>
<p><br></p>
<h3 id="时间顺序"><a href="#时间顺序" class="headerlink" title="时间顺序"></a>时间顺序</h3><blockquote>
<p>按照采取行动的顺序依次达到某一结果的行动</p>
</blockquote>
<p><strong>根据结果寻找原因</strong></p>
<ol>
<li>同一组行动是为了达到同一个特定的结果。如果某个过程或流程较长，且包括许多步骤，那就会存在多个层次的原因和结果。事实上，<strong><u>每组思想最好不要超过4个或5个</u></strong>。<strong>如果某一组思想超过5个，那么其中某些思想之间很可能缺乏紧密的联系。</strong></li>
<li>即使各个步骤的却应该按照以上顺序进行，但这些步骤可能并<strong><u>不处于同一个抽象层次上</u></strong>。其中一些步骤是为了实现另一些步骤；所以，在总的过程中存在一些具有<strong><u>完整结构的子过程</u></strong>。</li>
<li>检验各行动的因果关系，以此来进行分组：想象采取行动之后<strong>产生的结果</strong>，这个结果是为了<strong>先于另一项行动</strong>，还是为了<strong>实现另一个行动</strong></li>
</ol>
<p><br></p>
<h3 id="结构顺序"><a href="#结构顺序" class="headerlink" title="结构顺序"></a>结构顺序</h3><blockquote>
<p>结构顺序就是当你使用示意图、地图、图画或者照片想象某事物时的顺序。</p>
<p>某事物可以是概念性的，可以是一个物体，也可以是一个过程。但这个事物必须被合理地划分入不同的部分。</p>
</blockquote>
<p><strong>严格遵从 [MECE原则]  “创建” 逻辑结构</strong></p>
<ol>
<li>相互独立 - Mutually Exclusive ； 没有重叠；<strong>各个部分之间是否有明显的排他性以及分割点；</strong></li>
<li>完全穷尽 - Collectively Exhaustive ； 没有遗漏；<strong>各部分加起来是否能组成整体</strong></li>
</ol>
<p>当一个事物可以被多种方式划分时，采取哪种划分方式其实是<strong><u>一种倾向性的呈现</u></strong>。</p>
<ol>
<li><em>如果划分时强调活动本身，那么各部分展现的是一个逻辑过程（流程），因此采取时间顺序。</em></li>
<li><em>如果划分时强调地点，那么各部分展现的是一个地理状态，应采取结构顺序。</em></li>
<li><em>如果划分时强调与某一产品或市场有关的活动，那么划分就是一种归类。各部分应按照重要性顺序进行排序。</em></li>
</ol>
<p><strong>按照 [自上而下、自左而右] 的方式 “描述”逻辑结构</strong></p>
<p><br></p>
<h3 id="程度顺序"><a href="#程度顺序" class="headerlink" title="程度顺序"></a>程度顺序</h3><p>重要性顺序。一组因为具有某种共同特点而被组合在一起的事物所采取的特点；</p>
<p><strong>创建适当的分组</strong></p>
<ol>
<li><p>明确指出每组中的所有问题具有共同特性，并确保所有具备该特性的问题被列入该组。</p>
</li>
<li><p>根据重要性程度进行排序，先重要后次要</p>
<blockquote>
<p>除非是处于情绪的考虑，采取将最重要的放在最后的方式产生戏剧性的效果</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h2 id="概括各组思想"><a href="#概括各组思想" class="headerlink" title="概括各组思想"></a>概括各组思想</h2><p>概括各组思想的行为实际上是<strong>完成思考的行为</strong>。需要确保思想属于同一组，应抽象、提炼、概括思想精华；</p>
<h3 id="总结句避免使用-“缺乏思想”-的句子"><a href="#总结句避免使用-“缺乏思想”-的句子" class="headerlink" title="总结句避免使用 “缺乏思想” 的句子"></a>总结句避免使用 “缺乏思想” 的句子</h3><ol>
<li><p>“缺乏思想” 的句子不能激发读者往下读，还可能使读者根本无法了解你表达的意思</p>
</li>
<li><p>“缺乏思想” 的句子会<strong>掩盖思考不完整</strong>的事实，使你错失一个进行有逻辑性和创造性思考的机会</p>
</li>
<li><p>当你得出一个概括性的思想，可用两种方式延续你的思路：</p>
<ul>
<li><strong>对其做进一步评价（演绎法）</strong></li>
<li><strong>找出与之类似的思想（归纳法）</strong></li>
</ul>
<blockquote>
<p>使用这一过程之前必须确保原有的概括性思想时合理的</p>
</blockquote>
</li>
<li><p><strong>思想表达的方式与分组无关</strong>， 可以是行动性语句（告诉对方做什么），也可以是描述性语句（告诉对方关于某事的情况）</p>
<ul>
<li>概括<strong>行动性思想</strong> （介绍采取的行动、行为、动作、步骤、流程）时，应说明采取行动后<strong>取得的结果（效果、达到的目标）</strong></li>
<li>概括<strong>描述性思想</strong>（介绍背景、信息）时，应说明这些思想<strong>具有的共同点的含义</strong></li>
</ul>
</li>
</ol>
<p><br></p>
<h3 id="总结句要说明行动产生的结果-目标，这些结果必须是可衡量的"><a href="#总结句要说明行动产生的结果-目标，这些结果必须是可衡量的" class="headerlink" title="总结句要说明行动产生的结果/目标，这些结果必须是可衡量的"></a>总结句要说明行动产生的结果/目标，这些结果必须是可衡量的</h3><ol>
<li><p>当你罗列出一系列你认为实现某一目标应当采取的行动时，你必须先<strong><u>指出这些行动应当达到的结果</u></strong>，然后才能判断是否遗漏了任何行动。</p>
<blockquote>
<p>理顺思路最简单的办法：想象自己确实采取了这些行动，根据这些行动产生的明确结果，修改行动步骤的措辞</p>
</blockquote>
</li>
<li><p>帮助你梳理思路、轻松表达的技巧：</p>
<ul>
<li>在将各行动（步骤、流程）联系起来之前，先<strong>用明确的语句描述</strong>各行动（步骤、流程）</li>
<li>找出明显的因果关系组合，尽量将每一组中的行动控制在5个以下</li>
<li><strong>直接从这些行动、步骤，概括行动的结果与目标</strong> </li>
</ul>
</li>
</ol>
<p><strong>总结句要使用明确的词汇/语句</strong></p>
<ol>
<li><p>对于要达到的<strong>结果，必须是可衡量的</strong>。可以用某种明确的方式判断是否实现了这一结果。</p>
</li>
<li><p>对于这个结果，进行<strong><u>反向思考</u></strong>。<strong>想象采取了这些行动，这些行动能达到概括的结果吗？</strong> 并以此来修改行动性思考的措辞  <em>eg: (1)为了达到目标X，需要做Y； (2)想象已经做了Y，能达到目标X吗？</em></p>
<blockquote>
<p>使用明确的语言表达最终结果是非常必要的。除非你使用的语言达到了这一要求，否则你根本无法客观判断你列出的行动、步骤，是否包括了所有应当包括的步骤。</p>
</blockquote>
</li>
</ol>
<p><strong>区分行动步骤的层次</strong></p>
<ol>
<li>两个行动之间，先做哪个是可以选择的，属同一层次</li>
<li>两个行动之间，必须要先做哪个的，属不同层次</li>
</ol>
<p>对于没有本质区分的各个行动，<strong>根据产生的结果进行分类</strong>。</p>
<p><strong>直接概括行动的结果</strong></p>
<ol>
<li><p>该组行动、步骤之间必须相互独立(不重叠)，完全穷尽(无遗漏)</p>
</li>
<li><p>总结概括性语句，必须说明完成各行动步骤之后导致的<strong>直接结果</strong>，且是<strong>可衡量的</strong>；</p>
<blockquote>
<p>对于这个结果，进行<strong><u>反向推导</u></strong>。<strong>想象采取了这些行动，这些行动能达到概括的结果吗？</strong> 并以此来修改行动性思考的措辞  <em>eg: (1)为了达到目标X，需要做Y； (2)想象已经做了Y，能达到目标X吗？</em></p>
<blockquote>
<p>使用明确的语言表达最终结果是非常必要的。除非你使用的语言达到了这一要求，否则你根本无法客观判断你列出的行动、步骤，是否包括了所有应当包括的步骤。</p>
</blockquote>
</blockquote>
</li>
<li><p>可通过<strong>分别确定主语、谓语</strong>的方式来拆解各个复杂的句子  <em>P148</em></p>
<p>​</p>
</li>
</ol>
<p><br></p>
<h3 id="找出结论之间的共性"><a href="#找出结论之间的共性" class="headerlink" title="找出结论之间的共性"></a>找出结论之间的共性</h3><ol>
<li>列出一些可能值得思考的思想 （常止于第一步）</li>
<li>找出这些思想之间的<strong>共同点</strong>，并证明这些思想确实属于同一类，因而有理由与其他思想分开（关键1）</li>
<li>明确说明这些思想之间的<strong>共同点所具有的普遍意义</strong>，即推出一个新思想（关键2）<em>（至此，才完成思维过程）</em></li>
</ol>
<p><strong>结构上的共性</strong></p>
<ol>
<li><p>针对同一类主语</p>
</li>
<li><p>针对同一类谓语（动作或对象）</p>
</li>
<li><p>具有同一类隐含的思想</p>
<blockquote>
<p>“同一类” 不是指完全相同，而是指属于同一范畴，能够用同一个名词表示的</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>如果无法在一组被列为”问题”、”原因” 或 “结论” 的思想中找出明确的逻辑关系，这说明其中必定存在问题。你必须重新思考。</p>
</blockquote>
<p>【<strong>找到概括性语句的主要价值，可以帮助你发现自己的真实思想。</strong> 】</p>
<p>完成提炼总结概括的完成思考过程：图7-10 的呈现形式，虽然简单，但简洁地表达了核心思想；<strong>“富有思想” 的图表</strong></p>
<p><em>富有思想的图表</em></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图7-10_富有思想的图表.png" width="%"></p>
<p><em>P159 图7-10 有吸引力的市场</em></p>
<p><br></p>
<ol>
<li><strong>不能简单地把一系列思想堆放在一起</strong>，并假定读者能够看出其中的意义。<strong>每一组思想都隐含着一个总结性的思想，这个思想是能够呈现该组思想之间关系的本质。</strong></li>
<li>进行<strong>任何一次分组</strong>，都要<strong>问自己 “为什么我只列出了这些思想，而不是列出其他思想呢？</strong>“<ul>
<li>这些思想都具有<strong>某种共性</strong>，而且是以这种方式<strong>相互关联的仅有的</strong>一些思想<ul>
<li>在这种情况下，该组的<strong>概括性思想</strong>应当是该组思想<strong>共性所隐含的意义</strong></li>
</ul>
</li>
<li>这些思想都是<strong>实现某一结果而必须同时采取</strong>的行动<ul>
<li>这种情况下，该组的<strong>概括性思想</strong>应当是表明采取以上行动后产生的<strong>直接结果</strong></li>
</ul>
</li>
</ul>
</li>
</ol>
<p><br></p>
<h1 id="3-解决问题的逻辑"><a href="#3-解决问题的逻辑" class="headerlink" title="3. 解决问题的逻辑"></a>3. 解决问题的逻辑</h1><blockquote>
<p>序言的作用 $\to$ 对问题定性</p>
<p>金字塔结构的作用 $\to$ 分析问题和寻找解决方案</p>
</blockquote>
<p>提高报告的秘诀：</p>
<ol>
<li>界定问题</li>
<li>有条理地搜集和分析数据，转化为金字塔形式</li>
</ol>
<p><br></p>
<h2 id="界定问题"><a href="#界定问题" class="headerlink" title="界定问题"></a>界定问题</h2><p>存在问题，是因为现状的结果与期望的结果之间有差距；</p>
<p>非期望结果R1 - Undesired Result</p>
<p>期望结果R2 - Desired Result</p>
<h3 id="界定问题的框架"><a href="#界定问题的框架" class="headerlink" title="界定问题的框架"></a>界定问题的框架</h3><p>要去了解问题存在的背景，以及在其中的发展历史。</p>
<p>问题，是你已有的（现状）与想要的（目标）之间存在的差距。这种差距是来自某一背景，并在一系列特定的条件下产生的。所以，了解在其背景中的发展历史，是确定差距的性质和把握其重要性最基本的过程。</p>
<p>你的解决方案所处的阶段</p>
<ol>
<li>不知道做什么？ 给出What</li>
<li>不知道这个措施对不对？ 给出 Do or not</li>
<li>不知道怎么做？给出How</li>
<li>做了之后，仍然没有达到结果？Do what, not success</li>
</ol>
<p><br></p>
<h3 id="展开问题的各要素"><a href="#展开问题的各要素" class="headerlink" title="展开问题的各要素"></a>展开问题的各要素</h3><p>4个要素：</p>
<ol>
<li><p>序幕 - Opening Scence - 某一特定的场景</p>
</li>
<li><p>困扰 - Disturbing Event - <strong>推动剧情发展的因素，并引发非期望结果R1</strong></p>
<blockquote>
<p>某件事情的发生打破了原本稳定的环境</p>
<p>困扰的来源：内部 、 外部因素</p>
</blockquote>
</li>
<li><p>现状，非期望结果 - R1, Undesired Result</p>
</li>
<li><p>目标，期望结果 - R2, Desired Result</p>
<blockquote>
<p>可衡量的具体目标；若R1是机会，则希望利用它</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>展开问题的各个部分，目的是搭建一个粗略但清晰的框架，帮助找出你理解问题上的差距，并围绕这些差距写序言</p>
</blockquote>
<p><em>通过各要素界定问题</em></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图8-2_通过各要素界定问题.png" width="%"></p>
<p><em>P168 图8-2 问题源于现有背景</em></p>
<p><br></p>
<h3 id="发掘读者的疑问"><a href="#发掘读者的疑问" class="headerlink" title="发掘读者的疑问"></a>发掘读者的疑问</h3><p><strong>最常见的问题</strong></p>
<ol>
<li>不知道如何从R1（现状）到R2（目标） - what</li>
<li>知道如何从R1到R1，但不确定是否正确 - do or not</li>
<li>知道从R1到R2的正确方案，但不知道如何实施 - How</li>
</ol>
<p><strong>最常见问题的变形</strong></p>
<ol>
<li>知道从R1到R2的解决方案，并且已经实施，但由于某种原因行不通 - do it , not success</li>
<li>确定了好几个方案，但不知道选哪一个 - choice</li>
</ol>
<p><strong>不常见的情形：</strong></p>
<ol>
<li>知道R1，但不能具体描述R2，所以无法找到解决方案</li>
<li>知道R2，但不清楚自己是是否处于R1（典型的标杆对比）</li>
</ol>
<p><em>初始问题的种类</em></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图8-10_初始问题的种类.png" width="80%"></p>
<p><em>P177 图8-10 确定读者究竟想找哪些问题的解决方案</em></p>
<p><br></p>
<h3 id="开始写序言"><a href="#开始写序言" class="headerlink" title="开始写序言"></a>开始写序言</h3><p><br></p>
<h2 id="结构化分析问题"><a href="#结构化分析问题" class="headerlink" title="结构化分析问题"></a>结构化分析问题</h2><p>分析问题的方法</p>
<ol>
<li>提出假设</li>
<li>设计试验，根据产生的结果排除一个/多个假设</li>
<li>通过试验得出明确的结论</li>
<li>采取补救措施</li>
</ol>
<h3 id="设计诊断框架"><a href="#设计诊断框架" class="headerlink" title="设计诊断框架"></a>设计诊断框架</h3><blockquote>
<p>根据仅有的3种逻辑顺序来设计 - (1)因果/时间关系；(2)结构顺序；(3)归类分组</p>
</blockquote>
<p><strong>寻找因果关系</strong></p>
<ol>
<li>财务结构 - 涉及数学公式，均可用因果关系归类 <em>eg: 利润 = 收入 - 成本</em></li>
<li>任务结构 - </li>
</ol>
<p><strong>结构顺序</strong></p>
<p><strong>归类分组</strong></p>
<blockquote>
<p>将所有可能的原因按相似性分类；前提是这种预先的分类有利于综合分析各种事实</p>
</blockquote>
<p><br></p>
<h1 id="4-演示的逻辑"><a href="#4-演示的逻辑" class="headerlink" title="4. 演示的逻辑"></a>4. 演示的逻辑</h1><p>分别介绍了书面呈现、PPT呈现的一些基本原则</p>
<h2 id="书面上呈现金字塔"><a href="#书面上呈现金字塔" class="headerlink" title="书面上呈现金字塔"></a>书面上呈现金字塔</h2><blockquote>
<p>应该让读者在30秒之内理解作者的整体思维架构，包括序言、中心思想和关键句要点。</p>
</blockquote>
<h3 id="突显文章的框架结构"><a href="#突显文章的框架结构" class="headerlink" title="突显文章的框架结构"></a>突显文章的框架结构</h3><ul>
<li>当支持关键句的段落只有1个时，只需使用<strong><u>下划线</u></strong>即可。</li>
</ul>
<ul>
<li>当支持关键句的段落超过2个时，有多种方式。</li>
</ul>
<ol>
<li><p>多级标题</p>
<blockquote>
<p>一个标题代表的思想是一组思想中的一个，一组中所有思想共同解释/支持该组的整体思想</p>
</blockquote>
<ul>
<li><p>不同层次的思想，用不同的标记区分</p>
</li>
<li><p>层次越低的思想离左侧越远</p>
</li>
<li><p>同一层次的思想采用同一表现形式</p>
</li>
<li><p>相同的思想应使用<strong>相同的句型</strong>（同一组内之间）</p>
<ul>
<li>所谓句型，指需与第一句中第一个词的类型（动词/名词）保持相同<ul>
<li><em>协调各项活动</em>   （第一个词为动词）</li>
<li><em>实施各项改革</em> </li>
</ul>
</li>
</ul>
</li>
<li><p>标题与正文应分开考虑</p>
</li>
<li><p><strong>每组标题前应集中提前介绍</strong></p>
<blockquote>
<p><strong>大标题下应该有一段话，集中介绍下面标题的主要内容；</strong>不要紧接着文章题目写每一章的标题，也不要每一章标题写每一节标题</p>
</blockquote>
</li>
<li><p>标题用词应提炼思想的精髓</p>
</li>
</ul>
</li>
<li><p>下划线</p>
<blockquote>
<p>下划线是为了方便阅读和提高阅读速度</p>
</blockquote>
</li>
</ol>
<h3 id="上下文之间要有过渡"><a href="#上下文之间要有过渡" class="headerlink" title="上下文之间要有过渡"></a>上下文之间要有过渡</h3><blockquote>
<p>各种不同的过渡方法是为了抓住读者的思想，把他拉回到他应该属于的地方，让读者理解你想说的内容</p>
</blockquote>
<p><strong>总结各部分内容</strong></p>
<p>当一个章节特别长或特别复杂时，可以停下来做一个完整的总结后再继续往下写；</p>
<p><strong>说明下一步行动</strong></p>
<p>如果你的文章是建议读者采取一系列你认为他有可能采取的行动那个，你就有必要说明下一步的措施。并且可以以 “下一步措施” 来作为章节的题目；</p>
<p><br></p>
<h2 id="在PPT演示文稿中呈现金字塔"><a href="#在PPT演示文稿中呈现金字塔" class="headerlink" title="在PPT演示文稿中呈现金字塔"></a>在PPT演示文稿中呈现金字塔</h2><ol>
<li>文字幻灯片应该只包含最重要的、经过适当分组和总结的思想</li>
<li>演示文稿应图文并茂，使用各种图表相配合<ul>
<li><strong>文字</strong>幻灯片<ul>
<li>说明框架结构</li>
<li>强调重要的结论、观点</li>
</ul>
</li>
<li><strong>图表</strong>：解释复杂的关系、原因</li>
</ul>
</li>
<li>房间里听众最感兴趣的不是幻灯片，而是你。幻灯片只是视觉上的辅助手段。因为，<strong>你说的和你演示的应该有明显的区别</strong></li>
<li>理想的比例，图表90%，文字10%</li>
</ol>
<h3 id="设计文字幻灯片"><a href="#设计文字幻灯片" class="headerlink" title="设计文字幻灯片"></a>设计文字幻灯片</h3><p><strong>清楚你要说的内容</strong></p>
<ol>
<li>不要把文字浪费在那些可以通过口头表达的转折性或介绍性语言上</li>
<li>文字幻灯片最好只用于强调金字塔中的主要论点</li>
</ol>
<p><strong>清楚你要演示的内容</strong></p>
<ol>
<li><p>每次只演示和说明<strong>一个论点</strong></p>
<blockquote>
<p>除非你想先列出摘要或列表中的一组论点</p>
</blockquote>
</li>
<li><p>论点应使用完整的陈述句，而不是 “缺乏思想” 的标题性语言</p>
</li>
<li><p>文字应尽量剪短</p>
</li>
<li><p>使用简单的数字。</p>
<blockquote>
<p>数字越简单越好，比如490万美元就比487987美元更容易让人记住</p>
</blockquote>
</li>
<li><p>字号应足够大</p>
</li>
</ol>
<p><em>一次只阐述一个内容</em> </p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图11-3_一次只阐述一个内容.png" width="%"></p>
<p><em>P244 图11-3 用幻灯片呈现金字塔中的主要思想</em></p>
<p><br></p>
<h3 id="设计图表幻灯片"><a href="#设计图表幻灯片" class="headerlink" title="设计图表幻灯片"></a>设计图表幻灯片</h3><ol>
<li><p>图表幻灯片传递的信息应<strong>简单易懂</strong>。</p>
<blockquote>
<p>读者没有几乎对它们自己研究找出各个部分的含义。同时，如果图表过于复杂、详细，就会把大量时间浪费在解释上，而不是用在讨论上</p>
</blockquote>
</li>
<li><p>即使使用复杂的图表，一份演示文稿中复杂图表的数量 &lt; 3个</p>
</li>
<li><p>制作图表幻灯的步骤： <strong>问题 $\to$ 答案作为标题 $\to$ 选择图表样式</strong></p>
<ol>
<li>确定想用图表表达的<strong>问题</strong></li>
<li>把<strong>答案</strong>作为图表的标题</li>
<li>选择最适合表达论点的<strong>图表样式</strong></li>
</ol>
<blockquote>
<p>最后一步才是选择图表样式，千万不要本末倒置；</p>
</blockquote>
</li>
<li><p>图表的<strong>标题</strong>一定要<strong>直接传递信息</strong></p>
<ol>
<li><p>传递更清晰的信息</p>
<blockquote>
<p>“各地区利润份额” 所包含的信息比 “西部地区约占利润的一半” 少得多</p>
</blockquote>
</li>
<li><p>最大限度减少混淆</p>
</li>
<li><p>把读者的注意力集中在你希望强调的数据</p>
<blockquote>
<p>因为观众有不同的观点、背景和兴趣，关注的角度也不同；即使同一张图表，不同的人会有不同的理解；</p>
</blockquote>
</li>
</ol>
</li>
</ol>
<p><br></p>
<h2 id="在字里行间呈现金字塔"><a href="#在字里行间呈现金字塔" class="headerlink" title="在字里行间呈现金字塔"></a>在字里行间呈现金字塔</h2><p><strong>我们的大脑是通过图像而不是文字来进行理性思维的，因为这样效率更高。图像能把大量的事实综合成简单抽象的概念。</strong></p>
<p>遣词造句要做到条理清晰，必须从 <strong>“看见”</strong> 你要说的内容开始。有了图像后，只需简单地把它复制成文字；读者反过来也能从你的文字中重新在大脑中化图像，这样不仅理解了你的思想，而且过程本身也是一种享受。</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图12-1_图像更易于理解.png" width="%"></p>
<p><em>P255 图12-1 图像更易于理解</em></p>
<h3 id="在大脑中画图像-记忆图像"><a href="#在大脑中画图像-记忆图像" class="headerlink" title="在大脑中画图像 - 记忆图像"></a>在大脑中画图像 - 记忆图像</h3><p>记忆图像能在阅读过程中，帮助你逐字逐句记忆段落和从中提取信息。为了理解和记忆，<strong>每次阅读时必须在大脑中画图像</strong>。</p>
<p>对于一些抽象的观点，可以用<strong>骨架结构</strong>代替图像来说明。</p>
<blockquote>
<p>骨架图。通常仅包括一种或几种<strong>几何图形（圆形、直线、矩形、椭圆形等）</strong>，以程式化/草图的形式编排，加上<strong>箭头</strong>之类表明方向与相互关系。</p>
</blockquote>
<p><br></p>
<h3 id="把图像复制成文字"><a href="#把图像复制成文字" class="headerlink" title="把图像复制成文字"></a>把图像复制成文字</h3><blockquote>
<p>做到条理清晰的有效方式，强迫自己想象各种思想之间的内在关系。头脑里有了清晰的图像后，就能立刻把它转换成清楚的句子，并在记忆中以图像的形式储存记忆。</p>
</blockquote>
<p>以图像形式储存记忆非常重要，因为阅读是一个逐字逐句的过程，而且我们的头脑只能容纳有限的词汇。通过从文字恢复图像的方法，不仅能大量传递知识，而且能用清晰的图像传递信息，便于回忆。</p>
<blockquote>
<p>威廉 • 明托的一段话：</p>
<p>写作时，你好像一位司令官，指挥着千军万马，排队通过一个每次只能通过一个人的狭隘关口；而你读者则在另一边迎接，将部队进行重新编排和重新组织。无论主题多么大或多么复杂，你都只能以这种方式表达。</p>
<p>最终你会发现，这就是我们在顺序和编排上对读者应尽的义务，以及为什么修辞学者们除了强调措辞得体和别出心裁外，还把顺序和编排当做那些给予自己厚爱的人应尽的义务。</p>
</blockquote>
<p>对于一些非场景化的表述，可以找出<strong>名词以及它们之间的关系</strong>，同时把它们看做视觉图像。</p>
<p><em>把图像复制成文字</em>  </p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/金字塔原理_图12-4_把图像复制成文字.png" width="%"></p>
<p><em>P259  图12-4 用图像表示3个名词的联系</em>   </p>
<p><br></p>
<h1 id="其他摘抄"><a href="#其他摘抄" class="headerlink" title="其他摘抄"></a>其他摘抄</h1><h3 id="金字塔结构总括"><a href="#金字塔结构总括" class="headerlink" title="金字塔结构总括"></a>金字塔结构总括</h3><ol>
<li><p>金字塔结构组织的思想：</p>
<ul>
<li>首先表达的主要思想，使受众对表达者的观点<strong><u>产生疑惑</u></strong></li>
</ul>
<blockquote>
<p>关键是对<strong>初始问题</strong>的引出与界定</p>
</blockquote>
<ul>
<li>主要思想在<strong><u>下一层次上的思想将回答</u></strong>这些问题</li>
</ul>
</li>
<li><p>人类只有用某种方式将思想<strong>表达出来</strong>（说出来/写下来），我们<strong>才能够准确把握</strong>自己的思想。</p>
</li>
<li><p>针对上一层次的问题，回答必须是<strong><u>对问题的直接指向</u></strong>；</p>
<blockquote>
<p>“为什么” 之类的问句回答必须是 “原因”</p>
</blockquote>
</li>
<li><p><strong><u>标题应该呈现某种思想、观点或结论</u></strong>，而不是只说明要讨论问题的类别</p>
</li>
</ol>
<p><br></p>
<h3 id="推理的三种方法"><a href="#推理的三种方法" class="headerlink" title="推理的三种方法"></a>推理的三种方法</h3><blockquote>
<p>分析问题的方法，是通过了解背景（情况），寻找非期望结果（结果）产生的原因（规则），并检查是否已经找到（情况）</p>
</blockquote>
<p>任何推理过程都要涉及的3类实体</p>
<ol>
<li><strong>规则：关于事物运行所遵循的法则</strong></li>
<li><strong>情况：已知事实</strong></li>
<li><strong>结果：如果把规则用于该情况，预期将发生的事情</strong></li>
</ol>
<p>有意识地将所认知的信息归类到这3类实体中</p>
<table>
<thead>
<tr>
<th>演绎推理</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1 - 规则</td>
<td>如果价格定的太高，销售将下降</td>
<td>如果A则B</td>
</tr>
<tr>
<td>2 - 情况</td>
<td>价格定的太高</td>
<td>A</td>
</tr>
<tr>
<td>3 - 结果</td>
<td>所以销售将下降</td>
<td>必然B</td>
</tr>
<tr>
<td><strong>归纳推理</strong></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1 - 情况</td>
<td>提高价格</td>
<td>A</td>
</tr>
<tr>
<td>2 - 结果</td>
<td>销售下降</td>
<td>B</td>
</tr>
<tr>
<td>3 - 规则</td>
<td>销售下降的原因可能是价格太高</td>
<td>如果A很可能B</td>
</tr>
<tr>
<td><strong>外展推理</strong></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1 - 结果</td>
<td>销售下降</td>
<td>B</td>
</tr>
<tr>
<td>2 - 规则</td>
<td>销售下降通常由于价格太高</td>
<td>如果A那么B</td>
</tr>
<tr>
<td>3 - 结果</td>
<td>检查价格是否太傲</td>
<td>可能A</td>
</tr>
</tbody>
</table>
<h3 id="好的表达是遵从大脑的运作方式"><a href="#好的表达是遵从大脑的运作方式" class="headerlink" title="好的表达是遵从大脑的运作方式"></a>好的表达是遵从大脑的运作方式</h3><blockquote>
<p>【把这些特点转变为有指导意义的具体行为】</p>
</blockquote>
<ol>
<li><p><strong>尽量用简单的句子</strong>，而不是复杂的结构与修辞</p>
</li>
<li><p>对受众来说，最容易理解的顺序是：先了解<strong>主要的、抽象的</strong>思想，然后了解次要的、为主要思想给提供支持的思想。</p>
</li>
<li><p>对文章的思想作出 <strong>疑问/回答式反应</strong> 是人类的一种自然反应</p>
</li>
<li><p>大脑会 <strong>“自动”</strong> 把具有 <strong>“共性”</strong>的任何事物<strong>组织在一起</strong>；</p>
<blockquote>
<p>共性：具有某种<strong>相似的共同点</strong> 或 所处<strong>位置相近</strong></p>
</blockquote>
</li>
<li><p>大脑一次记忆不超过 7 个思想、概念或项目；大脑<strong>比较容易记住的是3个，次之5个，绝对不要超过7个</strong></p>
</li>
<li><p>我们的大脑是<strong>通过图像而不是文字</strong>来进行理性思维的，因为这样效率更高。图像能把大量的事实综合成简单抽象的概念</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;《The Pyramid Principle》（金字塔原理） - Barbara • Minto（芭芭拉 • 明托）&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/书籍阅读_金字塔原理01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[ 思考先于写作/表达 ]&lt;/strong&gt; - 在开始写作前，先将自己的&lt;strong&gt;思路组织成金字塔结构&lt;/strong&gt;，并按照&lt;strong&gt;逻辑关系&lt;/strong&gt;的规则进行&lt;strong&gt;检查与修改&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你要&lt;strong&gt;强迫&lt;/strong&gt;自己先想后写、先想后做、先向后说。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="阅读书籍" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="逻辑思维" scheme="http://yoursite.com/categories/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/%E9%80%BB%E8%BE%91%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="阅读书籍" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D/"/>
    
      <category term="逻辑思维" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>学习的方法</title>
    <link href="http://yoursite.com/2017/06/27/%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2017/06/27/学习的方法/</id>
    <published>2017-06-26T16:00:00.000Z</published>
    <updated>2017-07-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习如何学习。阐明大脑对待知识的处理机制，并在这个基础上进行适合大脑运作的学习方式。</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_learning02.jpg" width="80%"></p>
<p><strong>只有成网的知识体系才是有用的知识</strong></p>
<ul>
<li>最初学到的是孤立的知识点</li>
<li>通过消化、吸收和实践，这些知识点开始连接起来，构成了组块；</li>
<li>组块之间再联接起来，就组成了知识之网</li>
<li>能够创造性地在知识之间建立新的联系，就成了一名创新者</li>
</ul>
<p>有效的学习过程，就是<strong>建立新知识与已有知识联接的过程</strong></p>
<p><u><strong>有意识地、刻意地将现有知识与旧有知识进行联系与对比</strong></u>，目的是为了建立两者之间的关系</p>
<p><strong><u>知识的输出才是王道。</u></strong></p>
<a id="more"></a>
<p><br></p>
<p>个性塑造，不要做无效的重复阅读；运用<strong>回想</strong>-纸片的方式</p>
<h2 id="第一个问题：why"><a href="#第一个问题：why" class="headerlink" title="第一个问题：why"></a>第一个问题：why</h2><p><strong>在开始学习之前，必须要先问自己做这个事情的目的/原因是什么</strong>；不仅仅是学习这件事，其实在所有行动之前都应该这样问自己。</p>
<ol>
<li>why：<strong>为什么</strong>要学这个知识？<ul>
<li>以解决实际问题为目的</li>
<li>以通过考核为目的</li>
</ul>
</li>
<li>success：根据你的目的/原因，得出可衡量的的<strong>成功标准</strong>；</li>
<li>how：制定<strong>适合目标的</strong>学习路径与方法</li>
</ol>
<p><br></p>
<h2 id="学习的方法"><a href="#学习的方法" class="headerlink" title="学习的方法"></a>学习的方法</h2><ol>
<li><p><strong>学习的过程</strong>，就是把吸收的知识转化为<strong>组块</strong>，并将其移入<strong>长期记忆</strong>的过程。</p>
</li>
<li><p><strong>组块</strong>：根据知识的内在逻辑，把相关的信息碎片组合而成的集合。</p>
</li>
<li><p>通过学习得到的知识组块，<strong>最开始是零散的；需要经过理解与重组，让它们之间建立联系并相互搭配，</strong>才能形成对某一个事物的总体认识。</p>
</li>
<li><p>知识之间本身是有所<strong>关联的</strong>。</p>
<ul>
<li>形成<strong>网状结构</strong>的知识，才是<strong>有效的知识</strong> （孤立的知识点，其实并没有什么用（新旧知识没有关联，很快就会遗忘））</li>
<li>【有效的学习过程，就是<strong>建立新知识与已有知识联接的过程】</strong> </li>
<li>学习的误区：把知识本身当做一个个孤立的知识点去攻克，而忽视了新旧知识点之间的关联</li>
</ul>
<blockquote>
<p>循序渐进，是<strong>为了能把新的知识与已有的知识连接起来</strong>；（这也就是学习为什么要循序渐进的原因；）</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h3 id="1-先广而浅的学习-创建结点"><a href="#1-先广而浅的学习-创建结点" class="headerlink" title="1. 先广而浅的学习 - [创建结点]"></a>1. 先广而浅的学习 - [创建结点]</h3><p>先运用发散模式对全局进行了解，<strong>创建神经模型的结点</strong></p>
<blockquote>
<p>如果你认识到对学习的内容，不是看一遍书就可以解决的，那就一定要采用这样的方法。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_发散学习01.png" width="80%"></p>
<p><br></p>
<h3 id="2-再精而深的学习"><a href="#2-再精而深的学习" class="headerlink" title="2. 再精而深的学习"></a>2. 再精而深的学习</h3><p>直至你锁定一个新的、更有成效的方法，然后进入专注模式，<strong>开始围绕这个结点构造组块</strong></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_专注学习02.png" ,="" width="80%"></p>
<p><br></p>
<h4 id="精而深的学习-构建组块"><a href="#精而深的学习-构建组块" class="headerlink" title="精而深的学习 - [ 构建组块 ]"></a>精而深的学习 - <strong>[ 构建组块 ]</strong></h4><ol>
<li><p>把<strong>注意力集中</strong>在需要组块的信息上</p>
</li>
<li><p><strong>理解【基本概念】</strong></p>
</li>
<li><p>获取<strong>【背景信息】</strong>；从宏观上/自上而下的方式将知识点置于整个知识之网中来进行定位。</p>
</li>
<li><p><strong>有意识地建立</strong>新知识与旧知识之间的<strong>联系</strong></p>
<blockquote>
<p>知识之间本身是有所<strong>关联的</strong>，而不是孤立的一个个知识点；若是孤立的，则会很快忘记</p>
<p>形成<strong>网状结构</strong>的知识，才是<strong>有效的知识</strong></p>
<p>有效的学习过程，就是<strong>建立新知识与已有知识联接的过程</strong></p>
</blockquote>
</li>
<li><p>将<strong><u>【学习时间分散开】</u></strong>，而不是集中在一天之内；即在两个专注学习期之间，<strong>【至少要有一个你在无意识思考的时间段，让发散模式运行】</strong>，让信息进行整理并在彼此之间加固联接。</p>
<blockquote>
<p><strong>下一次重读开始前的间隔时间才是这件事真正有效的部分。利用重读间隔中进行的回想，训练了你的大脑。</strong>  （每天学习1h的效果 &gt;&gt; 一天学习8h ）</p>
<p><strong>在单个组块内部，需要时间对其进行整理；在组块之间，需要时间对其进行巩固与联接；</strong> 这个关键的整理动作，是由<strong>无意识的发散模式来进行</strong>的。</p>
<p>因为，通过学习得到的知识组块，<strong>最开始是零散的；需要经过理解与重组，让它们之间建立联系并相互搭配，</strong>才能形成对某一个事物的总体认识。</p>
<p>而这个过程，需要无意识的发散模型来进行。虽然你在休息，但你的发散模式也是在后台运行的</p>
</blockquote>
</li>
<li><p><strong>穿插学习</strong>，解决混杂交错的各种问题，而不是在同一个问题上过度学习。衡量学习的标准：理解基本概念；<em>一旦理解了X的基本概念，学习重心应该转移到别的概念上，过一段时间再来回顾 X 即可</em></p>
</li>
</ol>
<p><br></p>
<h4 id="加深记忆-强化组块"><a href="#加深记忆-强化组块" class="headerlink" title="加深记忆 - [ 强化组块 ]"></a>加深记忆 - <strong>[ 强化组块 ]</strong></h4><ol>
<li><p>应用<strong>【主动回想】</strong>而不是重复阅读的被动学习</p>
<blockquote>
<p>工具：Anki 卡片学习</p>
</blockquote>
</li>
<li><p><strong>一天之内</strong>再次强化学习模型，这在构造神经模型的<strong>起始阶段至关重要</strong>。</p>
</li>
<li><p>做标记前，要先训练自己<strong>找到主要观点</strong>，<strong>用自己的话来归纳</strong>进行标注；<strong>慎用划线</strong>的方式</p>
<blockquote>
<p>划重点，其实只是手在动而已；这个过程会欺骗大脑，以为大脑在工作</p>
</blockquote>
</li>
<li><p><strong>书写 &amp; 说话</strong>会把要学的知识编译到你更深的记忆中</p>
<blockquote>
<p>肌肉记忆</p>
</blockquote>
</li>
<li><p><strong><u> 【输出知识】</u></strong>，最终极的检测与巩固方法</p>
</li>
</ol>
<p><br></p>
<h4 id="记忆方法"><a href="#记忆方法" class="headerlink" title="记忆方法"></a>记忆方法</h4><p><strong>【<u>有意识地、刻意地将现有知识与旧有知识进行联系与对比</u>，目的是为了建立两者之间的关系】</strong></p>
<p>大部分的记忆方法（讲故事、类比），其实就是为了通过与旧有知识建立联系，从而加深记忆。</p>
<ol>
<li>视觉图像</li>
<li>记忆宫殿：想象一个你熟悉的空间，把你所需记忆的概念放入这个空间</li>
<li>类比/比喻：与旧有知识建立联系</li>
</ol>
<p><br></p>
<h3 id="3-遍及所有内容的学习顺序"><a href="#3-遍及所有内容的学习顺序" class="headerlink" title="3. 遍及所有内容的学习顺序"></a>3. 遍及所有内容的<strong>学习顺序</strong></h3><ol>
<li><strong>从已经掌握的/感兴趣的内容开始</strong></li>
<li><strong>进行深度遍历</strong><ul>
<li>当你以完成某个主题为目的的时，把精力花在<strong>当前的知识的N层、N+1层与N-1层</strong> （除非你在学习的过程中，转移了核心层）<ul>
<li>1) 当前第N层的知识</li>
<li>2) N-1层的<strong>基础知识</strong></li>
<li>3) N+1层的<strong>应用知识</strong></li>
</ul>
</li>
<li><strong>离你越远的层次，你所需要知道的细节就越少</strong></li>
</ul>
</li>
<li><strong>一次学习一个内容</strong></li>
</ol>
<p><br></p>
<h3 id="4-学习技巧"><a href="#4-学习技巧" class="headerlink" title="4. 学习技巧"></a>4. 学习技巧</h3><ol>
<li><p><strong>入睡前回顾这一天最重要的任务，并把它写下来</strong></p>
<blockquote>
<p>这种前期准备有助于你的发散模式开始预热思考明天如何完成这些事</p>
</blockquote>
</li>
<li><p>当你在某一个方面感觉累的时候，可以跳到其他类型的专注任务上。（例如放下数学，背背单词）</p>
</li>
<li><p><strong>先做困难的事，但当你发现没有进展的时候，及时从中脱离出来做其他的事情</strong>；<em>这个时候，其实你的发散思维还是在后台工作；</em>等一段时间之后，再回过头来做这件困难的事，发现突然有了新的思路/并没有那么困难。</p>
<blockquote>
<p>通常，专注模式生成了初步思路之后，发散模式的灵感才能涌现</p>
</blockquote>
</li>
<li><p>在学习中遇到解决不了的问题，就去查，随后及时使做<strong>记录</strong>，然后再回过头去<strong>实践</strong>，这样提升会很快。</p>
</li>
<li><p>好的学习是从一个<strong>小的例子</strong>开始，然后了解相关概念，阅读书籍，阅读参考文献/文档，同时进行分析整理，之后去做一个<strong>完整的项目</strong> </p>
</li>
<li><p>期间，必须要做的事情有两样：</p>
<ul>
<li><strong>分析与梳理</strong></li>
<li><strong>输出（用自己的话做的整理或理解）</strong></li>
</ul>
<blockquote>
<p>现在的自己，缺少【实践】 和 【输出】。   —— 2016.12.21</p>
</blockquote>
</li>
</ol>
<p><br></p>
<h2 id="大脑工作机制"><a href="#大脑工作机制" class="headerlink" title="大脑工作机制"></a>大脑工作机制</h2><h3 id="大脑思维方式"><a href="#大脑思维方式" class="headerlink" title="大脑思维方式"></a>大脑思维方式</h3><p><strong>1. 专注思维</strong></p>
<ul>
<li>what：将思维聚焦在<strong>某一部分</strong>的神经结网络中（看成排布<strong>紧密的</strong>弹球机）</li>
<li>why ：把精神集中于已在脑中形成紧密关联的事物上</li>
</ul>
<blockquote>
<p>通常，专注模式生成了初步思路之后，发散模式的灵感才能涌现</p>
</blockquote>
<p><strong>2. 发散思维</strong></p>
<ul>
<li>what：思维在<strong>大范围</strong>的神经结网络中跳动（看成排布<strong>宽松的</strong>弹球机）</li>
<li>how  ：<strong>即使休息的时候，你的发散模式也是在后台运行的</strong>  [关键]</li>
</ul>
<p><strong>为什么会有这两种思维模式？</strong></p>
<blockquote>
<p>思考动物的行为；一方面获取食物时需要注意力（专注思维），同时要警惕天敌的接近（发散思维）</p>
</blockquote>
<p> <strong>有的时候，你越是冥思苦想，得出的想法就越是相差无几；这是因为你的弹珠只在狭小的范围里打转。</strong></p>
<blockquote>
<p>专注思维使你在小范围内寻找答案，但可能真正的答案是在另外一侧；这个时候，你就应该转化为发散思维，先完成跨度较大的跳跃，跳跃到对应该问题的另一个小范围内，然后再进行专注思维；</p>
</blockquote>
<p><br></p>
<p><strong>3. 两者之间切换</strong></p>
<ul>
<li><strong>两者的关系：</strong>当我们有意识地处于集中状态时，发散思维是被屏幕的；</li>
<li><strong>切换：关键在于去做别的事情，直至你的大脑意识自然地忘掉了之前的问题。</strong> 只要你放下手中的工作，停下来休息一会儿，发散模式就会乘虚而入</li>
</ul>
<p><br></p>
<h3 id="大脑工作方式"><a href="#大脑工作方式" class="headerlink" title="大脑工作方式"></a>大脑工作方式</h3><ol>
<li><p><strong>工作记忆：</strong>对正在处理的信息进行有意识地加工的记忆。类比 - 内存；</p>
<ul>
<li><strong>工作记忆大约能容纳 4 个记忆单元（组块），最多不超过7个；</strong></li>
<li>当你掌握了一门技术，<strong>它在工作记忆中所占据的空间会变少</strong>；释放出的空间能让你更轻松地处理其他想法</li>
</ul>
<blockquote>
<p>你需要消耗大量能量来使得这4个组块保持活跃</p>
</blockquote>
</li>
</ol>
<ol>
<li><strong>长期记忆</strong>：存储记忆的地方。类比 - 硬盘</li>
<li>大脑的<strong>认知规律</strong><ul>
<li><strong>从感性到理性、从具体到抽象</strong>；先解决/学习一个具体的例子/事物 （当你跟他人讲一个抽象的/新的知识点的时候，可以先讲一个具体的例子；因为这遵从人的认识规律）</li>
<li><strong>理论</strong>必须在<strong>实践</strong>中才能真正学好</li>
</ul>
</li>
</ol>
<p><br></p>
<h3 id="大脑学习的机制-核心"><a href="#大脑学习的机制-核心" class="headerlink" title="大脑学习的机制 (核心)"></a>大脑学习的机制 (核心)</h3><h4 id="学习过程与组块"><a href="#学习过程与组块" class="headerlink" title="学习过程与组块"></a>学习过程与组块</h4><ol>
<li><p><strong>学习的过程</strong>，就是把吸收的知识转化为组块，并将其移入长期记忆的过程。</p>
</li>
<li><p><strong>组块</strong>：根据知识的内在逻辑，把相关的信息碎片组合而成的集合。</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_学习的过程01.png" width="80%"></p>
<p>​</p>
</li>
<li><p>通过学习得到的知识组块，<strong>最开始是零散的；需要经过理解与重组，让它们之间建立联系并相互搭配，</strong>才能形成对某一个事物的总体认识。</p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_学习的过程02.png" width="80%"></p>
<p>​</p>
</li>
<li><p>形成组块的过程、知识重组的过程本身是需要<strong>多次反复学习</strong>的</p>
<blockquote>
<p>学习的过程中，必须进行适量的练习 + 回想</p>
</blockquote>
</li>
<li><p>适当的休息与及时整理，在两个专注学习期之间，<strong>【至少要有一个你在无意识思考的时间段，让发散模式运行】</strong>，以让信息有调理且彼此之间联接牢固。</p>
<blockquote>
<p>要学习一个新的概念，至少要有一个你在无意识思考的时间段。这个是必须的。正是这些在你并非直接关注的时间里，发散模式得以运行。在此之后，当注意力重新回到问题上时，你就可以将发散模式传达的新想法和新模型整合起来。</p>
<p>–</p>
<p>培训班的问题是一次性给过多的知识，不给消化的机会，使得神经元之间难以连接和巩固</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_学习的过程03.png" width="80%"></p>
</li>
</ol>
<p><br></p>
<h4 id="构建组块"><a href="#构建组块" class="headerlink" title="构建组块"></a>构建组块</h4><ol>
<li>把<strong>注意力集中</strong>在需要组块的信息上<ul>
<li>开始学习新知识，<strong>既要创造新的神经模型，又要把新模型和遍布大脑各处的既有模型联结在一起</strong></li>
</ul>
</li>
<li><strong>理解</strong>；要把基本概念打包成组块，首先要<strong>理解基本概念</strong></li>
<li>获取<strong>背景信息</strong>；将整个知识点置于整个知识之网中来进行定位。不仅要知道如何使用，还要知道何时使用与何时不能使用。</li>
<li>练习 + 回想</li>
</ol>
<blockquote>
<p>搭建组块会压缩已有知识，为工作记忆腾出更多空间</p>
</blockquote>
<p><br></p>
<h4 id="知识之网"><a href="#知识之网" class="headerlink" title="知识之网"></a>知识之网</h4><ol>
<li><p>知识之间本身是有所<strong>关联的</strong>。</p>
<ul>
<li>形成<strong>网状结构</strong>的知识，才是<strong>有效的知识</strong> （孤立的知识点，其实并没有什么用（新旧知识没有关联，很快就会遗忘））</li>
<li>【有效的学习过程，就是<strong>建立新知识与已有知识联接的过程】</strong></li>
<li>学习的误区：把知识本身当做一个个孤立的知识点去攻克，而忽视了新旧知识点之间的关联</li>
</ul>
<blockquote>
<p>循序渐进，是<strong>为了能把新的知识与已有的知识连接起来</strong>；（这也就是学习为什么要循序渐进的原因；）</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_知识之网01.png" width="80%"></p>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_知识之网02.png" width="80%"></p>
<p>​</p>
</li>
<li><p><strong>“学不会”的内在原因</strong></p>
<ul>
<li>学习的知识点与你旧的知识点没有联接</li>
<li>所期望掌握的知识点，位于另一个结构复杂的内部知识子网之中，必须以那个子网为大的背景去学习，并且还需要把那个子网与现有的知识网络之间建立连接</li>
</ul>
</li>
<li><p>知识之网的<strong>遍历方法</strong></p>
<ul>
<li>从<strong>已掌握的节点出发</strong>（其次最感兴趣的） + 进行<strong>深度遍历</strong> + <strong>一次学习一个内容</strong></li>
<li>错误的方法 - 一开始就看最核心的内容</li>
</ul>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_知识之网03.png" width="80%"></p>
</li>
<li><p>学习知识的N+1层、N-1层</p>
<ul>
<li>当你以完成某个主题为目的的时候，你所涉及的知识需要仅3层，所以你的<strong>关注点也应该仅在这3层而已；</strong> 除非你在学习的过程中，转移了核心层<ul>
<li>1) 当前第N层的知识</li>
<li>2) N-1层的<strong>基础知识</strong></li>
<li>3) N+1层的<strong>应用知识</strong></li>
</ul>
</li>
<li><strong>离你越远的层次，你所需要知道的细节就越少</strong></li>
</ul>
<p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_知识之网04.png" width="80%"></p>
</li>
</ol>
<p><br></p>
<h4 id="能力错觉"><a href="#能力错觉" class="headerlink" title="能力错觉"></a>能力错觉</h4><ol>
<li>当书本/答案摆在眼前时，大脑会产生错觉，以为学习材料也同样存入了大脑。</li>
<li>通过<strong>回想</strong>，让弹脑提取关键概念，而非通过重复阅读被动地获取知识，将让你更加高效地记忆与学习；</li>
</ol>
<blockquote>
<p>对于划重点与标下划线，一定要谨慎，否则不仅会效率低下，而且会被误导。因为划线的动作会让你欺骗自己说大脑在工作，其实只是手在动而已。</p>
<p><strong>做标记前，要先训练自己找到主要观点，并把做标记的数量降到最低</strong>； </p>
<p>但用自己归纳的话来进行标注，是很好的方法</p>
</blockquote>
<ol>
<li>有人认为画概念导图是最好的学习方法。但如果基础组块还没有嵌入脑中，就试着在组块间构建联接，完全是空中楼阁；</li>
</ol>
<blockquote>
<p>所以，在掌握了基础概念之后，再进行全局的联接</p>
</blockquote>
<p><br></p>
<p><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习如何学习。阐明大脑对待知识的处理机制，并在这个基础上进行适合大脑运作的学习方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/学习方法_学习的方法_learning02.jpg&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;只有成网的知识体系才是有用的知识&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最初学到的是孤立的知识点&lt;/li&gt;
&lt;li&gt;通过消化、吸收和实践，这些知识点开始连接起来，构成了组块；&lt;/li&gt;
&lt;li&gt;组块之间再联接起来，就组成了知识之网&lt;/li&gt;
&lt;li&gt;能够创造性地在知识之间建立新的联系，就成了一名创新者&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有效的学习过程，就是&lt;strong&gt;建立新知识与已有知识联接的过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;有意识地、刻意地将现有知识与旧有知识进行联系与对比&lt;/strong&gt;&lt;/u&gt;，目的是为了建立两者之间的关系&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;知识的输出才是王道。&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习方法" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="学习方法" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>个人日志_2017年5月总结</title>
    <link href="http://yoursite.com/2017/06/10/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97_2017%E5%B9%B45%E6%9C%88%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/06/10/个人日志_2017年5月总结/</id>
    <published>2017-06-09T16:00:00.000Z</published>
    <updated>2017-06-10T12:26:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="5月总结"><a href="#5月总结" class="headerlink" title="5月总结"></a>5月总结</h2><p><img src="https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年5月总结_01.jpg" alt=""></p>
<p><strong>你要掌握自己的人生，拥有自己的选择权，而非被选择。当你不够强大，无能为力的时候，就只能被选择。而留给你的只有无奈与不甘。</strong> —— 2017.05.27 去往迪卡侬的路上</p>
<a id="more"></a>
<p><br></p>
<h3 id="【运动-amp-健康】-9分"><a href="#【运动-amp-健康】-9分" class="headerlink" title="【运动&amp;健康】 9分"></a><strong>【运动&amp;健康】</strong> 9分</h3><p>虽然运动很少，大更加注重自己的身体健康，更愿意为此承担更高的消费；</p>
<ol>
<li>整个五月，对于新年目标的达成情况：(1): 对于周末[周六、周日]早上的两天，基本都是晚睡晚起，而且还不写晨间日志。 (2): 对于晚睡早起，这个一直是个问题；继续加油。</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">做晨间日志</th>
<th style="text-align:center">早睡早起</th>
<th style="text-align:center">晚睡早起</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">19天</td>
<td style="text-align:center">7天</td>
<td style="text-align:center">12天</td>
</tr>
</tbody>
</table>
<ol>
<li>不知哪里来的想法，自己竟然买了一瓶<strong>洗面奶</strong>。可以说，这是我自己买的第一瓶洗面奶（捂脸）。来到上海，有一个很明显的改变，那就是对自己身体的重视度，或者说对身体健康方面的消费更愿意去承担。</li>
<li>第一次<strong>配优质的镜片</strong>，花费近1000大洋给自己配了2副眼睛，一幅防蓝光，一副正常使用；更加关注自己的身体。会这样做是因为工作时，常常感到眼睛疼痛；但如果换做之前，自己应该只会配一幅300+左右的眼镜就了事了。</li>
<li>对于自己多年来的一个想法：<strong>学游泳</strong>，终于在今年迈入正轨；虽然之前也有去游泳，而且还有自学，但这次是报了培训班，做了必须要学会的心态去的。给自己一个赞。</li>
</ol>
<p><br></p>
<h3 id="【生活-amp-娱乐】-9分"><a href="#【生活-amp-娱乐】-9分" class="headerlink" title="【生活&amp;娱乐】 9分"></a><strong>【生活&amp;娱乐】</strong> 9分</h3><p>这一个月是看片大月，这么说是在这一月中，看了很多影视剧。同时，给自己定下一个任务，<strong>每周都要出门去，去见朋友也好，去参加活动也好，去看展览也好。总之必须要出门去。</strong></p>
<ol>
<li>《人民的名义》，利用五一假期，把它重头到尾补了一遍。整个看完一遍，似乎并无太多感触。也并不是说剧情不好，只是并无欢喜也并无厌恶吧。</li>
<li>《越狱 第五季》。迈克尔 • 斯科菲尔德又出现了。《越狱》可以说是第一部看的美剧，带领我走入美剧的殿堂。虽然之后基本也没有追过什么剧，但《越狱》在我心中的地位是无可比拟的。有追的好像就是《权利的游戏》（冰与火之歌），是她推荐的。第五季中，同样的角色，还是大爱；但剧情的精彩程度却要打个折扣，但仍是好看；或者说是第一季到第四季的浓缩版，为何这么说。因为在这短短一季中，涉及了越狱准备、成功后的逃亡，再到最后击败BOSS。说它好看，因为每每到一个关键时刻，总是有意外情况发生，使得不得不改变原先的方案，永远让人猜不透下面的剧情。因为总是你会有突然的意外来打破原先的计划。而这，其实才是正常的生活，没有那么多一如既往，总是会有意外降临。而这一点正是国内影片所欠缺的。</li>
<li>《摔跤吧！爸爸》印度宝莱坞的阿米尔 • 汗，因为之前看过他主演的几部电影，真的非常精彩。《三傻大闹好莱坞》《未知死亡》都很精彩；对于这一步电影，在印度上映的时候就已经听说，而且口碑很好。不过意外的是在今年5月份的时候引入到中国，这让我很是意外的。不过，这次没有去影院看，而是自己电脑中看的。表面上看可能是一个父亲为了让自己的子女继承自己的梦想，而不断鞭策其努力并最终获得成功的故事。但在当时的背景下，要表达的是对女性自由的争取，或者说是对规则的抗拒。不愿因为规则而被束缚，为了追求而去做为挑战者去打破这个禁锢。这是需要多大的勇气与毅力；当每个人都在嘲讽你的时候，你必须要有足够强大的内心来坚持自我。</li>
<li>发现一个看书的好去处 “大众书局”。环走在里面，发现了自己有好多书想看还没看的。所以要多多阅读。</li>
<li>报名参加了《富爸爸现金流游戏》</li>
<li>​</li>
</ol>
<p><br></p>
<h3 id="【阅读-amp-学习】-9分"><a href="#【阅读-amp-学习】-9分" class="headerlink" title="【阅读&amp;学习】 9分"></a><strong>【阅读&amp;学习】 9分</strong></h3><p>这个月，主要完成的“期货从业资格”考试的准备，并且顺利通过。看了《理性经济学》《文明是副产品》，已完成1本读书笔记；收听一场知乎Live《数据挖掘技能的提升》，并做了收听笔记。同时，对于读书以及读书笔记这两件事，有了更深刻的认识。</p>
<ol>
<li>对于之前阅读过的《企业生命周期》，不知道由于什么原因，又再次翻阅起来。只是这次，是以回顾各个周期的主要特点为目的进行的二次翻阅，并做好记录。遗憾的是，回顾到一半然后就没有在继续了。</li>
<li>《理性经济学》，本月的第二本书籍，还是啃完了，也做了<a href="https://chf2012.github.io/2017/05/20/读书笔记_《理性乐观派》/" target="_blank" rel="external">读书笔记_《理性乐观派》</a>。对于这本书，全文围绕一个核心观点开展：<strong>由交换带来了双赢，并进一步促进了专业化的深入，最后走向彻底的分工。</strong>文章中富裕的定义还是认同的，所谓富裕指的是你不仅可以用时间换取所需的物品，而还换取你想要的物品。而贫穷的人，只能用自己的时间换取所需的物品。当然真正的富裕，应该是你无需用你的时间你所需要的物品。在这个定义中，时间的价值是衡量富裕的尺度。另外还有一个有意思的现象是：过去的人类消费简单化，生产多样化(生存所需的事物都是自己来完成的)，而现在的人类则是消费多样化，生产简单化(用单一的专业的劳动，但消费的是上千种的物品)。对于自我生活的指导，应该是<strong>交换</strong>，或者说<strong>分享</strong>。上个月在一次活动中听到两个词 “无限资源/有限资源” 。说的是，对于无限资源，要主动去分享。但在当下，其实有限资源也应该去分享，或者说交换。回顾这个月分享自己的学习笔记，真的是给我带来了很多的惊喜。</li>
<li>《文明是副产品》《代价轮》《信任论》，郑也夫老师的一套书。5月份看了第一本《文明是副产品》；因为之前收听罗辑思维的节目中罗胖分享过其中的观点，让我觉得很受感触。文章围绕的核心观点：在人类发展历史中，<strong>引发的文明大跃迁的发明其实往往是副产品，是由在追求其他目的的时候偶尔产生的结果。</strong> 讲述了两个人类发展史中最重要的两个现象：<strong>(1)一夫一妻制； (2)农业；</strong> 关于其他现象（造纸术、印刷术）也是副产品。本书的读书笔记还在整理过程中。<ul>
<li>(1)一夫一妻制：人类能够成为地球的霸主，这个与实行一夫一妻制有非常大的关系；达尔文的进化论中说到，<strong>适应与自然选择；适应性：指的是个体生存和繁衍能力好，说到根本还是后者；</strong> <em>唯有后代多，父母的品性才能被继承下来，于是有助于繁衍的品性将成为该物种的特征</em> ； 正是由于一夫一妻制，使得人类婴儿的出生率远高于其他动物<em>(这里仅指动物，排除昆虫、鱼类、微生物等)</em>； 或者应该这样说，由于一夫一妻制的存在，可以完成2年生育一个幼崽，甚至1年生育一个；其他生物不是说不能保证生育率，而是在母亲生下幼儿之后，由于群婚或者一夫多妻制的情况，使得母亲必须花费大量的时间与精力来照顾自己的孩子，这使得它们没有更多是食物与精力来继续生育；</li>
<li>(2)农业：农业更是完全改变了人类的生活方式，并进步促进了人类生存的稳定性，并进一步提高了人类繁衍的能力；即使到了今天，想象一下如果没有农业，地球的70亿人口如何生存。</li>
</ul>
</li>
<li>开始收听 “得到”APP中的《罗辑思维》；最新的罗辑思维改版为1天1更新，内容上缩短了很多，从原本对一个主题的深入解析到现在对一个主题的轻度解析，从更新频率上来讲，是迎合了更多人的需求，但对内容的理解程度大大降低了。想起了一个概念，“ 碎片化学习”。其实，学习这个事情，如果是碎片化的，效率远没有在一段时间内专注&amp;系统的学习有效。</li>
<li>第一次使用了坚果云中 <strong>” 历史版本 “</strong>的功能，非常好用。即使不小心替换，也可以进行恢复。</li>
<li>对于关于数据挖掘的Live《数据挖掘技能的提升》，虽然数据挖掘与数据分析有很大的区别，与当前自己的工作内容还是有一定距离；但去收听这方面的内容，是为了更全面地认识此类职业的涉及范围与可能涉及的技能。走向数据挖掘必备的两个知识：编程能力 + 数理统计；但这两块，都是我比较欠缺的，我指的欠缺是指今后对其深入学习与研究的能力；</li>
<li>根据知识管理的核心原则<strong>：以终为始。</strong>重新整理自己的文档，按照以<strong>以 [ 用 ] 为导向</strong>，<strong>以 [ 主题 ] 为核心</strong>重新归档；</li>
</ol>
<p><br></p>
<h3 id="【工作】-7分"><a href="#【工作】-7分" class="headerlink" title="【工作】 7分"></a><strong>【工作】</strong> 7分</h3><ol>
<li>开始要学习Python了，开始思考自己的职业。问自己，你到底是想要成为什么？如果往程序员的方向发展，现在的你已经是部门中的老人了，相比其他92年、94年的年轻孩子，你至少少了3年的时光。当然，成为程序员也不是我想要的。<strong>我真正想要的，成为一个有严谨思维的分析师；这才是会让我一想到，眼睛就放光的。</strong>而且你要时常记得，<strong>你的目的不是为了成为程序员，而是为了解决问题。</strong></li>
<li>对于工作中与人合作，自己似乎<strong>过于在乎他人的感受</strong>。其实，在工作中，如何高效、快速地完成你所负责的事情，才是第一位的，其次才是人际之间的关系。oh.不。事情是这样的，有一件事情同时指派给我跟其他一位同事，我基本上已经完成了所需材料的收集，但想跟她在一起讨论一下，倒并不是说一定能从对方那里得到更好的建议，而是我认为这是<strong>最起码的尊重</strong>。但当对方没有时间（几天都没有时间）的情况下，我的选择是等待，等待对方有时间了在简单过一下方案，然后在进行汇报。但换成这样的方式是不是会更好？(1) 先跟对方沟通，约个时间简单讨论下； (2) 若对方没有时间，再改时间也不合适的情况下，可以对对方说：”那这样，内容你先看一下；我再把自己做的这个材料检查一下，然后我先进行一个汇报。你看如何？“ 这样一来，<strong>不仅尊重了对方，并且把选择权一定那个程度上交给了对方，而且还能保证事情的顺利开展。</strong></li>
<li>工作中，大家对我的一个评价就是细心，一个很细心的人。或者说是考虑全面的人。挺好，但我自己追求的是严谨呐。所以，在保持的细心的前提下，努力成为严谨的人。</li>
</ol>
<p><br></p>
<h3 id="【友情-amp-感情】-7分"><a href="#【友情-amp-感情】-7分" class="headerlink" title="【友情&amp;感情】 7分"></a><strong>【友情&amp;感情】</strong> 7分</h3><ol>
<li>见了一位之前在上海的朋友曹同学；相见不宜呀，也是约了好几次才碰到有时间的；话说之前上海的朋友都见得好少；惭愧惭愧！！</li>
<li>对于人际交往，一定要全方位的尊重对方。什么是全方位，说的是不要想当然地认为对方应该会帮你，即使对对方来说只是举手之劳。你一定要知道，<strong>“别人帮不帮你，与对此而言是不是TA的举手之劳没有任何关系，并不能说对方是举手之劳，就必须帮我们。”</strong>对于这个观念，虽然之前就已经有所认识，但还是不够深刻。所谓深刻，是你有没有真正因此而改变了自己的行为。</li>
<li>张同学有一双发现美的眼睛，经常听她夸别人，而且是发自内心的赞美。对于这一点，一直想夸她这个优点来着，但一直没有去实施。下次再碰到她夸别人的时候，一定要赞美她。<strong>不是为了讨好，而是不要吝啬自己的赞美。</strong></li>
<li>一个朋友个我说，他要把她送给他的十字绣给收起来，因为每次回家的时候，看到那些东西，就会想起那个让他遗憾的她。我说，这样也挺好，是该好好向前。</li>
</ol>
<p><br></p>
<h3 id="【亲情】-6分"><a href="#【亲情】-6分" class="headerlink" title="【亲情】 6分"></a><strong>【亲情】</strong> 6分</h3><ol>
<li>最近几年，似乎受到了更多的关爱。此次五一回去，老爸老妈不仅像平常那样回来接我，去的时候还送我去拿身份证，并且还送我到了车站。</li>
<li>把公司发的端午福利粽子，寄回家给爸妈吃。毕竟，自己一个人也吃不完。</li>
<li>现在会更多把自己的事情跟家人说，之前更多的是自己想自己的事情，自己做决定；因为之前我回想，即使跟他们说了，也不能改变什么。</li>
</ol>
<p><br></p>
<h3 id="【投资】-6分"><a href="#【投资】-6分" class="headerlink" title="【投资】 6分"></a><strong>【投资】</strong> 6分</h3><ol>
<li>报名参加《富爸爸现金流游戏》；因为原先对《富爸爸穷爸爸》这本书就看过，而且其中的观点也已经有了深刻的理解，应用到生活中，所以此次游戏并没有带来态度的感触。对于游戏中的几个决策，也并无不妥之处。反而是在分享阶段，有个伙伴分享了一个观点，对我还是挺有感触的。<strong>“ 在我们实现资产增值的过程中，第一笔资金都是来自银行贷款的。这是一个杠杆，我们如何利用好银行这个杠杆很重要。</strong> ”对于这个观点，之前都没有去考虑过。因为之前的想法就是，前期努力工作获得第一笔投资资金，但从游戏中的过程来看，其实第一笔投资资金完全不是（可以说所有人都不是）通过自己的职业收入的积累来完成的。对我的启发就是，我应该要去熟悉一下当下社会，有哪些途径和方法去获得贷款。<ul>
<li>而对于贷款，游戏与生活有个非常大的区别：(1)贷款的便利性，但有极高的10%的月度利息； (2)购置房产这个关键性行为只需付首付就可以，并且无条件贷款，而且后续的贷款无需还贷（即无需在从现金流中支出），不仅如此，还能获得房租的月现金流收入。这简直就是逆天的bug。游戏中在前期上获得5w以上的第一笔现金流的项目都是房产出售的项目。而这个在生活中太困难。</li>
</ul>
</li>
<li>开始建立的自己的微信公众号 - Jerry的那些事</li>
</ol>
<p><br></p>
<h3 id="【感恩回报】-5分"><a href="#【感恩回报】-5分" class="headerlink" title="【感恩回报】 5分"></a><strong>【感恩回报】</strong> 5分</h3><ol>
<li>向行政的同事借工具，换网线，其实挺麻烦她的。但对方都很配合，谢谢她。</li>
<li>我对那位分享的观点给我启发的伙伴，表示了感谢。说谢谢她的观点。对于这一点，以后需要做的是更加的诚心，要让对方感受到你的谢意，这个才是关键。这样做并不是为了向她表示好感，<strong>一方面是为了出于真心的感谢，另一方面是给对方反馈，让她知道你的观点帮助了我</strong></li>
</ol>
<p><br></p>
<h3 id="【成功小事】-6分"><a href="#【成功小事】-6分" class="headerlink" title="【成功小事】 6分"></a><strong>【成功小事】 </strong>6分</h3><ol>
<li>工作后，第一次在周末继续写晨间日志，并保持早睡早起；继续加油。</li>
<li>能够面对陌生人不在内敛，主动跟对方沟通。表达自己的感谢之情；</li>
<li>成功将 “ 听了你的演讲/玩了这个游戏，说说<strong>我的感受</strong> ”。 这个表达方式应用在与人分享中。</li>
</ol>
<p><br></p>
<h3 id="【自我思索】-9分"><a href="#【自我思索】-9分" class="headerlink" title="【自我思索】 9分"></a><strong>【自我思索】</strong> 9分</h3><ol>
<li>现在工作的环境，真的挺好的。应该说是很放松，不会拘谨。但这样的情景下，自己在工作环境中就会比较真我，就是那种有点小调皮，不是很庄严的那种。当然，并不是指对工作内容，而是在跟同事闲聊的时候，会这样子。也不是说活得真我不好，但总觉得似乎应该更稳重一点，因为这跟自己追去的严谨不符呀。</li>
<li>资源分享，主动分享这件事。对于《期货》考试自己做了整理，<strong>之前还在犹豫要不要主动分享给大家</strong>。最后，还是主动分享给了大家。想起之前的一句话 <strong>“ 无限资源，分享就可以获得更多；它不是零和博弈； ”</strong> 但结果确让我很是意外，大家的热情与感谢，这是我完全没有意料到的。那个时候，真庆幸自己做了一个正确的决定。分享，主动分享让人快乐，是一种双赢。</li>
<li><strong>我真正想要的，成为一个有严谨思维的分析师；这才是会让我一想到，眼睛就放光的。</strong><ul>
<li>数据分析，是一种工具，或者说是过程。</li>
<li>数据分析，帮助你去更好地认识这个世界的一种方法。数据分析帮你把表象更真实地呈现出来。目的是为最后的决策提供支持。但并不能替代决策。</li>
<li>数据分析的结果，才是你最应该关注的。</li>
</ul>
</li>
<li>对于来到上海，消费观有了更进一步的改变，尤其是对于身体养护这一块，为了身体的健康，更愿意去承担更高的消费；</li>
<li>对于学习有进一步的认识。<strong>对于学习，自己更倾向于了解底层&amp;原理性的内容之后，在进行其他知识的学习。</strong></li>
<li>在走往迪卡侬的路上，脑中回荡起这样一种思绪：<strong>你要掌握自己的人生，拥有自己的选择权，而非被选择。当你不够强大，无能为力的时候，就只能被选择。而留给你的只有无奈与不甘。</strong>工作、生活、感情、婚姻，真的不想再经历那种无能为力，被选择的自己。</li>
<li>人与人的交流，真的应该是面对面的沟通；那才是最直接也是最深刻的沟通方式。</li>
</ol>
<p><br></p>
<h3 id="后续任务"><a href="#后续任务" class="headerlink" title="后续任务"></a>后续任务</h3><ul>
<li><strong>【运动&amp;健康】</strong></li>
</ul>
<ol>
<li>睡眠：23:20入睡，07:20起床；自己的新年目标要努力坚持；</li>
<li>学习游泳，一周去学一次是底线</li>
</ol>
<ul>
<li><strong>【阅读&amp;学习】</strong></li>
</ul>
<ol>
<li>完成《文明是副产品》的读书笔记，继续阅读余下两本《代价论》《信任论》</li>
<li>准备“证券从业资格”考试，并争取顺利通过</li>
<li>Python，要去应用，去实践；</li>
</ol>
<ul>
<li>[ ] <strong>【投资】</strong></li>
</ul>
<ol>
<li>去了解个人贷款的途径与方式、金额及利率；</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;5月总结&quot;&gt;&lt;a href=&quot;#5月总结&quot; class=&quot;headerlink&quot; title=&quot;5月总结&quot;&gt;&lt;/a&gt;5月总结&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chf2012/P-markdownpic/master/个人日志_2017年5月总结_01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你要掌握自己的人生，拥有自己的选择权，而非被选择。当你不够强大，无能为力的时候，就只能被选择。而留给你的只有无奈与不甘。&lt;/strong&gt; —— 2017.05.27 去往迪卡侬的路上&lt;/p&gt;
    
    </summary>
    
      <category term="个人塑造" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
      <category term="个人日志" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="个人日志" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
      <category term="个人塑造" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E5%A1%91%E9%80%A0/"/>
    
  </entry>
  
</feed>
